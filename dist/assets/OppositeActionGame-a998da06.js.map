{"version":3,"file":"OppositeActionGame-a998da06.js","sources":["../../src/game-engine/OppositeActionGame.ts"],"sourcesContent":["// OppositeActionGame.ts\n// Drop-in short game template (PixiJS + TypeScript)\n// Register under key 'opposite_action' in your factory/registry.\n//\n// Gameplay summary:\n// - The game shows a LEFT or RIGHT cue (text + arrow).\n// - Player must tap the OPPOSITE side (right for LEFT cue, left for RIGHT cue).\n// - Each cue has a short reaction window. Successes required before time runs out.\n//\n// Project compatibility notes:\n// - Do NOT narrow base types; we import GameTemplate & GameSettings only.\n// - Do NOT redeclare base fields like `duration` or `difficulty` here.\n// - Internal `finished` flag avoids relying on a specific GameState union.\n// - Results are emitted via `onGameEnd(success, score)`.\nimport { Application, Container, Graphics, Text, FederatedPointerEvent } from 'pixi.js';\nimport { GameTemplate, type GameSettings } from './GameTemplate';\n\nexport type Difficulty = 'easy' | 'normal' | 'hard';\n\nexport interface OppositeActionSettings extends GameSettings {\n  rounds?: number;        // number of successful opposite taps needed (defaults by difficulty)\n  windowMs?: number;      // reaction window per cue in ms (defaults by difficulty)\n  missesAllowed?: number; // max misses before fail (defaults by difficulty)\n  palette?: 'cool' | 'warm'; // optional color theme\n}\n\n// ---- helpers ----\nfunction isDifficulty(v: unknown): v is Difficulty {\n  return v === 'easy' || v === 'normal' || v === 'hard';\n}\nfunction getDifficulty(settings: GameSettings): Difficulty {\n  const d = (settings as any).difficulty;\n  return isDifficulty(d) ? d : 'normal';\n}\nfunction secondsToMs(s: number | undefined, fallbackMs: number) {\n  if (typeof s === 'number' && isFinite(s)) return Math.max(1000, Math.round(s * 1000));\n  return fallbackMs;\n}\nfunction clamp(x: number, lo: number, hi: number) { return Math.max(lo, Math.min(hi, x)); }\n\nexport class OppositeActionGame extends GameTemplate {\n  public onGameEnd?: (success: boolean, score: number) => void;\n\n  private scene = new Container();\n  private finished = false;\n  private remainMs = 30_000;\n\n  // layout & UI\n  private leftZone!: Graphics;\n  private rightZone!: Graphics;\n  private cueText!: Text;\n  private cueArrow!: Graphics;\n\n  // runtime\n  private roundsNeeded = 10;\n  private roundsDone = 0;\n  private missesAllowed = 2;\n  private misses = 0;\n  private windowMs = 1200;\n  private cueRemainMs = 0;\n  private awaiting = false;\n  private requiredSide: 'left' | 'right' = 'left'; // opposite of displayed cue\n  private displayedSide: 'left' | 'right' = 'left';\n\n  // scoring\n  private score = 0;\n  private combo = 0;\n\n  // palette\n  private colors = {\n    bgTop: 0x0ea5e9,\n    bgBottom: 0x022c44,\n    left: 0x0ea5e9,\n    right: 0xf97316,\n    good: 0x92e6a7,\n    bad: 0xff5a5a,\n    text: 0xffffff,\n  };\n\n  constructor(app: Application, settings: OppositeActionSettings) {\n    super(app, settings);\n  }\n\n  async createScene(): Promise<void> {\n    const s = (this as any).settings as OppositeActionSettings;\n    const diff = getDifficulty(s);\n\n    // duration\n    this.remainMs = secondsToMs((s as any).duration as number, 30_000);\n\n    // difficulty presets\n    if (diff === 'easy') {\n      this.roundsNeeded = 8; this.windowMs = 1400; this.missesAllowed = 3;\n    } else if (diff === 'hard') {\n      this.roundsNeeded = 12; this.windowMs = 900; this.missesAllowed = 1;\n    } else {\n      this.roundsNeeded = 10; this.windowMs = 1200; this.missesAllowed = 2;\n    }\n    // user overrides\n    if (typeof s.rounds === 'number' && isFinite(s.rounds)) this.roundsNeeded = clamp(Math.round(s.rounds), 4, 30);\n    if (typeof s.windowMs === 'number' && isFinite(s.windowMs)) this.windowMs = clamp(Math.round(s.windowMs), 400, 4000);\n    if (typeof s.missesAllowed === 'number' && isFinite(s.missesAllowed)) this.missesAllowed = clamp(Math.round(s.missesAllowed), 0, 10);\n    if (s.palette === 'warm') {\n      this.colors.bgTop = 0xffa94d; this.colors.bgBottom = 0x5a2a00;\n      this.colors.left = 0xffc078; this.colors.right = 0xff8787;\n    }\n\n    const W = this.app.renderer.width, H = this.app.renderer.height;\n\n    // background (simple split tint)\n    const bg = new Graphics();\n    bg.beginFill(this.colors.bgTop); bg.drawRect(0, 0, W, H/2); bg.endFill();\n    bg.beginFill(this.colors.bgBottom); bg.drawRect(0, H/2, W, H/2); bg.endFill();\n    this.scene.addChild(bg);\n\n    // left/right hit zones (semi-transparent overlays)\n    this.leftZone = new Graphics();\n    this.leftZone.beginFill(this.colors.left, 0.12);\n    this.leftZone.drawRect(0, 0, W/2, H);\n    this.leftZone.endFill();\n    this.leftZone.eventMode = 'static';\n    this.leftZone.on('pointertap', (e: FederatedPointerEvent) => { e.stopPropagation(); this.onTap('left'); });\n    this.scene.addChild(this.leftZone);\n\n    this.rightZone = new Graphics();\n    this.rightZone.beginFill(this.colors.right, 0.12);\n    this.rightZone.drawRect(W/2, 0, W/2, H);\n    this.rightZone.endFill();\n    this.rightZone.eventMode = 'static';\n    this.rightZone.on('pointertap', (e: FederatedPointerEvent) => { e.stopPropagation(); this.onTap('right'); });\n    this.scene.addChild(this.rightZone);\n\n    // cue text\n    this.cueText = new Text('READY', {\n      fontFamily: 'sans-serif', fontSize: Math.floor(Math.min(W, H) * 0.08),\n      fill: this.colors.text, stroke: 0x000000, strokeThickness: 5,\n    });\n    this.cueText.anchor.set(0.5);\n    this.cueText.x = W / 2; this.cueText.y = H * 0.28;\n    this.scene.addChild(this.cueText);\n\n    // arrow\n    this.cueArrow = new Graphics();\n    this.scene.addChild(this.cueArrow);\n\n    this.container.addChild(this.scene);\n\n    // start first cue\n    this.nextCue();\n  }\n\n  handleInput(_e: FederatedPointerEvent): void {\n    // not used\n  }\n\n  updateGame(deltaTime: number): void {\n    if (this.finished) return;\n    const dtMs = deltaTime * (1000 / 60);\n    this.remainMs -= dtMs;\n    if (this.remainMs <= 0) {\n      this.remainMs = 0;\n      // win if already met roundsNeeded, else fail\n      this.finish(this.roundsDone >= this.roundsNeeded);\n      return;\n    }\n    if (this.awaiting) {\n      this.cueRemainMs -= dtMs;\n      if (this.cueRemainMs <= 0) {\n        this.registerMiss('timeout');\n      }\n    }\n  }\n\n  protected showResult(result: { success: boolean; score: number }): void {\n    this.onGameEnd?.(result.success, result.score);\n  }\n\n  // ---- internals ----\n  private nextCue() {\n    const W = this.app.renderer.width, H = this.app.renderer.height;\n    // randomly choose a displayed side; required is opposite\n    this.displayedSide = Math.random() < 0.5 ? 'left' : 'right';\n    this.requiredSide = this.displayedSide === 'left' ? 'right' : 'left';\n\n    // text + arrow\n    this.cueText.text = this.displayedSide.toUpperCase();\n    this.drawArrow(this.displayedSide === 'left' ? -1 : 1, W, H);\n\n    this.cueRemainMs = this.windowMs;\n    this.awaiting = true;\n  }\n\n  private onTap(side: 'left' | 'right') {\n    if (!this.awaiting || this.finished) return;\n    if (side === this.requiredSide) {\n      // success\n      this.awaiting = false;\n      this.roundsDone++;\n      this.combo++;\n      const base = 300;\n      const comboBonus = Math.min(7, this.combo) * 60;\n      const timeFrac = this.cueRemainMs / this.windowMs; // faster -> more\n      const speedBonus = Math.round(120 * timeFrac);\n      this.score += base + comboBonus + speedBonus;\n      // slightly tighten window over time\n      this.windowMs = clamp(this.windowMs * 0.985, 550, 4000);\n      // visual feedback (flash zone)\n      this.flashZone(side, this.colors.good);\n      // goal reached?\n      if (this.roundsDone >= this.roundsNeeded) {\n        this.finish(true);\n      } else {\n        setTimeout(() => this.nextCue(), 80);\n      }\n    } else {\n      this.registerMiss('wrong');\n    }\n  }\n\n  private registerMiss(_reason: 'wrong' | 'timeout') {\n    if (!this.awaiting || this.finished) return;\n    this.awaiting = false;\n    this.combo = 0;\n    this.misses++;\n    this.score = Math.max(0, this.score - 120);\n    const badSide = this.requiredSide === 'left' ? 'right' : 'left'; // the tapped/would-be side\n    this.flashZone(badSide as any, this.colors.bad);\n    if (this.misses > this.missesAllowed) {\n      this.finish(false);\n    } else {\n      setTimeout(() => this.nextCue(), 120);\n    }\n  }\n\n  private drawArrow(dir: -1 | 1, W: number, H: number) {\n    const g = this.cueArrow;\n    g.clear();\n    const len = Math.min(W, H) * 0.25;\n    const cx = W / 2; const cy = H * 0.58;\n    const shaftW = Math.max(10, Math.floor(len * 0.08));\n    const head = Math.max(20, Math.floor(len * 0.22));\n\n    // shaft\n    g.lineStyle(shaftW, 0xffffff, 0.95);\n    g.moveTo(cx - dir * len * 0.5, cy);\n    g.lineTo(cx + dir * len * 0.5, cy);\n\n    // arrow head (triangle)\n    g.beginFill(0xffffff, 0.95);\n    if (dir < 0) {\n      g.moveTo(cx - len * 0.5, cy);\n      g.lineTo(cx - len * 0.5 + head, cy - head * 0.7);\n      g.lineTo(cx - len * 0.5 + head, cy + head * 0.7);\n    } else {\n      g.moveTo(cx + len * 0.5, cy);\n      g.lineTo(cx + len * 0.5 - head, cy - head * 0.7);\n      g.lineTo(cx + len * 0.5 - head, cy + head * 0.7);\n    }\n    g.closePath(); g.endFill();\n  }\n\n  private flashZone(side: 'left' | 'right', color: number) {\n    const W = this.app.renderer.width, H = this.app.renderer.height;\n    const panel = new Graphics();\n    panel.beginFill(color, 0.28);\n    if (side === 'left') panel.drawRect(0, 0, W/2, H);\n    else panel.drawRect(W/2, 0, W/2, H);\n    panel.endFill();\n    this.scene.addChild(panel);\n    // fade out\n    const steps = 8;\n    for (let i = 1; i <= steps; i++) {\n      setTimeout(() => { panel.alpha = Math.max(0, 0.28 * (1 - i/steps)); if (i === steps) this.scene.removeChild(panel); }, i * 30);\n    }\n  }\n\n  private finish(success: boolean) {\n    if (this.finished) return;\n    this.finished = true;\n    const timeBonus = Math.round(this.remainMs / 8);\n    const roundBonus = this.roundsDone * 100;\n    const missPenalty = this.misses * 120;\n    const score = Math.max(0, this.score + timeBonus + roundBonus - missPenalty + (success ? 600 : 0));\n    this.onGameEnd?.(success, score);\n  }\n}\n"],"names":["isDifficulty","v","getDifficulty","settings","secondsToMs","s","fallbackMs","clamp","x","lo","hi","OppositeActionGame","GameTemplate","app","__publicField","Container","diff","W","H","bg","Graphics","e","Text","_e","deltaTime","dtMs","result","_a","side","base","comboBonus","timeFrac","speedBonus","_reason","badSide","dir","g","len","cx","cy","shaftW","head","color","panel","steps","i","success","timeBonus","roundBonus","missPenalty","score"],"mappings":"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"}