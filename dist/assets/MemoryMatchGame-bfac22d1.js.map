{"version":3,"file":"MemoryMatchGame-bfac22d1.js","sources":["../../src/game-engine/MemoryMatchGame.ts"],"sourcesContent":["import { Application, Container, Graphics, Sprite, Texture, Text, FederatedPointerEvent } from 'pixi.js';\nimport { GameTemplate, type GameSettings } from './GameTemplate';\n\n// ---- Local types ----\nexport type Difficulty = 'easy' | 'normal' | 'hard';\nexport type CharacterType = 'girl' | 'animal' | 'child';\n\nexport interface MemoryMatchSettings extends GameSettings {\n  cardPairs?: number;            // default 8 pairs\n  characterType?: CharacterType; // girl / animal / child\n}\n\n// ---- Small utilities ----\nfunction isDifficulty(v: unknown): v is Difficulty {\n  return v === 'easy' || v === 'normal' || v === 'hard';\n}\n\nfunction getDifficulty(settings: GameSettings): Difficulty {\n  const d = (settings as any).difficulty;\n  return isDifficulty(d) ? d : 'normal';\n}\n\nfunction applyDifficultyToPairs(basePairs: number, diff: Difficulty): number {\n  if (diff === 'easy') return Math.max(2, Math.round(basePairs * 0.7));\n  if (diff === 'hard') return Math.round(basePairs * 1.5);\n  return basePairs;\n}\n\nfunction createGradientSprite(app: Application, topHex: number, bottomHex: number, width?: number, height?: number) {\n  const w = width ?? app.renderer.width;\n  const h = height ?? app.renderer.height;\n  const canvas = document.createElement('canvas');\n  canvas.width = w; \n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n  const g = ctx.createLinearGradient(0, 0, 0, h);\n  const hex = (n: number) => `#${n.toString(16).padStart(6, '0')}`;\n  g.addColorStop(0, hex(topHex));\n  g.addColorStop(1, hex(bottomHex));\n  ctx.fillStyle = g; \n  ctx.fillRect(0, 0, w, h);\n  return new Sprite(Texture.from(canvas));\n}\n\nfunction drawRoundedRect(g: Graphics, w: number, h: number, radius = 16, color = 0xffffff, alpha = 1) {\n  g.clear();\n  g.beginFill(color, alpha);\n  g.drawRoundedRect(-w/2, -h/2, w, h, radius);\n  g.endFill();\n}\n\n// 修正: drawStarの代替実装\nfunction drawStar(g: Graphics, x: number, y: number, points: number, radius: number, color: number) {\n  const innerRadius = radius * 0.5;\n  const step = (Math.PI * 2) / points;\n  const halfStep = step / 2;\n  \n  g.beginFill(color);\n  g.moveTo(x + Math.cos(-Math.PI / 2) * radius, y + Math.sin(-Math.PI / 2) * radius);\n  \n  for (let i = 0; i < points; i++) {\n    const angle = i * step - Math.PI / 2;\n    const innerAngle = angle + halfStep;\n    \n    // 内側の点\n    g.lineTo(\n      x + Math.cos(innerAngle) * innerRadius,\n      y + Math.sin(innerAngle) * innerRadius\n    );\n    \n    // 外側の点\n    g.lineTo(\n      x + Math.cos(angle + step) * radius,\n      y + Math.sin(angle + step) * radius\n    );\n  }\n  \n  g.closePath();\n  g.endFill();\n}\n\n// simple ease-out pulse\nfunction createPulse(onUpdate: (scale: number)=>void, durationMs = 200, overshoot = 1.12) {\n  let t = 0;\n  let playing = true;\n  const base = 1;\n  return {\n    update(dtMs: number) {\n      if (!playing) return;\n      t += dtMs;\n      const p = Math.min(1, t / durationMs);\n      const ease = 1 - Math.pow(1 - p, 2);\n      const k = (p < 0.5) ? (ease * 2) : (2 - ease * 2);\n      const s = base + (overshoot - base) * k;\n      onUpdate(s);\n      if (p >= 1) playing = false;\n    },\n    isDone() { return !playing; }\n  };\n}\n\n// ---- Theme colors ----\nconst COLORS = {\n  girl:   { primary: 0xd946ef, secondary: 0xfce7ff, accent: 0xa21caf },\n  animal: { primary: 0xf97316, secondary: 0xfff7ed, accent: 0xea580c },\n  child:  { primary: 0x0ea5e9, secondary: 0xf0f9ff, accent: 0x0284c7 },\n} as const;\n\n// ---- Card model ----\ninterface Card {\n  id: number;        // pair id\n  index: number;     // board index\n  root: Container;   // tap target\n  front: Graphics;   // face up\n  back: Graphics;    // face down\n  flipped: boolean;\n  matched: boolean;\n}\n\n// ---- MemoryMatchGame ----\nexport class MemoryMatchGame extends GameTemplate {\n  public onGameEnd?: (success: boolean, score: number) => void;\n\n  // scene\n  private scene = new Container();\n  private cards: Card[] = [];\n  private first?: Card; \n  private second?: Card;\n  private gridCols = 4;\n  private matchedPairs = 0;\n  private targetPairs = 8;\n  private anims: { update(dt: number): void; isDone(): boolean }[] = [];\n  protected settings: MemoryMatchSettings;\n\n  constructor(app: Application, settings: MemoryMatchSettings) {\n    // GameSettings基底型でsuperを呼ぶため型変換\n    super(app, settings as GameSettings);\n    this.settings = settings;\n  }\n\n  async createScene(): Promise<void> {\n    const diff = getDifficulty(this.settings);\n    const basePairs = this.settings.cardPairs ?? 8;\n    this.targetPairs = applyDifficultyToPairs(basePairs, diff);\n\n    // background\n    const ct = (this.settings.characterType ?? 'girl') as CharacterType;\n    const theme = COLORS[ct];\n    const bg = createGradientSprite(this.app, theme.secondary, theme.primary);\n    this.scene.addChild(bg);\n\n    // prepare grid\n    const cols = this.gridCols;\n    const rows = Math.ceil((this.targetPairs * 2) / cols);\n    const W = this.app.renderer.width; \n    const H = this.app.renderer.height;\n    const cardW = Math.min(120, (W - 80) / cols);\n    const cardH = Math.min(160, (H - 200) / rows);\n\n    const ids: number[] = [];\n    for (let i = 0; i < this.targetPairs; i++) ids.push(i, i);\n    \n    // shuffle\n    for (let i = ids.length - 1; i > 0; i--) {\n      const j = (Math.random() * (i + 1)) | 0; \n      [ids[i], ids[j]] = [ids[j], ids[i]];\n    }\n\n    const grid = new Container();\n    this.scene.addChild(grid);\n\n    const gapX = (W - cols * cardW) / (cols + 1);\n    const gapY = (H - 160 - rows * cardH) / (rows + 1);\n\n    for (let i = 0; i < ids.length; i++) {\n      const id = ids[i];\n      const root = new Container();\n      root.eventMode = 'static';\n      root.cursor = 'pointer';\n      const front = new Graphics();\n      const back  = new Graphics();\n      \n      drawRoundedRect(back,  cardW, cardH, 22, theme.accent, 1);\n      drawRoundedRect(front, cardW, cardH, 22, 0xffffff, 1);\n\n      // symbol\n      const symbol = this.createCharacterSymbol(id, ct, cardW, cardH);\n      front.addChild(symbol);\n\n      front.visible = false;\n      root.addChild(back, front);\n\n      // card tap handler\n      root.on('pointertap', (e: FederatedPointerEvent) => {\n        e.stopPropagation();\n        this.handleCardTap(i);\n      });\n\n      const col = i % cols; \n      const row = (i / cols) | 0;\n      root.x = gapX + (col * (cardW + gapX)) + cardW / 2;\n      root.y = 120  + (row * (cardH + gapY)) + cardH / 2;\n\n      grid.addChild(root);\n      this.cards.push({ id, index: i, root, front, back, flipped: false, matched: false });\n    }\n\n    // attach scene to base container\n    this.container.addChild(this.scene);\n  }\n\n  handleInput(_event: FederatedPointerEvent): void {\n    // card-level listeners manage input\n  }\n\n  private handleCardTap(cardIndex: number) {\n    if (this.gameState !== 'playing') return;\n    const card = this.cards[cardIndex];\n    if (!card || card.flipped || card.matched) return;\n\n    this.flipCard(card, true);\n\n    if (!this.first) { \n      this.first = card; \n      return; \n    }\n    \n    if (!this.second) {\n      this.second = card;\n      // lock input briefly to avoid triple taps\n      const prevMode = this.container.eventMode;\n      this.container.eventMode = 'none';\n      setTimeout(() => {\n        this.judge();\n        this.container.eventMode = prevMode ?? 'auto';\n      }, 500);\n    }\n  }\n\n  updateGame(deltaTime: number): void {\n    // lightweight animation updates\n    const dtMs = deltaTime * (1000 / 60);\n    this.anims = this.anims.filter(a => { \n      a.update(dtMs); \n      return !a.isDone(); \n    });\n  }\n\n  // ---- internals ----\n  private flipCard(card: Card, faceUp: boolean) {\n    card.flipped = faceUp;\n    card.front.visible = faceUp;\n    card.back.visible  = !faceUp;\n    const r = card.root;\n    const anim = createPulse((s) => { r.scale.set(s); }, 200, 1.10);\n    this.anims.push(anim);\n  }\n\n  private judge() {\n    if (!this.first || !this.second) return;\n    const a = this.first, b = this.second;\n\n    if (a.id === b.id) {\n      a.matched = b.matched = true;\n      this.matchedPairs++;\n      // update score (100 per pair)\n      this.currentScore = this.matchedPairs * 100;\n\n      // light fade feedback\n      const fade = { t: 0 };\n      const anim = {\n        update: (dt: number) => { \n          fade.t += dt; \n          const p = Math.min(1, fade.t / 240); \n          a.root.alpha = b.root.alpha = 1 - p * 0.2; \n        },\n        isDone: () => fade.t >= 240,\n      };\n      this.anims.push(anim);\n\n      // 重要: ゲーム終了条件チェック\n      if (this.matchedPairs >= this.targetPairs) {\n        // 少し遅延してからゲーム終了処理\n        setTimeout(() => {\n          this.endGame(true);\n        }, 800);\n      }\n    } else {\n      // 不一致の場合は少し待ってからカードを戻す\n      setTimeout(() => {\n        this.flipCard(a, false);\n        this.flipCard(b, false);\n      }, 800);\n    }\n\n    this.first = this.second = undefined;\n  }\n\n  // Override win condition to support \"all pairs matched\"\n  protected checkWinCondition(): boolean {\n    return this.matchedPairs >= this.targetPairs;\n  }\n\n  // 重要: showResultメソッドをオーバーライド（自動進行のため）\n  protected showResult(result: { success: boolean; score: number; message: string }): void {\n    console.log(`MemoryMatch Game Result: ${result.success ? 'SUCCESS' : 'FAILED'}, Score: ${result.score}`);\n    \n    // GameSequenceのonGameEndを呼び出し（自動進行のため）\n    if (this.onGameEnd) {\n      this.onGameEnd(result.success, result.score);\n    }\n    \n    // 親クラスのshowResultは呼ばない（UIが重複するため）\n    // super.showResult(result);\n  }\n\n  private createCharacterSymbol(id: number, type: CharacterType, w: number, h: number) {\n    const g = new Graphics();\n    const theme = COLORS[type];\n\n    // face\n    g.beginFill(0xffffff);\n    g.drawCircle(0, 0, Math.min(w, h) * 0.22);\n    g.endFill();\n\n    // eyes\n    g.beginFill(0x222222);\n    g.drawCircle(-w * 0.06, -h * 0.02, Math.min(w, h) * 0.03);\n    g.drawCircle( w * 0.06, -h * 0.02, Math.min(w, h) * 0.03);\n    g.endFill();\n\n    // ID-based variation for unique symbols\n    const variation = id % 4;\n\n    if (type === 'girl') {\n      if (variation === 0) {\n        drawStar(g, w * 0.1, -h * 0.15, 5, Math.min(w, h) * 0.06, theme.primary);\n      } else if (variation === 1) {\n        g.beginFill(theme.primary);\n        g.drawCircle(w * 0.1, -h * 0.15, Math.min(w, h) * 0.04);\n        g.endFill();\n      } else if (variation === 2) {\n        g.beginFill(theme.primary);\n        g.drawRect(-Math.min(w, h) * 0.03, -h * 0.18, Math.min(w, h) * 0.06, Math.min(w, h) * 0.06);\n        g.endFill();\n      } else {\n        g.beginFill(theme.accent);\n        g.drawEllipse(0, -h * 0.15, Math.min(w, h) * 0.08, Math.min(w, h) * 0.04);\n        g.endFill();\n      }\n    } else if (type === 'animal') {\n      // ears - always present\n      g.beginFill(theme.primary);\n      g.drawCircle(-w * 0.12, -h * 0.2, Math.min(w, h) * 0.06);\n      g.drawCircle( w * 0.12, -h * 0.2, Math.min(w, h) * 0.06);\n      g.endFill();\n      \n      if (variation === 0) {\n        // tail ellipse\n        g.beginFill(theme.accent);\n        g.drawEllipse(w * 0.2, 0, Math.min(w, h) * 0.05, Math.min(w, h) * 0.02);\n        g.endFill();\n      } else if (variation === 1) {\n        // nose\n        g.beginFill(theme.accent);\n        g.drawCircle(0, h * 0.02, Math.min(w, h) * 0.02);\n        g.endFill();\n      } else if (variation === 2) {\n        // stripes\n        g.beginFill(theme.accent);\n        for (let i = 0; i < 3; i++) {\n          g.drawRect(-Math.min(w, h) * 0.15, -h * 0.05 + i * Math.min(w, h) * 0.05, Math.min(w, h) * 0.3, Math.min(w, h) * 0.02);\n        }\n        g.endFill();\n      }\n    } else if (type === 'child') {\n      // outline\n      g.lineStyle(3, theme.accent, 1);\n      g.drawCircle(0, 0, Math.min(w, h) * 0.24);\n      g.lineStyle();\n      \n      if (variation === 0) {\n        // cheeks\n        g.beginFill(theme.primary);\n        g.drawCircle(-w * 0.12, h * 0.04, Math.min(w, h) * 0.025);\n        g.drawCircle( w * 0.12, h * 0.04, Math.min(w, h) * 0.025);\n        g.endFill();\n      } else if (variation === 1) {\n        // hat\n        g.beginFill(theme.primary);\n        g.drawRect(-Math.min(w, h) * 0.1, -h * 0.25, Math.min(w, h) * 0.2, Math.min(w, h) * 0.08);\n        g.endFill();\n      } else if (variation === 2) {\n        // smile\n        g.lineStyle(2, theme.accent, 1);\n        g.arc(0, h * 0.08, Math.min(w, h) * 0.08, 0, Math.PI);\n        g.lineStyle();\n      }\n    }\n\n    g.x = 0; \n    g.y = 0;\n    return g;\n  }\n}"],"names":["isDifficulty","v","getDifficulty","settings","d","applyDifficultyToPairs","basePairs","diff","createGradientSprite","app","topHex","bottomHex","width","height","w","h","canvas","ctx","g","hex","n","Sprite","Texture","drawRoundedRect","radius","color","alpha","drawStar","x","y","points","innerRadius","step","halfStep","i","angle","innerAngle","createPulse","onUpdate","durationMs","overshoot","t","playing","base","dtMs","p","ease","k","s","COLORS","MemoryMatchGame","GameTemplate","__publicField","Container","ct","theme","bg","cols","rows","W","H","cardW","cardH","ids","j","grid","gapX","gapY","id","root","front","Graphics","back","symbol","e","col","row","_event","cardIndex","card","prevMode","deltaTime","a","faceUp","r","anim","b","fade","dt","result","type","variation"],"mappings":"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"}