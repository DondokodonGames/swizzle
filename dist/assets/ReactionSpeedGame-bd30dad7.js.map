{"version":3,"file":"ReactionSpeedGame-bd30dad7.js","sources":["../../src/game-engine/ReactionSpeedGame.ts"],"sourcesContent":["// ReactionSpeedGame.ts\n// Drop-in short game template (PixiJS + TypeScript)\n// Register under key 'reaction_speed' in your factory/registry.\n//\n// Gameplay:\n// - Repeated trials measure reaction time.\n// - Screen shows \"WAIT...\" for a random delay. If you tap early → MISS.\n// - When it flashes \"TAP!\", tap as fast as possible. Slow or timeouts → MISS.\n// - Clear enough valid trials before overall timer ends.\n//\n// Project compatibility notes:\n// - Do NOT narrow base types; import GameTemplate & GameSettings only.\n// - Do NOT redeclare base fields like duration/difficulty/timerText.\n// - Use an internal `finished` flag (avoid relying on a specific GameState union).\n// - Emit results via `onGameEnd(success, score)`.\nimport { Application, Container, Graphics, Text, FederatedPointerEvent } from 'pixi.js';\nimport { GameTemplate, type GameSettings } from './GameTemplate';\n\nexport type Difficulty = 'easy' | 'normal' | 'hard';\n\nexport interface ReactionSpeedSettings extends GameSettings {\n  trials?: number;        // number of successful trials needed\n  minDelayMs?: number;    // random wait lower bound (before \"TAP!\")\n  maxDelayMs?: number;    // random wait upper bound\n  timeoutMs?: number;     // max allowed reaction time after signal\n  missesAllowed?: number; // early taps / timeouts allowed overall\n  resultShowMs?: number;  // how long to show result per trial\n  palette?: 'neon' | 'forest' | 'night';\n}\n\n// ---- helpers ----\nfunction isDifficulty(v: unknown): v is Difficulty { return v === 'easy' || v === 'normal' || v === 'hard'; }\nfunction getDifficulty(settings: GameSettings): Difficulty {\n  const d = (settings as any).difficulty;\n  return isDifficulty(d) ? d : 'normal';\n}\nfunction secondsToMs(s: number | undefined, fallbackMs: number) {\n  if (typeof s === 'number' && isFinite(s)) return Math.max(1000, Math.round(s * 1000));\n  return fallbackMs;\n}\nfunction clamp(x: number, lo: number, hi: number) { return Math.max(lo, Math.min(hi, x)); }\n\ntype Phase = 'ready' | 'waiting' | 'go' | 'result';\n\nexport class ReactionSpeedGame extends GameTemplate {\n  public onGameEnd?: (success: boolean, score: number) => void;\n\n  private scene = new Container();\n  private finished = false;\n  private remainMs = 30_000;\n\n  // UI\n  private titleText!: Text;\n  private infoText!: Text;\n  private promptText!: Text;\n  private smallText!: Text;\n  private bar!: Graphics;\n  private bg!: Graphics;\n\n  // trial runtime\n  private phase: Phase = 'ready';\n  private phaseRemain = 0;\n  private minDelay = 800;\n  private maxDelay = 2200;\n  private timeoutMs = 1200;\n  private resultShowMs = 700;\n\n  private trialsNeeded = 7;\n  private successes = 0;\n  private misses = 0;\n  private missesAllowed = 3;\n\n  private bestMs = Infinity;\n  private lastMs = 0;\n  private goElapsed = 0;\n  private waitTarget = 0; // randomized wait before \"go\"\n\n  // scoring\n  private score = 0;\n\n  // colors\n  private colors = {\n    bgWaitTop: 0x0b1020, bgWaitBottom: 0x151a2b,\n    bgGoTop: 0x16a34a, bgGoBottom: 0x065f46,\n    bad: 0xef4444, text: 0xffffff,\n    barBack: 0x374151, barFill: 0x3b82f6,\n  };\n\n  constructor(app: Application, settings: ReactionSpeedSettings) {\n    super(app, settings);\n  }\n\n  async createScene(): Promise<void> {\n    const s = (this as any).settings as ReactionSpeedSettings;\n    const diff = getDifficulty(s);\n    const W = this.app.renderer.width, H = this.app.renderer.height;\n\n    // overall duration\n    this.remainMs = secondsToMs((s as any).duration as number, 30_000);\n\n    // presets\n    if (diff === 'easy') {\n      this.trialsNeeded = 5; this.missesAllowed = 4;\n      this.minDelay = 700; this.maxDelay = 2000; this.timeoutMs = 1400;\n      this.resultShowMs = 800;\n    } else if (diff === 'hard') {\n      this.trialsNeeded = 9; this.missesAllowed = 2;\n      this.minDelay = 900; this.maxDelay = 2600; this.timeoutMs = 1000;\n      this.resultShowMs = 600;\n    } else {\n      this.trialsNeeded = 7; this.missesAllowed = 3;\n      this.minDelay = 800; this.maxDelay = 2200; this.timeoutMs = 1200;\n      this.resultShowMs = 700;\n    }\n\n    // overrides\n    if (typeof s.trials === 'number' && isFinite(s.trials)) this.trialsNeeded = clamp(Math.round(s.trials), 3, 30);\n    if (typeof s.minDelayMs === 'number' && isFinite(s.minDelayMs)) this.minDelay = clamp(Math.round(s.minDelayMs), 200, 4000);\n    if (typeof s.maxDelayMs === 'number' && isFinite(s.maxDelayMs)) this.maxDelay = clamp(Math.round(s.maxDelayMs), this.minDelay + 200, 8000);\n    if (typeof s.timeoutMs === 'number' && isFinite(s.timeoutMs)) this.timeoutMs = clamp(Math.round(s.timeoutMs), 400, 6000);\n    if (typeof s.missesAllowed === 'number' && isFinite(s.missesAllowed)) this.missesAllowed = clamp(Math.round(s.missesAllowed), 0, 10);\n    if (typeof s.resultShowMs === 'number' && isFinite(s.resultShowMs)) this.resultShowMs = clamp(Math.round(s.resultShowMs), 200, 4000);\n\n    if (s.palette === 'forest') {\n      this.colors.bgWaitTop = 0x14532d; this.colors.bgWaitBottom = 0x052e16;\n      this.colors.bgGoTop = 0x22c55e; this.colors.bgGoBottom = 0x166534;\n      this.colors.barFill = 0x34d399;\n    } else if (s.palette === 'neon') {\n      this.colors.bgWaitTop = 0x1f1147; this.colors.bgWaitBottom = 0x0b032d;\n      this.colors.bgGoTop = 0xd946ef; this.colors.bgGoBottom = 0x7c3aed;\n      this.colors.barFill = 0xa78bfa;\n    } else if (s.palette === 'night') {\n      this.colors.bgWaitTop = 0x0b1020; this.colors.bgWaitBottom = 0x151a2b;\n      this.colors.bgGoTop = 0x1d4ed8; this.colors.bgGoBottom = 0x1e3a8a;\n      this.colors.barFill = 0x3b82f6;\n    }\n\n    // background graphic (we'll redraw color blocks depending on phase)\n    this.bg = new Graphics();\n    this.scene.addChild(this.bg);\n\n    // title\n    this.titleText = new Text('Reaction Speed', {\n      fontFamily: 'sans-serif', fontSize: Math.floor(Math.min(W, H) * 0.06),\n      fill: this.colors.text, stroke: 0x000000, strokeThickness: 5,\n    });\n    this.titleText.anchor.set(0.5);\n    this.titleText.x = W / 2; this.titleText.y = Math.floor(H * 0.18);\n    this.scene.addChild(this.titleText);\n\n    // info\n    this.infoText = new Text('', {\n      fontFamily: 'sans-serif', fontSize: Math.floor(Math.min(W, H) * 0.045),\n      fill: this.colors.text, stroke: 0x000000, strokeThickness: 4,\n    });\n    this.infoText.anchor.set(0.5);\n    this.infoText.x = W / 2; this.infoText.y = Math.floor(H * 0.26);\n    this.scene.addChild(this.infoText);\n\n    // prompt\n    this.promptText = new Text('Ready?', {\n      fontFamily: 'sans-serif', fontSize: Math.floor(Math.min(W, H) * 0.12),\n      fill: this.colors.text, stroke: 0x000000, strokeThickness: 8,\n    });\n    this.promptText.anchor.set(0.5);\n    this.promptText.x = W / 2; this.promptText.y = Math.floor(H * 0.46);\n    this.scene.addChild(this.promptText);\n\n    // small text\n    this.smallText = new Text('Tap when it says TAP!', {\n      fontFamily: 'sans-serif', fontSize: Math.floor(Math.min(W, H) * 0.035),\n      fill: this.colors.text, stroke: 0x000000, strokeThickness: 3,\n    });\n    this.smallText.anchor.set(0.5);\n    this.smallText.x = W / 2; this.smallText.y = Math.floor(H * 0.58);\n    this.scene.addChild(this.smallText);\n\n    // time bar (only meaningful during \"go\")\n    this.bar = new Graphics();\n    this.scene.addChild(this.bar);\n\n    // input\n    this.scene.eventMode = 'static';\n    this.scene.on('pointerdown', (e: FederatedPointerEvent) => { e.stopPropagation(); this.onTap(); });\n\n    this.container.addChild(this.scene);\n\n    // start first trial\n    this.nextTrial(true);\n  }\n\n  handleInput(_e: FederatedPointerEvent): void {\n    // not used\n  }\n\n  updateGame(deltaTime: number): void {\n    if (this.finished) return;\n    const dtMs = deltaTime * (1000 / 60);\n\n    // overall timer\n    this.remainMs -= dtMs;\n    if (this.remainMs <= 0) {\n      this.remainMs = 0;\n      this.finish(this.successes >= this.trialsNeeded);\n      return;\n    }\n\n    // phase timer\n    this.phaseRemain -= dtMs;\n    if (this.phase === 'waiting') {\n      if (this.phaseRemain <= 0) {\n        this.switchToGo();\n      }\n    } else if (this.phase === 'go') {\n      this.goElapsed += dtMs;\n      if (this.goElapsed > this.timeoutMs) {\n        // too slow\n        this.registerMiss('timeout');\n      }\n    } else if (this.phase === 'result') {\n      if (this.phaseRemain <= 0) {\n        this.nextTrial();\n      }\n    }\n\n    this.drawBackground();\n    this.drawBar();\n    this.updateInfo();\n  }\n\n  protected showResult(result: { success: boolean; score: number }): void {\n    this.onGameEnd?.(result.success, result.score);\n  }\n\n  // ---- internals ----\n  private updateInfo() {\n    const remainS = Math.ceil(this.remainMs / 1000);\n    const best = isFinite(this.bestMs) ? `${this.bestMs | 0}ms` : '—';\n    this.infoText.text = `Success ${this.successes}/${this.trialsNeeded}   Miss ${this.misses}/${this.missesAllowed}   Best ${best}   Time ${remainS}s`;\n  }\n\n  private drawBackground() {\n    const W = this.app.renderer.width, H = this.app.renderer.height;\n    const top = (this.phase === 'go') ? this.colors.bgGoTop : this.colors.bgWaitTop;\n    const bottom = (this.phase === 'go') ? this.colors.bgGoBottom : this.colors.bgWaitBottom;\n    this.bg.clear();\n    this.bg.beginFill(top); this.bg.drawRect(0, 0, W, Math.floor(H * 0.45)); this.bg.endFill();\n    this.bg.beginFill(bottom); this.bg.drawRect(0, Math.floor(H * 0.45), W, H); this.bg.endFill();\n  }\n\n  private drawBar() {\n    const W = this.app.renderer.width;\n    const y = Math.floor(this.app.renderer.height * 0.66);\n    const w = Math.floor(W * 0.7);\n    const x = Math.floor((W - w) / 2);\n    const h = 12;\n\n    this.bar.clear();\n    if (this.phase === 'go') {\n      const frac = clamp(1 - (this.goElapsed / this.timeoutMs), 0, 1);\n      this.bar.beginFill(0x374151, 0.35); this.bar.drawRoundedRect(x, y, w, h, 6); this.bar.endFill();\n      this.bar.beginFill(this.colors.barFill, 0.95); this.bar.drawRoundedRect(x, y, Math.floor(w * frac), h, 6); this.bar.endFill();\n    }\n  }\n\n  private nextTrial(first = false) {\n    // reset\n    this.phase = 'waiting';\n    this.waitTarget = this.minDelay + Math.random() * (this.maxDelay - this.minDelay);\n    this.phaseRemain = this.waitTarget;\n    this.goElapsed = 0;\n    this.promptText.text = 'WAIT...';\n    this.smallText.text = 'Don’t tap early!';\n    if (!first) this.updateInfo();\n  }\n\n  private switchToGo() {\n    this.phase = 'go';\n    this.goElapsed = 0;\n    this.promptText.text = 'TAP!';\n    this.smallText.text = 'Tap now!';\n  }\n\n  private onTap() {\n    if (this.finished) return;\n    if (this.phase === 'waiting') {\n      // false start\n      this.registerMiss('early');\n    } else if (this.phase === 'go') {\n      // success\n      const rt = Math.max(0, Math.round(this.goElapsed));\n      this.lastMs = rt;\n      this.bestMs = Math.min(this.bestMs, rt);\n      this.successes++;\n      // score: faster = more. 800 for instant → down to 100 at timeout.\n      const speedScore = clamp(800 - rt, 100, 800);\n      this.score += speedScore;\n      this.promptText.text = `${rt} ms`;\n      this.smallText.text = 'Nice!';\n      // result phase\n      this.phase = 'result';\n      this.phaseRemain = this.resultShowMs;\n      // clear condition\n      if (this.successes >= this.trialsNeeded) {\n        this.finish(true);\n      }\n    } else if (this.phase === 'result') {\n      // ignore taps during result phase\n    } else if (this.phase === 'ready') {\n      this.nextTrial();\n    }\n  }\n\n  private registerMiss(reason: 'early' | 'timeout') {\n    this.misses++;\n    const msg = (reason === 'early') ? 'EARLY!' : 'TOO SLOW!';\n    this.promptText.text = msg;\n    this.smallText.text = (reason === 'early') ? 'Wait for TAP!' : 'Try to react faster';\n    // penalty\n    this.score = Math.max(0, this.score - 120);\n    // brief result phase\n    this.phase = 'result';\n    this.phaseRemain = Math.max(400, this.resultShowMs - 200);\n    // fail condition\n    if (this.misses > this.missesAllowed) {\n      this.finish(false);\n    }\n  }\n\n  private finish(success: boolean) {\n    if (this.finished) return;\n    this.finished = true;\n    const timeBonus = Math.round(this.remainMs / 6);\n    const successBonus = this.successes * 60;\n    const missPenalty = this.misses * 140;\n    const bestBonus = isFinite(this.bestMs) ? clamp(500 - this.bestMs, 0, 420) : 0;\n    const score = Math.max(0, this.score + timeBonus + successBonus + bestBonus - missPenalty + (success ? 700 : 0));\n    this.onGameEnd?.(success, score);\n  }\n}\n"],"names":["isDifficulty","v","getDifficulty","settings","d","secondsToMs","s","fallbackMs","clamp","x","lo","hi","ReactionSpeedGame","GameTemplate","app","__publicField","Container","diff","W","H","Graphics","Text","e","_e","deltaTime","dtMs","result","_a","remainS","best","top","bottom","y","w","h","frac","first","rt","speedScore","reason","msg","success","timeBonus","successBonus","missPenalty","bestBonus","score"],"mappings":"qOA+BA,SAASA,EAAaC,EAA6B,CAAE,OAAOA,IAAM,QAAUA,IAAM,UAAYA,IAAM,MAAQ,CAC5G,SAASC,EAAcC,EAAoC,CACzD,MAAMC,EAAKD,EAAiB,WACrB,OAAAH,EAAaI,CAAC,EAAIA,EAAI,QAC/B,CACA,SAASC,EAAYC,EAAuBC,EAAoB,CAC9D,OAAI,OAAOD,GAAM,UAAY,SAASA,CAAC,EAAU,KAAK,IAAI,IAAM,KAAK,MAAMA,EAAI,GAAI,CAAC,EAC7EC,CACT,CACA,SAASC,EAAMC,EAAWC,EAAYC,EAAY,CAAE,OAAO,KAAK,IAAID,EAAI,KAAK,IAAIC,EAAIF,CAAC,CAAC,CAAG,CAInF,MAAMG,UAA0BC,CAAa,CA4ClD,YAAYC,EAAkBX,EAAiC,CAC7D,MAAMW,EAAKX,CAAQ,EA5CdY,EAAA,kBAECA,EAAA,aAAQ,IAAIC,GACZD,EAAA,gBAAW,IACXA,EAAA,gBAAW,KAGXA,EAAA,kBACAA,EAAA,iBACAA,EAAA,mBACAA,EAAA,kBACAA,EAAA,YACAA,EAAA,WAGAA,EAAA,aAAe,SACfA,EAAA,mBAAc,GACdA,EAAA,gBAAW,KACXA,EAAA,gBAAW,MACXA,EAAA,iBAAY,MACZA,EAAA,oBAAe,KAEfA,EAAA,oBAAe,GACfA,EAAA,iBAAY,GACZA,EAAA,cAAS,GACTA,EAAA,qBAAgB,GAEhBA,EAAA,cAAS,KACTA,EAAA,cAAS,GACTA,EAAA,iBAAY,GACZA,EAAA,kBAAa,GAGbA,EAAA,aAAQ,GAGRA,EAAA,cAAS,CACf,UAAW,OAAU,aAAc,QACnC,QAAS,QAAU,WAAY,OAC/B,IAAK,SAAU,KAAM,SACrB,QAAS,QAAU,QAAS,OAAA,EAK9B,CAEA,MAAM,aAA6B,CACjC,MAAM,EAAK,KAAa,SAClBE,EAAOf,EAAc,CAAC,EACtBgB,EAAI,KAAK,IAAI,SAAS,MAAOC,EAAI,KAAK,IAAI,SAAS,OAGzD,KAAK,SAAWd,EAAa,EAAU,SAAoB,GAAM,EAG7DY,IAAS,QACX,KAAK,aAAe,EAAG,KAAK,cAAgB,EAC5C,KAAK,SAAW,IAAK,KAAK,SAAW,IAAM,KAAK,UAAY,KAC5D,KAAK,aAAe,KACXA,IAAS,QAClB,KAAK,aAAe,EAAG,KAAK,cAAgB,EAC5C,KAAK,SAAW,IAAK,KAAK,SAAW,KAAM,KAAK,UAAY,IAC5D,KAAK,aAAe,MAEpB,KAAK,aAAe,EAAG,KAAK,cAAgB,EAC5C,KAAK,SAAW,IAAK,KAAK,SAAW,KAAM,KAAK,UAAY,KAC5D,KAAK,aAAe,KAIlB,OAAO,EAAE,QAAW,UAAY,SAAS,EAAE,MAAM,IAAQ,KAAA,aAAeT,EAAM,KAAK,MAAM,EAAE,MAAM,EAAG,EAAG,EAAE,GACzG,OAAO,EAAE,YAAe,UAAY,SAAS,EAAE,UAAU,IAAQ,KAAA,SAAWA,EAAM,KAAK,MAAM,EAAE,UAAU,EAAG,IAAK,GAAI,GACrH,OAAO,EAAE,YAAe,UAAY,SAAS,EAAE,UAAU,IAAQ,KAAA,SAAWA,EAAM,KAAK,MAAM,EAAE,UAAU,EAAG,KAAK,SAAW,IAAK,GAAI,GACrI,OAAO,EAAE,WAAc,UAAY,SAAS,EAAE,SAAS,IAAQ,KAAA,UAAYA,EAAM,KAAK,MAAM,EAAE,SAAS,EAAG,IAAK,GAAI,GACnH,OAAO,EAAE,eAAkB,UAAY,SAAS,EAAE,aAAa,IAAQ,KAAA,cAAgBA,EAAM,KAAK,MAAM,EAAE,aAAa,EAAG,EAAG,EAAE,GAC/H,OAAO,EAAE,cAAiB,UAAY,SAAS,EAAE,YAAY,IAAQ,KAAA,aAAeA,EAAM,KAAK,MAAM,EAAE,YAAY,EAAG,IAAK,GAAI,GAE/H,EAAE,UAAY,UAChB,KAAK,OAAO,UAAY,QAAU,KAAK,OAAO,aAAe,OAC7D,KAAK,OAAO,QAAU,QAAU,KAAK,OAAO,WAAa,QACzD,KAAK,OAAO,QAAU,SACb,EAAE,UAAY,QACvB,KAAK,OAAO,UAAY,QAAU,KAAK,OAAO,aAAe,OAC7D,KAAK,OAAO,QAAU,SAAU,KAAK,OAAO,WAAa,QACzD,KAAK,OAAO,QAAU,UACb,EAAE,UAAY,UACvB,KAAK,OAAO,UAAY,OAAU,KAAK,OAAO,aAAe,QAC7D,KAAK,OAAO,QAAU,QAAU,KAAK,OAAO,WAAa,QACzD,KAAK,OAAO,QAAU,SAInB,KAAA,GAAK,IAAIY,EACT,KAAA,MAAM,SAAS,KAAK,EAAE,EAGtB,KAAA,UAAY,IAAIC,EAAK,iBAAkB,CAC1C,WAAY,aAAc,SAAU,KAAK,MAAM,KAAK,IAAIH,EAAGC,CAAC,EAAI,GAAI,EACpE,KAAM,KAAK,OAAO,KAAM,OAAQ,EAAU,gBAAiB,CAAA,CAC5D,EACI,KAAA,UAAU,OAAO,IAAI,EAAG,EACxB,KAAA,UAAU,EAAID,EAAI,EAAG,KAAK,UAAU,EAAI,KAAK,MAAMC,EAAI,GAAI,EAC3D,KAAA,MAAM,SAAS,KAAK,SAAS,EAG7B,KAAA,SAAW,IAAIE,EAAK,GAAI,CAC3B,WAAY,aAAc,SAAU,KAAK,MAAM,KAAK,IAAIH,EAAGC,CAAC,EAAI,IAAK,EACrE,KAAM,KAAK,OAAO,KAAM,OAAQ,EAAU,gBAAiB,CAAA,CAC5D,EACI,KAAA,SAAS,OAAO,IAAI,EAAG,EACvB,KAAA,SAAS,EAAID,EAAI,EAAG,KAAK,SAAS,EAAI,KAAK,MAAMC,EAAI,GAAI,EACzD,KAAA,MAAM,SAAS,KAAK,QAAQ,EAG5B,KAAA,WAAa,IAAIE,EAAK,SAAU,CACnC,WAAY,aAAc,SAAU,KAAK,MAAM,KAAK,IAAIH,EAAGC,CAAC,EAAI,GAAI,EACpE,KAAM,KAAK,OAAO,KAAM,OAAQ,EAAU,gBAAiB,CAAA,CAC5D,EACI,KAAA,WAAW,OAAO,IAAI,EAAG,EACzB,KAAA,WAAW,EAAID,EAAI,EAAG,KAAK,WAAW,EAAI,KAAK,MAAMC,EAAI,GAAI,EAC7D,KAAA,MAAM,SAAS,KAAK,UAAU,EAG9B,KAAA,UAAY,IAAIE,EAAK,wBAAyB,CACjD,WAAY,aAAc,SAAU,KAAK,MAAM,KAAK,IAAIH,EAAGC,CAAC,EAAI,IAAK,EACrE,KAAM,KAAK,OAAO,KAAM,OAAQ,EAAU,gBAAiB,CAAA,CAC5D,EACI,KAAA,UAAU,OAAO,IAAI,EAAG,EACxB,KAAA,UAAU,EAAID,EAAI,EAAG,KAAK,UAAU,EAAI,KAAK,MAAMC,EAAI,GAAI,EAC3D,KAAA,MAAM,SAAS,KAAK,SAAS,EAG7B,KAAA,IAAM,IAAIC,EACV,KAAA,MAAM,SAAS,KAAK,GAAG,EAG5B,KAAK,MAAM,UAAY,SACvB,KAAK,MAAM,GAAG,cAAgBE,GAA6B,CAAEA,EAAE,gBAAgB,EAAG,KAAK,MAAM,CAAA,CAAI,EAE5F,KAAA,UAAU,SAAS,KAAK,KAAK,EAGlC,KAAK,UAAU,EAAI,CACrB,CAEA,YAAYC,EAAiC,CAE7C,CAEA,WAAWC,EAAyB,CAClC,GAAI,KAAK,SAAU,OACb,MAAAC,EAAOD,GAAa,IAAO,IAI7B,GADJ,KAAK,UAAYC,EACb,KAAK,UAAY,EAAG,CACtB,KAAK,SAAW,EAChB,KAAK,OAAO,KAAK,WAAa,KAAK,YAAY,EAC/C,MACF,CAGA,KAAK,aAAeA,EAChB,KAAK,QAAU,UACb,KAAK,aAAe,GACtB,KAAK,WAAW,EAET,KAAK,QAAU,MACxB,KAAK,WAAaA,EACd,KAAK,UAAY,KAAK,WAExB,KAAK,aAAa,SAAS,GAEpB,KAAK,QAAU,UACpB,KAAK,aAAe,GACtB,KAAK,UAAU,EAInB,KAAK,eAAe,EACpB,KAAK,QAAQ,EACb,KAAK,WAAW,CAClB,CAEU,WAAWC,EAAmD,QACtEC,EAAA,KAAK,YAAL,MAAAA,EAAA,UAAiBD,EAAO,QAASA,EAAO,MAC1C,CAGQ,YAAa,CACnB,MAAME,EAAU,KAAK,KAAK,KAAK,SAAW,GAAI,EACxCC,EAAO,SAAS,KAAK,MAAM,EAAI,GAAG,KAAK,OAAS,CAAC,KAAO,IAC9D,KAAK,SAAS,KAAO,WAAW,KAAK,SAAS,IAAI,KAAK,YAAY,WAAW,KAAK,MAAM,IAAI,KAAK,aAAa,WAAWA,CAAI,WAAWD,CAAO,GAClJ,CAEQ,gBAAiB,CACjB,MAAAV,EAAI,KAAK,IAAI,SAAS,MAAOC,EAAI,KAAK,IAAI,SAAS,OACnDW,EAAO,KAAK,QAAU,KAAQ,KAAK,OAAO,QAAU,KAAK,OAAO,UAChEC,EAAU,KAAK,QAAU,KAAQ,KAAK,OAAO,WAAa,KAAK,OAAO,aAC5E,KAAK,GAAG,QACH,KAAA,GAAG,UAAUD,CAAG,EAAQ,KAAA,GAAG,SAAS,EAAG,EAAGZ,EAAG,KAAK,MAAMC,EAAI,GAAI,CAAC,EAAG,KAAK,GAAG,UAC5E,KAAA,GAAG,UAAUY,CAAM,EAAQ,KAAA,GAAG,SAAS,EAAG,KAAK,MAAMZ,EAAI,GAAI,EAAGD,EAAGC,CAAC,EAAG,KAAK,GAAG,SACtF,CAEQ,SAAU,CACV,MAAAD,EAAI,KAAK,IAAI,SAAS,MACtBc,EAAI,KAAK,MAAM,KAAK,IAAI,SAAS,OAAS,GAAI,EAC9CC,EAAI,KAAK,MAAMf,EAAI,EAAG,EACtBT,EAAI,KAAK,OAAOS,EAAIe,GAAK,CAAC,EAC1BC,EAAI,GAGN,GADJ,KAAK,IAAI,QACL,KAAK,QAAU,KAAM,CACjB,MAAAC,EAAO3B,EAAM,EAAK,KAAK,UAAY,KAAK,UAAY,EAAG,CAAC,EACzD,KAAA,IAAI,UAAU,QAAU,GAAI,EAAG,KAAK,IAAI,gBAAgBC,EAAGuB,EAAGC,EAAGC,EAAG,CAAC,EAAG,KAAK,IAAI,UACtF,KAAK,IAAI,UAAU,KAAK,OAAO,QAAS,GAAI,EAAQ,KAAA,IAAI,gBAAgBzB,EAAGuB,EAAG,KAAK,MAAMC,EAAIE,CAAI,EAAGD,EAAG,CAAC,EAAG,KAAK,IAAI,SACtH,CACF,CAEQ,UAAUE,EAAQ,GAAO,CAE/B,KAAK,MAAQ,UACR,KAAA,WAAa,KAAK,SAAW,KAAK,OAAY,GAAA,KAAK,SAAW,KAAK,UACxE,KAAK,YAAc,KAAK,WACxB,KAAK,UAAY,EACjB,KAAK,WAAW,KAAO,UACvB,KAAK,UAAU,KAAO,mBACjBA,GAAO,KAAK,WAAW,CAC9B,CAEQ,YAAa,CACnB,KAAK,MAAQ,KACb,KAAK,UAAY,EACjB,KAAK,WAAW,KAAO,OACvB,KAAK,UAAU,KAAO,UACxB,CAEQ,OAAQ,CACd,GAAI,MAAK,SACL,GAAA,KAAK,QAAU,UAEjB,KAAK,aAAa,OAAO,UAChB,KAAK,QAAU,KAAM,CAExB,MAAAC,EAAK,KAAK,IAAI,EAAG,KAAK,MAAM,KAAK,SAAS,CAAC,EACjD,KAAK,OAASA,EACd,KAAK,OAAS,KAAK,IAAI,KAAK,OAAQA,CAAE,EACjC,KAAA,YAEL,MAAMC,EAAa9B,EAAM,IAAM6B,EAAI,IAAK,GAAG,EAC3C,KAAK,OAASC,EACT,KAAA,WAAW,KAAO,GAAGD,CAAE,MAC5B,KAAK,UAAU,KAAO,QAEtB,KAAK,MAAQ,SACb,KAAK,YAAc,KAAK,aAEpB,KAAK,WAAa,KAAK,cACzB,KAAK,OAAO,EAAI,CAClB,MACS,KAAK,QAAU,UAEf,KAAK,QAAU,SACxB,KAAK,UAAU,CAEnB,CAEQ,aAAaE,EAA6B,CAC3C,KAAA,SACC,MAAAC,EAAOD,IAAW,QAAW,SAAW,YAC9C,KAAK,WAAW,KAAOC,EACvB,KAAK,UAAU,KAAQD,IAAW,QAAW,gBAAkB,sBAE/D,KAAK,MAAQ,KAAK,IAAI,EAAG,KAAK,MAAQ,GAAG,EAEzC,KAAK,MAAQ,SACb,KAAK,YAAc,KAAK,IAAI,IAAK,KAAK,aAAe,GAAG,EAEpD,KAAK,OAAS,KAAK,eACrB,KAAK,OAAO,EAAK,CAErB,CAEQ,OAAOE,EAAkB,OAC/B,GAAI,KAAK,SAAU,OACnB,KAAK,SAAW,GAChB,MAAMC,EAAY,KAAK,MAAM,KAAK,SAAW,CAAC,EACxCC,EAAe,KAAK,UAAY,GAChCC,EAAc,KAAK,OAAS,IAC5BC,EAAY,SAAS,KAAK,MAAM,EAAIrC,EAAM,IAAM,KAAK,OAAQ,EAAG,GAAG,EAAI,EACvEsC,EAAQ,KAAK,IAAI,EAAG,KAAK,MAAQJ,EAAYC,EAAeE,EAAYD,GAAeH,EAAU,IAAM,EAAE,GAC1Gd,EAAA,KAAA,YAAA,MAAAA,EAAA,UAAYc,EAASK,EAC5B,CACF"}