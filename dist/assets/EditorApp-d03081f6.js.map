{"version":3,"file":"EditorApp-d03081f6.js","sources":["../../src/constants/EditorLimits.ts","../../src/components/editor/tabs/AssetsTab.tsx","../../src/components/editor/tabs/AudioTab.tsx","../../src/components/editor/tabs/ScriptTab.tsx","../../src/components/editor/tabs/SettingsTab.tsx","../../src/components/editor/GameEditor.tsx","../../src/components/editor/ProjectSelector.tsx","../../src/hooks/editor/useGameProject.ts","../../src/services/editor/ProjectStorage.ts","../../src/components/editor/common/TabNavigation.tsx","../../src/components/editor/EditorApp.tsx"],"sourcesContent":["/**\n * エディター機能の制限値・定数定義\n * Phase 6: ゲームエディター実装用\n */\n\nexport const EDITOR_LIMITS = {\n  // 画像制限\n  IMAGE: {\n    BACKGROUND_FRAME_MAX_SIZE: 2 * 1024 * 1024,    // 2MB/フレーム\n    BACKGROUND_TOTAL_MAX_SIZE: 8 * 1024 * 1024,    // 8MB（4フレーム合計）\n    OBJECT_FRAME_MAX_SIZE: 1 * 1024 * 1024,        // 1MB/フレーム\n    OBJECT_TOTAL_MAX_SIZE: 8 * 1024 * 1024,        // 8MB（8フレーム合計）\n    \n    MAX_WIDTH: 2048,\n    MAX_HEIGHT: 2048,\n    MIN_WIDTH: 32,\n    MIN_HEIGHT: 32,\n    \n    SUPPORTED_FORMATS: ['image/jpeg', 'image/png', 'image/webp'] as const,\n    COMPRESSION_QUALITY: 0.8, // JPEG圧縮品質\n    AUTO_RESIZE_THRESHOLD: 1920 // この解像度を超えたら自動リサイズ\n  },\n  \n  // 音声制限\n  AUDIO: {\n    BGM_MAX_SIZE: 5 * 1024 * 1024,       // 5MB\n    BGM_MAX_DURATION: 30,                // 30秒\n    SE_MAX_SIZE: 1 * 1024 * 1024,        // 1MB/個\n    SE_MAX_DURATION: 10,                 // 10秒\n    \n    SUPPORTED_FORMATS: ['audio/mp3', 'audio/wav', 'audio/ogg'] as const,\n    DEFAULT_COMPRESSION: 128, // kbps\n    SAMPLE_RATE: 44100 // Hz\n  },\n  \n  // テキスト制限\n  TEXT: {\n    MAX_LENGTH: 8,           // 8文字\n    MAX_COUNT: 5,            // 5個まで\n    MIN_FONT_SIZE: 12,       // 最小フォントサイズ\n    MAX_FONT_SIZE: 72        // 最大フォントサイズ\n  },\n  \n  // プロジェクト全体制限\n  PROJECT: {\n    TOTAL_MAX_SIZE: 50 * 1024 * 1024,    // 50MB\n    MAX_OBJECTS: 15,                     // オブジェクト最大数\n    MAX_SE_COUNT: 15,                    // SE最大数\n    MAX_RULES: 50,                       // ルール最大数\n    MAX_FLAGS: 20,                       // フラグ最大数\n    MAX_TEXTS: 5,                        // テキスト最大数\n    \n    AUTO_SAVE_INTERVAL: 30000,           // 30秒間隔で自動保存\n    VERSION_HISTORY_COUNT: 10            // バージョン履歴保持数\n  },\n  \n  // パフォーマンス制限\n  PERFORMANCE: {\n    MAX_ANIMATION_FPS: 30,               // アニメーション最大FPS\n    MAX_PARTICLES: 100,                  // パーティクル最大数\n    MAX_CONCURRENT_SOUNDS: 8,            // 同時再生音数\n    SCRIPT_EXECUTION_TIMEOUT: 5000       // スクリプト実行タイムアウト(ms)\n  },\n  \n  // ★★★ Phase 6.4 新規追加分 ★★★\n  \n  // ゲーム設定制限\n  GAME_SETTINGS: {\n    NAME_MIN_LENGTH: 1,                  // ゲーム名最小文字数\n    NAME_MAX_LENGTH: 50,                 // ゲーム名最大文字数\n    DESCRIPTION_MAX_LENGTH: 200,         // 説明文最大文字数\n    DURATION_OPTIONS: [5, 10, 15, 20, 30] as const, // 選択可能な秒数\n    MAX_UNLIMITED_SECONDS: 300,          // 無制限モード最大時間（5分）\n    DIFFICULTY_LEVELS: ['easy', 'normal', 'hard'] as const,\n    MAX_TAGS: 10,                        // 最大タグ数\n    MAX_SCREENSHOTS: 5                   // 最大スクリーンショット数\n  },\n  \n  // テストプレイ制限\n  TEST_PLAY: {\n    MAX_DURATION: 60,                    // テスト最大時間（60秒）\n    SIMULATION_TIME: 3000,               // シミュレーション時間（3秒）\n    SUCCESS_PROBABILITY: 0.7,            // 成功確率（70%）\n    TIMEOUT_MESSAGE: 'テストがタイムアウトしました'\n  },\n  \n  // 公開制限\n  PUBLISHING: {\n    MIN_ASSETS_COUNT: 1,                 // 最低必要アセット数\n    MIN_RULES_OR_CONDITIONS: 0,          // 最低ルール数（警告レベル）\n    VISIBILITY_OPTIONS: ['public', 'unlisted', 'private'] as const,\n    THUMBNAIL_WIDTH: 300,                // サムネイル幅\n    THUMBNAIL_HEIGHT: 400,               // サムネイル高さ（9:16比率）\n    EXPORT_FORMATS: ['json', 'zip'] as const\n  },\n  \n  // ScriptTab専用制限\n  SCRIPT: {\n    MAX_CONDITIONS_PER_RULE: 10,         // 1ルールあたりの最大条件数\n    MAX_ACTIONS_PER_RULE: 10,            // 1ルールあたりの最大アクション数\n    MAX_RULE_NAME_LENGTH: 30,            // ルール名最大文字数\n    MAX_FLAG_NAME_LENGTH: 20,            // フラグ名最大文字数\n    MAX_SUCCESS_CONDITIONS: 5,           // 最大成功条件数\n    \n    // 移動・エフェクト制限\n    MAX_MOVEMENT_SPEED: 1000,            // 最大移動速度（px/sec）\n    MAX_MOVEMENT_DURATION: 10,           // 最大移動時間（秒）\n    MAX_EFFECT_DURATION: 5,              // 最大エフェクト時間（秒）\n    MAX_ORBIT_RADIUS: 200,               // 最大軌道半径（px）\n    \n    // パフォーマンス\n    COMPLEXITY_THRESHOLD: 80,            // 複雑度警告閾値\n    MAX_CONCURRENT_RULES: 20             // 同時実行最大ルール数\n  }\n} as const;\n\n// エディタータブ種類\nexport const EDITOR_TABS = {\n  ASSETS: 'assets',\n  AUDIO: 'audio', \n  SCRIPT: 'script',\n  SETTINGS: 'settings'\n} as const;\n\nexport type EditorTab = typeof EDITOR_TABS[keyof typeof EDITOR_TABS];\n\n// プロジェクト状態\nexport const PROJECT_STATUS = {\n  DRAFT: 'draft',\n  TESTING: 'testing', \n  PUBLISHED: 'published'\n} as const;\n\nexport type ProjectStatus = typeof PROJECT_STATUS[keyof typeof PROJECT_STATUS];\n\n// ゲーム時間設定\nexport const GAME_DURATION_OPTIONS = [5, 10, 15, 20, 30] as const;\nexport type GameDurationOption = typeof GAME_DURATION_OPTIONS[number];\n\n// 難易度設定\nexport const DIFFICULTY_LEVELS = {\n  EASY: 'easy',\n  NORMAL: 'normal',\n  HARD: 'hard'\n} as const;\n\nexport type DifficultyLevel = typeof DIFFICULTY_LEVELS[keyof typeof DIFFICULTY_LEVELS];\n\n// アニメーション設定\nexport const ANIMATION_SETTINGS = {\n  MIN_FPS: 1,\n  MAX_FPS: 30,\n  DEFAULT_FPS: 12,\n  MAX_BACKGROUND_FRAMES: 4,\n  MAX_OBJECT_FRAMES: 8\n} as const;\n\n// ★★★ Phase 6.4 新規追加の定数 ★★★\n\n// 条件ライブラリ（ScriptTab用）\nexport const CONDITIONS_LIBRARY = [\n  { type: 'touch', label: 'タッチしたとき', icon: '👆', color: 'bg-blue-100' },\n  { type: 'time', label: '○秒後', icon: '⏰', color: 'bg-green-100' },\n  { type: 'collision', label: 'ぶつかったとき', icon: '💥', color: 'bg-red-100' },\n  { type: 'animation', label: 'アニメ終了時', icon: '🎬', color: 'bg-purple-100' },\n  { type: 'flag', label: 'フラグがONのとき', icon: '🚩', color: 'bg-yellow-100' },\n] as const;\n\n// アクションライブラリ（ScriptTab用）\nexport const ACTIONS_LIBRARY = [\n  { type: 'move', label: '移動する', icon: '🏃', color: 'bg-cyan-100' },\n  { type: 'playSound', label: '音を鳴らす', icon: '🔊', color: 'bg-indigo-100' },\n  { type: 'success', label: 'ゲームクリア!', icon: '🎉', color: 'bg-emerald-100' },\n  { type: 'failure', label: 'ゲームオーバー', icon: '💀', color: 'bg-rose-100' },\n  { type: 'switchAnimation', label: 'アニメ変更', icon: '🔄', color: 'bg-orange-100' },\n  { type: 'show', label: '表示する', icon: '👁️', color: 'bg-teal-100' },\n  { type: 'hide', label: '隠す', icon: '🫥', color: 'bg-gray-100' },\n] as const;\n\n// 移動パターン（ScriptTab用）\nexport const MOVEMENT_PATTERNS = [\n  { type: 'straight', label: 'まっすぐ移動', icon: '➡️' },\n  { type: 'teleport', label: '瞬間移動', icon: '⚡' },\n  { type: 'wander', label: 'ふらふら移動', icon: '🔄' },\n  { type: 'bounce', label: 'ぴょんぴょん', icon: '🦘' },\n] as const;\n\n// 時間プリセット（SettingsTab用）\nexport const DURATION_PRESETS = [\n  { value: 5, label: '5秒', description: 'サクッと', emoji: '⚡', color: 'bg-yellow-100 border-yellow-300' },\n  { value: 10, label: '10秒', description: 'ちょうどいい', emoji: '⏰', color: 'bg-blue-100 border-blue-300' },\n  { value: 15, label: '15秒', description: 'じっくり', emoji: '🎯', color: 'bg-green-100 border-green-300' },\n  { value: 30, label: '30秒', description: 'たっぷり', emoji: '🏃', color: 'bg-purple-100 border-purple-300' },\n] as const;\n\n// 難易度プリセット（SettingsTab用）\nexport const DIFFICULTY_PRESETS = [\n  { value: 'easy', label: 'やさしい', description: '誰でも楽しめる', emoji: '😊', color: 'bg-green-100 border-green-300' },\n  { value: 'normal', label: 'ふつう', description: 'ちょうどいい挑戦', emoji: '🙂', color: 'bg-blue-100 border-blue-300' },\n  { value: 'hard', label: 'むずかしい', description: '上級者向け', emoji: '😤', color: 'bg-red-100 border-red-300' },\n] as const;\n\n// エラーメッセージ定数\nexport const ERROR_MESSAGES = {\n  // 一般的なエラー\n  GENERIC_ERROR: '予期しないエラーが発生しました',\n  NETWORK_ERROR: 'ネットワークエラーが発生しました',\n  \n  // プロジェクトエラー\n  PROJECT_NOT_FOUND: 'プロジェクトが見つかりません',\n  PROJECT_LOAD_FAILED: 'プロジェクトの読み込みに失敗しました',\n  PROJECT_SAVE_FAILED: 'プロジェクトの保存に失敗しました',\n  \n  // ファイルエラー\n  FILE_TOO_LARGE: 'ファイルサイズが上限を超えています',\n  INVALID_FILE_TYPE: 'サポートされていないファイル形式です',\n  FILE_UPLOAD_FAILED: 'ファイルのアップロードに失敗しました',\n  \n  // バリデーションエラー\n  GAME_NAME_REQUIRED: 'ゲーム名を入力してください',\n  GAME_NAME_TOO_LONG: 'ゲーム名は50文字以内で入力してください',\n  DESCRIPTION_TOO_LONG: '説明文は200文字以内で入力してください',\n  NO_ASSETS: '最低1つのオブジェクトまたは背景を追加してください',\n  NO_RULES: 'ゲームルールまたは成功条件を設定してください',\n  \n  // 公開エラー\n  PUBLISH_FAILED: 'ゲームの公開に失敗しました',\n  EXPORT_FAILED: 'エクスポートに失敗しました',\n  TEST_PLAY_FAILED: 'テストプレイに失敗しました',\n  \n  // 容量制限エラー\n  PROJECT_SIZE_EXCEEDED: 'プロジェクトサイズが上限を超えています',\n  ASSET_LIMIT_EXCEEDED: 'アセット数が上限を超えています'\n} as const;\n\n// 成功メッセージ定数\nexport const SUCCESS_MESSAGES = {\n  PROJECT_SAVED: 'プロジェクトを保存しました',\n  PROJECT_PUBLISHED: 'ゲームを公開しました',\n  PROJECT_EXPORTED: 'プロジェクトをエクスポートしました',\n  FILE_UPLOADED: 'ファイルをアップロードしました',\n  TEST_PLAY_SUCCESS: 'テストプレイが成功しました',\n  THUMBNAIL_GENERATED: 'サムネイルを生成しました'\n} as const;","import React, { useState, useCallback, useRef, useEffect } from 'react';\nimport { GameProject } from '../../../types/editor/GameProject';\nimport { ProjectAssets, BackgroundAsset, ObjectAsset, TextAsset, AssetFrame } from '../../../types/editor/ProjectAssets';\nimport { EDITOR_LIMITS } from '../../../constants/EditorLimits';\n\ninterface AssetsTabProps {\n  project: GameProject;\n  onProjectUpdate: (project: GameProject) => void;\n}\n\ntype AssetType = 'background' | 'objects' | 'texts';\ntype EditMode = 'none' | 'background' | 'object' | 'text' | 'animation';\n\n// ファイルサイズを人間が読みやすい形式に変換\nconst formatFileSize = (bytes: number): string => {\n  if (bytes === 0) return '0 B';\n  const k = 1024;\n  const sizes = ['B', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\n// 画像ファイルをリサイズ・最適化（修正版）\nconst optimizeImage = async (file: File, maxWidth: number, maxHeight: number, quality: number = 0.8): Promise<Blob> => {\n  return new Promise((resolve, reject) => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d')!;\n    const img = new Image();\n    \n    img.onload = () => {\n      // アスペクト比を保持してリサイズ\n      let { width, height } = img;\n      if (width > maxWidth || height > maxHeight) {\n        const ratio = Math.min(maxWidth / width, maxHeight / height);\n        width *= ratio;\n        height *= ratio;\n      }\n      \n      canvas.width = width;\n      canvas.height = height;\n      \n      // 画像を描画\n      ctx.fillStyle = 'white';\n      ctx.fillRect(0, 0, width, height);\n      ctx.drawImage(img, 0, 0, width, height);\n      \n      // Blobとして出力（修正版）\n      canvas.toBlob((blob) => {\n        if (blob) {\n          resolve(blob);\n        } else {\n          reject(new Error('Canvas to blob conversion failed'));\n        }\n      }, 'image/webp', quality);\n    };\n    \n    img.onerror = () => reject(new Error('Image load failed'));\n    img.src = URL.createObjectURL(file);\n  });\n};\n\nexport const AssetsTab: React.FC<AssetsTabProps> = ({ project, onProjectUpdate }) => {\n  const [activeAssetType, setActiveAssetType] = useState<AssetType>('background');\n  const [editMode, setEditMode] = useState<EditMode>('none');\n  const [selectedAssetId, setSelectedAssetId] = useState<string | null>(null);\n  const [dragOver, setDragOver] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  \n  // テキストエディット用状態\n  const [textContent, setTextContent] = useState('');\n  const [textColor, setTextColor] = useState('#000000');\n  const [fontSize, setFontSize] = useState(24);\n  const [fontWeight, setFontWeight] = useState<'normal' | 'bold'>('normal');\n  \n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  // 容量計算\n  const getTotalSize = useCallback(() => {\n    let total = 0;\n    if (project.assets.background) total += project.assets.background.totalSize;\n    project.assets.objects.forEach(obj => total += obj.totalSize);\n    return total;\n  }, [project.assets]);\n\n  const totalSize = getTotalSize();\n  const sizePercentage = (totalSize / EDITOR_LIMITS.PROJECT.TOTAL_MAX_SIZE) * 100;\n\n  // ファイルアップロード処理\n  const handleFileUpload = useCallback(async (files: FileList) => {\n    if (uploading) return;\n    setUploading(true);\n\n    try {\n      const file = files[0];\n      if (!file || !file.type.startsWith('image/')) {\n        alert('画像ファイルを選択してください');\n        return;\n      }\n\n      // サイズチェック\n      const maxSize = activeAssetType === 'background' \n        ? EDITOR_LIMITS.IMAGE.BACKGROUND_FRAME_MAX_SIZE\n        : EDITOR_LIMITS.IMAGE.OBJECT_FRAME_MAX_SIZE;\n\n      if (file.size > maxSize) {\n        alert(`ファイルサイズが大きすぎます。最大${formatFileSize(maxSize)}まで対応しています。`);\n        return;\n      }\n\n      // 画像最適化\n      const optimized = await optimizeImage(\n        file, \n        activeAssetType === 'background' ? 1080 : 512, \n        activeAssetType === 'background' ? 1920 : 512,\n        0.8\n      );\n\n      // Base64に変換\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const dataUrl = e.target?.result as string;\n        \n        // アセットフレーム作成\n        const frame: AssetFrame = {\n          id: crypto.randomUUID(),\n          dataUrl,\n          originalName: file.name,\n          width: activeAssetType === 'background' ? 1080 : 512,\n          height: activeAssetType === 'background' ? 1920 : 512,\n          fileSize: optimized?.size || file.size,\n          uploadedAt: new Date().toISOString()\n        };\n\n        // プロジェクト更新\n        const now = new Date().toISOString();\n        const updatedAssets = { ...project.assets };\n\n        if (activeAssetType === 'background') {\n          updatedAssets.background = {\n            id: crypto.randomUUID(),\n            name: 'Background',\n            frames: [frame],\n            animationSettings: { speed: 10, loop: true, pingPong: false, autoStart: true },\n            totalSize: frame.fileSize,\n            createdAt: now,\n            lastModified: now\n          };\n        } else if (activeAssetType === 'objects') {\n          const newObject: ObjectAsset = {\n            id: crypto.randomUUID(),\n            name: `オブジェクト${updatedAssets.objects.length + 1}`,\n            frames: [frame],\n            animationSettings: { speed: 10, loop: true, pingPong: false, autoStart: true },\n            totalSize: frame.fileSize,\n            createdAt: now,\n            lastModified: now,\n            defaultScale: 1.0,\n            defaultOpacity: 1.0\n          };\n          updatedAssets.objects.push(newObject);\n        }\n\n        // 統計更新（修正版 - sounds → bgm + se分離）\n        const imageSize = updatedAssets.objects.reduce((sum, obj) => sum + obj.totalSize, 0) + \n                         (updatedAssets.background?.totalSize || 0);\n        const audioSize = (updatedAssets.audio.bgm?.fileSize || 0) + \n                         updatedAssets.audio.se.reduce((sum, se) => sum + se.fileSize, 0);\n\n        updatedAssets.statistics = {\n          totalImageSize: imageSize,\n          totalAudioSize: audioSize,\n          totalSize: imageSize + audioSize,\n          usedSlots: {\n            background: updatedAssets.background ? 1 : 0,\n            objects: updatedAssets.objects.length,\n            texts: updatedAssets.texts.length,\n            bgm: updatedAssets.audio.bgm ? 1 : 0,\n            se: updatedAssets.audio.se.length\n          },\n          limitations: {\n            isNearImageLimit: imageSize > EDITOR_LIMITS.IMAGE.BACKGROUND_TOTAL_MAX_SIZE * 0.8,\n            isNearAudioLimit: audioSize > EDITOR_LIMITS.AUDIO.BGM_MAX_SIZE * 0.8,\n            isNearTotalLimit: (imageSize + audioSize) > EDITOR_LIMITS.PROJECT.TOTAL_MAX_SIZE * 0.8,\n            hasViolations: false\n          }\n        };\n\n        updatedAssets.lastModified = now;\n\n        onProjectUpdate({\n          ...project,\n          assets: updatedAssets,\n          totalSize: imageSize + audioSize,\n          lastModified: now\n        });\n      };\n\n      reader.readAsDataURL(optimized || file);\n    } catch (error) {\n      console.error('ファイルアップロードエラー:', error);\n      alert('ファイルのアップロードに失敗しました');\n    } finally {\n      setUploading(false);\n    }\n  }, [activeAssetType, project, onProjectUpdate, uploading, getTotalSize]);\n\n  // テキストアセット追加（修正版）\n  const addTextAsset = useCallback(() => {\n    if (project.assets.texts.length >= EDITOR_LIMITS.TEXT.MAX_COUNT) {\n      alert(`テキストは最大${EDITOR_LIMITS.TEXT.MAX_COUNT}個まで追加できます`);\n      return;\n    }\n\n    if (!textContent.trim()) {\n      alert('テキストを入力してください');\n      return;\n    }\n\n    if (textContent.length > EDITOR_LIMITS.TEXT.MAX_LENGTH) {\n      alert(`テキストは${EDITOR_LIMITS.TEXT.MAX_LENGTH}文字以内で入力してください`);\n      return;\n    }\n\n    const now = new Date().toISOString();\n\n    const newText: TextAsset = {\n      id: crypto.randomUUID(),\n      content: textContent.trim(),\n      style: {\n        fontSize,\n        color: textColor,\n        fontWeight,\n        fontFamily: 'Inter, sans-serif'\n      },\n      createdAt: now,\n      lastModified: now\n    };\n\n    const updatedAssets = { ...project.assets };\n    updatedAssets.texts.push(newText);\n    updatedAssets.lastModified = now;\n\n    // 統計更新（修正版 - sounds → bgm + se分離）\n    const imageSize = updatedAssets.objects.reduce((sum, obj) => sum + obj.totalSize, 0) + \n                     (updatedAssets.background?.totalSize || 0);\n    const audioSize = (updatedAssets.audio.bgm?.fileSize || 0) + \n                     updatedAssets.audio.se.reduce((sum, se) => sum + se.fileSize, 0);\n\n    updatedAssets.statistics = {\n      totalImageSize: imageSize,\n      totalAudioSize: audioSize,\n      totalSize: imageSize + audioSize,\n      usedSlots: {\n        background: updatedAssets.background ? 1 : 0,\n        objects: updatedAssets.objects.length,\n        texts: updatedAssets.texts.length,\n        bgm: updatedAssets.audio.bgm ? 1 : 0,\n        se: updatedAssets.audio.se.length\n      },\n      limitations: {\n        isNearImageLimit: false,\n        isNearAudioLimit: false,\n        isNearTotalLimit: false,\n        hasViolations: false\n      }\n    };\n\n    onProjectUpdate({\n      ...project,\n      assets: updatedAssets,\n      lastModified: now\n    });\n\n    // フォームリセット\n    setTextContent('');\n    setEditMode('none');\n  }, [textContent, textColor, fontSize, fontWeight, project, onProjectUpdate]);\n\n  // アセット削除\n  const deleteAsset = useCallback((type: AssetType, id?: string) => {\n    const updatedAssets = { ...project.assets };\n    let removedSize = 0;\n    const now = new Date().toISOString();\n\n    if (type === 'background') {\n      if (updatedAssets.background) {\n        removedSize = updatedAssets.background.totalSize;\n        updatedAssets.background = null;\n      }\n    } else if (type === 'objects' && id) {\n      const index = updatedAssets.objects.findIndex(obj => obj.id === id);\n      if (index >= 0) {\n        removedSize = updatedAssets.objects[index].totalSize;\n        updatedAssets.objects.splice(index, 1);\n      }\n    } else if (type === 'texts' && id) {\n      const index = updatedAssets.texts.findIndex(text => text.id === id);\n      if (index >= 0) {\n        updatedAssets.texts.splice(index, 1);\n      }\n    }\n\n    // 統計更新（修正版）\n    const imageSize = updatedAssets.objects.reduce((sum, obj) => sum + obj.totalSize, 0) + \n                     (updatedAssets.background?.totalSize || 0);\n    const audioSize = (updatedAssets.audio.bgm?.fileSize || 0) + \n                     updatedAssets.audio.se.reduce((sum, se) => sum + se.fileSize, 0);\n\n    updatedAssets.statistics = {\n      totalImageSize: imageSize,\n      totalAudioSize: audioSize,\n      totalSize: imageSize + audioSize,\n      usedSlots: {\n        background: updatedAssets.background ? 1 : 0,\n        objects: updatedAssets.objects.length,\n        texts: updatedAssets.texts.length,\n        bgm: updatedAssets.audio.bgm ? 1 : 0,\n        se: updatedAssets.audio.se.length\n      },\n      limitations: {\n        isNearImageLimit: false,\n        isNearAudioLimit: false,\n        isNearTotalLimit: false,\n        hasViolations: false\n      }\n    };\n\n    updatedAssets.lastModified = now;\n\n    onProjectUpdate({\n      ...project,\n      assets: updatedAssets,\n      totalSize: project.totalSize - removedSize,\n      lastModified: now\n    });\n  }, [project, onProjectUpdate]);\n\n  // ドラッグ&ドロップ処理\n  const handleDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n    setDragOver(true);\n  };\n\n  const handleDragLeave = () => {\n    setDragOver(false);\n  };\n\n  const handleDrop = (e: React.DragEvent) => {\n    e.preventDefault();\n    setDragOver(false);\n    \n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      handleFileUpload(files);\n    }\n  };\n\n  return (\n    <div className=\"assets-tab p-6\">\n      {/* 容量表示 */}\n      <div className=\"mb-6 p-4 bg-gray-50 rounded-xl\">\n        <div className=\"flex justify-between items-center mb-2\">\n          <span className=\"text-sm font-medium text-gray-700\">使用容量</span>\n          <span className=\"text-sm text-gray-600\">\n            {formatFileSize(totalSize)} / {formatFileSize(EDITOR_LIMITS.PROJECT.TOTAL_MAX_SIZE)}\n          </span>\n        </div>\n        <div className=\"w-full bg-gray-200 rounded-full h-3\">\n          <div \n            className={`h-3 rounded-full transition-all duration-300 ${\n              sizePercentage > 90 ? 'bg-red-500' : \n              sizePercentage > 70 ? 'bg-yellow-500' : 'bg-green-500'\n            }`}\n            style={{ width: `${Math.min(sizePercentage, 100)}%` }}\n          />\n        </div>\n        {sizePercentage > 80 && (\n          <p className=\"text-xs text-orange-600 mt-1\">\n            容量が不足しています。不要なアセットを削除してください。\n          </p>\n        )}\n      </div>\n\n      {/* タブ切り替え */}\n      <div className=\"flex space-x-1 mb-6 bg-gray-100 p-1 rounded-xl\">\n        {[\n          { id: 'background' as AssetType, label: '背景', icon: '🖼️' },\n          { id: 'objects' as AssetType, label: 'オブジェクト', icon: '🎨' },\n          { id: 'texts' as AssetType, label: 'テキスト', icon: '📝' }\n        ].map((tab) => (\n          <button\n            key={tab.id}\n            onClick={() => setActiveAssetType(tab.id)}\n            className={`flex items-center space-x-2 px-4 py-2 rounded-lg font-medium transition-all ${\n              activeAssetType === tab.id\n                ? 'bg-white text-purple-600 shadow-sm'\n                : 'text-gray-600 hover:text-gray-800'\n            }`}\n          >\n            <span>{tab.icon}</span>\n            <span>{tab.label}</span>\n          </button>\n        ))}\n      </div>\n\n      {/* 背景管理セクション */}\n      {activeAssetType === 'background' && (\n        <div>\n          <h3 className=\"text-lg font-semibold mb-4 flex items-center\">\n            🖼️ 背景\n            <span className=\"ml-2 text-sm text-gray-500\">(1枚まで)</span>\n          </h3>\n\n          {project.assets.background ? (\n            <div className=\"bg-white rounded-xl border-2 border-gray-200 p-4 mb-4\">\n              <div className=\"flex items-center space-x-4\">\n                <img\n                  src={project.assets.background.frames[0].dataUrl}\n                  alt=\"背景プレビュー\"\n                  className=\"w-20 h-36 object-cover rounded-lg border border-gray-200\"\n                />\n                <div className=\"flex-1\">\n                  <h4 className=\"font-medium text-lg\">{project.assets.background.name}</h4>\n                  <p className=\"text-sm text-gray-500\">\n                    {project.assets.background.frames[0].width}×{project.assets.background.frames[0].height}px\n                  </p>\n                  <p className=\"text-sm text-gray-500\">\n                    {formatFileSize(project.assets.background.totalSize)}\n                  </p>\n                </div>\n                <div className=\"flex space-x-2\">\n                  <button\n                    onClick={() => deleteAsset('background')}\n                    className=\"px-4 py-2 bg-red-100 text-red-700 rounded-lg hover:bg-red-200 font-medium\"\n                  >\n                    🗑️ 削除\n                  </button>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div\n              onDragOver={handleDragOver}\n              onDragLeave={handleDragLeave}\n              onDrop={handleDrop}\n              className={`border-2 border-dashed rounded-xl p-8 text-center transition-colors ${\n                dragOver ? 'border-purple-400 bg-purple-50' : 'border-gray-300 hover:border-gray-400'\n              }`}\n            >\n              <div className=\"text-6xl mb-4\">🖼️</div>\n              <p className=\"text-lg font-medium text-gray-700 mb-2\">背景画像をアップロード</p>\n              <p className=\"text-sm text-gray-500 mb-4\">\n                画像をドラッグ&ドロップするか、クリックしてファイルを選択\n              </p>\n              <input\n                ref={fileInputRef}\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={(e) => e.target.files && handleFileUpload(e.target.files)}\n                className=\"hidden\"\n              />\n              <button\n                onClick={() => fileInputRef.current?.click()}\n                disabled={uploading}\n                className=\"px-6 py-3 bg-purple-600 text-white rounded-xl hover:bg-purple-700 font-medium disabled:opacity-50\"\n              >\n                {uploading ? '処理中...' : 'ファイルを選択'}\n              </button>\n              <p className=\"text-xs text-gray-400 mt-4\">\n                推奨サイズ: 1080×1920px (9:16) • 最大{formatFileSize(EDITOR_LIMITS.IMAGE.BACKGROUND_FRAME_MAX_SIZE)}\n              </p>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* オブジェクト管理セクション */}\n      {activeAssetType === 'objects' && (\n        <div>\n          <h3 className=\"text-lg font-semibold mb-4 flex items-center\">\n            🎨 オブジェクト\n            <span className=\"ml-2 text-sm text-gray-500\">\n              ({project.assets.objects.length}/{EDITOR_LIMITS.PROJECT.MAX_OBJECTS})\n            </span>\n          </h3>\n\n          {/* 既存オブジェクト一覧 */}\n          <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4 mb-6\">\n            {project.assets.objects.map((obj) => (\n              <div key={obj.id} className=\"bg-white rounded-xl border-2 border-gray-200 p-4\">\n                <img\n                  src={obj.frames[0].dataUrl}\n                  alt={obj.name}\n                  className=\"w-full aspect-square object-cover rounded-lg mb-3\"\n                />\n                <h4 className=\"font-medium text-sm\">{obj.name}</h4>\n                <p className=\"text-xs text-gray-500\">\n                  {formatFileSize(obj.totalSize)}\n                </p>\n                <button\n                  onClick={() => deleteAsset('objects', obj.id)}\n                  className=\"mt-2 w-full px-3 py-2 bg-red-100 text-red-700 rounded-lg text-sm hover:bg-red-200\"\n                >\n                  🗑️ 削除\n                </button>\n              </div>\n            ))}\n\n            {/* 新規追加ボタン */}\n            {project.assets.objects.length < EDITOR_LIMITS.PROJECT.MAX_OBJECTS && (\n              <div\n                onDragOver={handleDragOver}\n                onDragLeave={handleDragLeave}\n                onDrop={handleDrop}\n                className={`border-2 border-dashed rounded-xl p-4 flex flex-col items-center justify-center aspect-square cursor-pointer transition-colors ${\n                  dragOver ? 'border-purple-400 bg-purple-50' : 'border-gray-300 hover:border-gray-400'\n                }`}\n                onClick={() => fileInputRef.current?.click()}\n              >\n                <div className=\"text-2xl mb-2\">➕</div>\n                <span className=\"text-sm font-medium text-gray-600\">オブジェクト追加</span>\n                <input\n                  ref={fileInputRef}\n                  type=\"file\"\n                  accept=\"image/*\"\n                  onChange={(e) => e.target.files && handleFileUpload(e.target.files)}\n                  className=\"hidden\"\n                />\n              </div>\n            )}\n          </div>\n\n          {project.assets.objects.length >= EDITOR_LIMITS.PROJECT.MAX_OBJECTS && (\n            <p className=\"text-center text-sm text-gray-500 py-4\">\n              オブジェクトは最大{EDITOR_LIMITS.PROJECT.MAX_OBJECTS}個まで追加できます\n            </p>\n          )}\n        </div>\n      )}\n\n      {/* テキスト管理セクション */}\n      {activeAssetType === 'texts' && (\n        <div>\n          <h3 className=\"text-lg font-semibold mb-4 flex items-center\">\n            📝 テキスト\n            <span className=\"ml-2 text-sm text-gray-500\">\n              ({project.assets.texts.length}/{EDITOR_LIMITS.TEXT.MAX_COUNT})\n            </span>\n          </h3>\n\n          {/* 既存テキスト一覧 */}\n          <div className=\"space-y-3 mb-6\">\n            {project.assets.texts.map((text) => (\n              <div key={text.id} className=\"bg-white rounded-xl border-2 border-gray-200 p-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div\n                    className=\"flex-1 text-2xl\"\n                    style={{\n                      fontSize: `${text.style.fontSize}px`,\n                      color: text.style.color,\n                      fontWeight: text.style.fontWeight\n                    }}\n                  >\n                    {text.content}\n                  </div>\n                  <button\n                    onClick={() => deleteAsset('texts', text.id)}\n                    className=\"ml-4 px-3 py-1 bg-red-100 text-red-700 rounded-lg text-sm hover:bg-red-200\"\n                  >\n                    🗑️\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* 新規テキスト追加 */}\n          {project.assets.texts.length < EDITOR_LIMITS.TEXT.MAX_COUNT && (\n            <div className=\"bg-white rounded-xl border-2 border-gray-200 p-4\">\n              <h4 className=\"font-medium mb-4\">新しいテキストを追加</h4>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    テキスト内容 ({textContent.length}/{EDITOR_LIMITS.TEXT.MAX_LENGTH})\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={textContent}\n                    onChange={(e) => setTextContent(e.target.value)}\n                    maxLength={EDITOR_LIMITS.TEXT.MAX_LENGTH}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\n                    placeholder=\"テキストを入力...\"\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      文字色\n                    </label>\n                    <input\n                      type=\"color\"\n                      value={textColor}\n                      onChange={(e) => setTextColor(e.target.value)}\n                      className=\"w-full h-10 border border-gray-300 rounded-lg\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      文字サイズ ({fontSize}px)\n                    </label>\n                    <input\n                      type=\"range\"\n                      min={EDITOR_LIMITS.TEXT.MIN_FONT_SIZE}\n                      max={EDITOR_LIMITS.TEXT.MAX_FONT_SIZE}\n                      value={fontSize}\n                      onChange={(e) => setFontSize(parseInt(e.target.value))}\n                      className=\"w-full\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    フォントの太さ\n                  </label>\n                  <select\n                    value={fontWeight}\n                    onChange={(e) => setFontWeight(e.target.value as 'normal' | 'bold')}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\n                  >\n                    <option value=\"normal\">標準</option>\n                    <option value=\"bold\">太字</option>\n                  </select>\n                </div>\n\n                {/* プレビュー */}\n                <div className=\"p-4 bg-gray-100 rounded-lg\">\n                  <p className=\"text-sm text-gray-600 mb-2\">プレビュー:</p>\n                  <div\n                    style={{\n                      fontSize: `${fontSize}px`,\n                      color: textColor,\n                      fontWeight: fontWeight\n                    }}\n                  >\n                    {textContent || 'テキストのプレビュー'}\n                  </div>\n                </div>\n\n                <button\n                  onClick={addTextAsset}\n                  disabled={!textContent.trim()}\n                  className=\"w-full px-4 py-3 bg-purple-600 text-white rounded-xl hover:bg-purple-700 font-medium disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  ✨ テキストを追加\n                </button>\n              </div>\n            </div>\n          )}\n\n          {project.assets.texts.length >= EDITOR_LIMITS.TEXT.MAX_COUNT && (\n            <p className=\"text-center text-sm text-gray-500 py-4\">\n              テキストは最大{EDITOR_LIMITS.TEXT.MAX_COUNT}個まで追加できます\n            </p>\n          )}\n        </div>\n      )}\n\n      {/* アップロード中オーバーレイ */}\n      {uploading && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-2xl p-8 text-center\">\n            <div className=\"animate-spin text-4xl mb-4\">🎨</div>\n            <p className=\"text-lg font-semibold\">画像を処理中...</p>\n            <p className=\"text-sm text-gray-600 mt-2\">少々お待ちください</p>\n          </div>\n        </div>\n      )}\n\n      {/* ドラッグオーバーレイ */}\n      {dragOver && (\n        <div className=\"fixed inset-0 bg-purple-600 bg-opacity-20 flex items-center justify-center z-40 pointer-events-none\">\n          <div className=\"bg-white rounded-2xl p-8 text-center shadow-2xl\">\n            <div className=\"text-6xl mb-4\">📎</div>\n            <p className=\"text-xl font-semibold text-gray-800\">ファイルをドロップしてください</p>\n            <p className=\"text-sm text-gray-600 mt-2\">画像ファイルをここにドロップして追加</p>\n          </div>\n        </div>\n      )}\n\n      {/* 使用方法のヒント */}\n      <div className=\"mt-8 p-4 bg-blue-50 rounded-xl\">\n        <h4 className=\"font-medium text-blue-800 mb-2\">💡 アセット管理のヒント</h4>\n        <ul className=\"text-sm text-blue-700 space-y-1\">\n          <li>• 背景は9:16（縦向き）の比率が推奨です</li>\n          <li>• オブジェクトは透明背景のPNG形式が推奨です</li>\n          <li>• テキストは{EDITOR_LIMITS.TEXT.MAX_LENGTH}文字以内で入力してください</li>\n          <li>• ファイルサイズが大きい場合は自動で最適化されます</li>\n        </ul>\n      </div>\n    </div>\n  );\n};","import React, { useState, useCallback, useRef, useEffect } from 'react';\nimport { GameProject } from '../../../types/editor/GameProject';\nimport { AudioAsset } from '../../../types/editor/ProjectAssets';\nimport { EDITOR_LIMITS } from '../../../constants/EditorLimits';\n\ninterface AudioTabProps {\n  project: GameProject;\n  onProjectUpdate: (project: GameProject) => void;\n}\n\ntype AudioType = 'bgm' | 'se';\n\n// FileUploader コンポーネント（簡易版 - インライン実装）\ninterface FileUploaderProps {\n  accept: string;\n  maxSize: number;\n  onUpload: (files: FileList) => void;\n  disabled?: boolean;\n  className?: string;\n  children: React.ReactNode;\n}\n\nconst FileUploader: React.FC<FileUploaderProps> = ({\n  accept,\n  maxSize,\n  onUpload,\n  disabled = false,\n  className = '',\n  children\n}) => {\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [dragOver, setDragOver] = useState(false);\n\n  const handleDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n    if (!disabled) setDragOver(true);\n  };\n\n  const handleDragLeave = () => {\n    setDragOver(false);\n  };\n\n  const handleDrop = (e: React.DragEvent) => {\n    e.preventDefault();\n    setDragOver(false);\n    \n    if (disabled) return;\n    \n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      onUpload(files);\n    }\n  };\n\n  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files;\n    if (files && files.length > 0) {\n      onUpload(files);\n    }\n  };\n\n  return (\n    <div\n      className={`${className} ${dragOver ? 'bg-purple-50 border-purple-400' : ''}`}\n      onDragOver={handleDragOver}\n      onDragLeave={handleDragLeave}\n      onDrop={handleDrop}\n    >\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        accept={accept}\n        onChange={handleFileSelect}\n        disabled={disabled}\n        className=\"hidden\"\n      />\n      <div\n        onClick={() => !disabled && fileInputRef.current?.click()}\n        className=\"cursor-pointer\"\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n\n// 音声ファイルの情報を取得\nconst getAudioInfo = (file: File): Promise<{\n  duration: number;\n  format: string;\n}> => {\n  return new Promise((resolve, reject) => {\n    const audio = new Audio();\n    const url = URL.createObjectURL(file);\n    \n    audio.addEventListener('loadedmetadata', () => {\n      resolve({\n        duration: audio.duration,\n        format: file.type.split('/')[1] || 'unknown'\n      });\n      URL.revokeObjectURL(url);\n    });\n    \n    audio.addEventListener('error', () => {\n      reject(new Error('音声ファイルの読み込みに失敗しました'));\n      URL.revokeObjectURL(url);\n    });\n    \n    audio.src = url;\n  });\n};\n\n// 音声波形を描画\nconst drawWaveform = (canvas: HTMLCanvasElement, audioBuffer: AudioBuffer) => {\n  const ctx = canvas.getContext('2d')!;\n  const width = canvas.width;\n  const height = canvas.height;\n  \n  ctx.clearRect(0, 0, width, height);\n  \n  const data = audioBuffer.getChannelData(0);\n  const step = Math.ceil(data.length / width);\n  const amp = height / 2;\n  \n  ctx.fillStyle = '#6366f1';\n  ctx.beginPath();\n  \n  for (let i = 0; i < width; i++) {\n    let min = 1.0;\n    let max = -1.0;\n    \n    for (let j = 0; j < step; j++) {\n      const datum = data[i * step + j];\n      if (datum < min) min = datum;\n      if (datum > max) max = datum;\n    }\n    \n    const minY = (1 + min) * amp;\n    const maxY = (1 + max) * amp;\n    \n    ctx.fillRect(i, minY, 1, maxY - minY);\n  }\n};\n\n// 時間フォーマット (秒 → mm:ss)\nconst formatTime = (seconds: number): string => {\n  const mins = Math.floor(seconds / 60);\n  const secs = Math.floor(seconds % 60);\n  return `${mins}:${secs.toString().padStart(2, '0')}`;\n};\n\n// ファイルサイズフォーマット\nconst formatFileSize = (bytes: number): string => {\n  if (bytes === 0) return '0 B';\n  const k = 1024;\n  const sizes = ['B', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\nexport const AudioTab: React.FC<AudioTabProps> = ({ project, onProjectUpdate }) => {\n  const [activeAudioType, setActiveAudioType] = useState<AudioType>('bgm');\n  const [playingId, setPlayingId] = useState<string | null>(null);\n  const [currentTime, setCurrentTime] = useState<number>(0);\n  const [uploading, setUploading] = useState(false);\n  const [editingId, setEditingId] = useState<string | null>(null);\n  const [volume, setVolume] = useState<number>(1.0);\n  \n  const audioRef = useRef<HTMLAudioElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const audioContextRef = useRef<AudioContext | null>(null);\n\n  // 音声容量計算\n  const getAudioSize = useCallback(() => {\n    let total = 0;\n    if (project.assets.audio.bgm) total += project.assets.audio.bgm.fileSize;\n    project.assets.audio.se.forEach(se => total += se.fileSize);\n    return total;\n  }, [project.assets.audio]);\n\n  const audioSize = getAudioSize();\n  const maxAudioSize = EDITOR_LIMITS.AUDIO.BGM_MAX_SIZE + \n                     (EDITOR_LIMITS.AUDIO.SE_MAX_SIZE * EDITOR_LIMITS.PROJECT.MAX_SE_COUNT);\n  const audioSizePercentage = (audioSize / maxAudioSize) * 100;\n\n  // 音声ファイルアップロード処理（修正版 - files型指定）\n  const handleAudioUpload = useCallback(async (files: FileList, type: AudioType) => {\n    if (uploading) return;\n    setUploading(true);\n\n    try {\n      const file = files[0];\n      \n      if (!file || !file.type.startsWith('audio/')) {\n        alert('音声ファイルを選択してください');\n        return;\n      }\n      \n      // 音声情報取得\n      const audioInfo = await getAudioInfo(file);\n      \n      // 時間制限チェック\n      const maxDuration = type === 'bgm' ? EDITOR_LIMITS.AUDIO.BGM_MAX_DURATION : EDITOR_LIMITS.AUDIO.SE_MAX_DURATION;\n      if (audioInfo.duration > maxDuration) {\n        alert(`音声が長すぎます。最大${maxDuration}秒までです。`);\n        return;\n      }\n\n      // 容量制限チェック\n      if (type === 'se' && project.assets.audio.se.length >= EDITOR_LIMITS.PROJECT.MAX_SE_COUNT) {\n        alert(`効果音は最大${EDITOR_LIMITS.PROJECT.MAX_SE_COUNT}個まで追加できます`);\n        return;\n      }\n\n      // Base64変換\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const dataUrl = e.target?.result as string;\n        const now = new Date().toISOString();\n        \n        const newAudioAsset: AudioAsset = {\n          id: crypto.randomUUID(),\n          name: file.name.replace(/\\.[^/.]+$/, ''), // 拡張子除去\n          dataUrl,\n          originalName: file.name,\n          duration: audioInfo.duration,\n          fileSize: file.size,\n          format: audioInfo.format,\n          volume: 0.8,\n          loop: type === 'bgm',\n          uploadedAt: now\n        };\n\n        // プロジェクト更新\n        const updatedAssets = { ...project.assets };\n        \n        if (type === 'bgm') {\n          updatedAssets.audio.bgm = newAudioAsset;\n        } else {\n          updatedAssets.audio.se.push(newAudioAsset);\n        }\n\n        // 統計更新（修正版 - sounds → bgm + se分離）\n        const imageSize = updatedAssets.objects.reduce((sum, obj) => sum + obj.totalSize, 0) + \n                         (updatedAssets.background?.totalSize || 0);\n        const audioSize = (updatedAssets.audio.bgm?.fileSize || 0) + \n                         updatedAssets.audio.se.reduce((sum, se) => sum + se.fileSize, 0);\n\n        updatedAssets.statistics = {\n          totalImageSize: imageSize,\n          totalAudioSize: audioSize,\n          totalSize: imageSize + audioSize,\n          usedSlots: {\n            background: updatedAssets.background ? 1 : 0,\n            objects: updatedAssets.objects.length,\n            texts: updatedAssets.texts.length,\n            bgm: updatedAssets.audio.bgm ? 1 : 0,\n            se: updatedAssets.audio.se.length\n          },\n          limitations: {\n            isNearImageLimit: false,\n            isNearAudioLimit: audioSize > maxAudioSize * 0.8,\n            isNearTotalLimit: (imageSize + audioSize) > EDITOR_LIMITS.PROJECT.TOTAL_MAX_SIZE * 0.8,\n            hasViolations: false\n          }\n        };\n\n        updatedAssets.lastModified = now;\n\n        onProjectUpdate({\n          ...project,\n          assets: updatedAssets,\n          totalSize: imageSize + audioSize,\n          lastModified: now\n        });\n      };\n\n      reader.readAsDataURL(file);\n    } catch (error) {\n      console.error('音声アップロードエラー:', error);\n      alert('音声ファイルのアップロードに失敗しました');\n    } finally {\n      setUploading(false);\n    }\n  }, [project, onProjectUpdate, uploading, maxAudioSize]);\n\n  // 音声再生\n  const playAudio = useCallback((audio: AudioAsset) => {\n    if (!audioRef.current) return;\n\n    // 既に再生中の場合は停止\n    if (playingId === audio.id) {\n      audioRef.current.pause();\n      setPlayingId(null);\n      return;\n    }\n\n    audioRef.current.src = audio.dataUrl;\n    audioRef.current.volume = audio.volume * volume;\n    audioRef.current.loop = audio.loop;\n    \n    audioRef.current.play().then(() => {\n      setPlayingId(audio.id);\n    }).catch(error => {\n      console.error('音声再生エラー:', error);\n      alert('音声の再生に失敗しました');\n    });\n  }, [playingId, volume]);\n\n  // 音声停止\n  const stopAudio = useCallback(() => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n    }\n    setPlayingId(null);\n    setCurrentTime(0);\n  }, []);\n\n  // 音声削除\n  const deleteAudio = useCallback((type: AudioType, id?: string) => {\n    const updatedAssets = { ...project.assets };\n    let removedSize = 0;\n    const now = new Date().toISOString();\n\n    if (type === 'bgm' && updatedAssets.audio.bgm) {\n      removedSize = updatedAssets.audio.bgm.fileSize;\n      updatedAssets.audio.bgm = null;\n    } else if (type === 'se' && id) {\n      const index = updatedAssets.audio.se.findIndex(se => se.id === id);\n      if (index >= 0) {\n        removedSize = updatedAssets.audio.se[index].fileSize;\n        updatedAssets.audio.se.splice(index, 1);\n      }\n    }\n\n    // 再生中の音声を削除した場合は停止\n    if ((type === 'bgm' && playingId === project.assets.audio.bgm?.id) ||\n        (type === 'se' && playingId === id)) {\n      stopAudio();\n    }\n\n    // 統計更新（修正版 - sounds → bgm + se分離）\n    const imageSize = updatedAssets.objects.reduce((sum, obj) => sum + obj.totalSize, 0) + \n                     (updatedAssets.background?.totalSize || 0);\n    const audioSize = (updatedAssets.audio.bgm?.fileSize || 0) + \n                     updatedAssets.audio.se.reduce((sum, se) => sum + se.fileSize, 0);\n\n    updatedAssets.statistics = {\n      totalImageSize: imageSize,\n      totalAudioSize: audioSize,\n      totalSize: imageSize + audioSize,\n      usedSlots: {\n        background: updatedAssets.background ? 1 : 0,\n        objects: updatedAssets.objects.length,\n        texts: updatedAssets.texts.length,\n        bgm: updatedAssets.audio.bgm ? 1 : 0,\n        se: updatedAssets.audio.se.length\n      },\n      limitations: {\n        isNearImageLimit: false,\n        isNearAudioLimit: false,\n        isNearTotalLimit: false,\n        hasViolations: false\n      }\n    };\n\n    updatedAssets.lastModified = now;\n\n    onProjectUpdate({\n      ...project,\n      assets: updatedAssets,\n      totalSize: project.totalSize - removedSize,\n      lastModified: now\n    });\n  }, [project, onProjectUpdate, playingId, stopAudio]);\n\n  // 音声プロパティ更新\n  const updateAudioProperty = useCallback((type: AudioType, id: string, property: string, value: any) => {\n    const updatedAssets = { ...project.assets };\n    const now = new Date().toISOString();\n    \n    if (type === 'bgm' && updatedAssets.audio.bgm?.id === id) {\n      updatedAssets.audio.bgm = {\n        ...updatedAssets.audio.bgm,\n        [property]: value\n      };\n    } else if (type === 'se') {\n      const index = updatedAssets.audio.se.findIndex(se => se.id === id);\n      if (index >= 0) {\n        updatedAssets.audio.se[index] = {\n          ...updatedAssets.audio.se[index],\n          [property]: value\n        };\n      }\n    }\n\n    updatedAssets.lastModified = now;\n\n    onProjectUpdate({\n      ...project,\n      assets: updatedAssets,\n      lastModified: now\n    });\n  }, [project, onProjectUpdate]);\n\n  // 音声再生時間更新\n  useEffect(() => {\n    const audio = audioRef.current;\n    if (!audio) return;\n\n    const updateTime = () => setCurrentTime(audio.currentTime);\n    const onEnded = () => {\n      setPlayingId(null);\n      setCurrentTime(0);\n    };\n\n    audio.addEventListener('timeupdate', updateTime);\n    audio.addEventListener('ended', onEnded);\n\n    return () => {\n      audio.removeEventListener('timeupdate', updateTime);\n      audio.removeEventListener('ended', onEnded);\n    };\n  }, []);\n\n  return (\n    <div className=\"audio-tab p-6\">\n      {/* 容量表示 */}\n      <div className=\"mb-6 p-4 bg-gray-50 rounded-xl\">\n        <div className=\"flex justify-between items-center mb-2\">\n          <span className=\"text-sm font-medium text-gray-700\">音声容量</span>\n          <span className=\"text-sm text-gray-600\">\n            {formatFileSize(audioSize)} / {formatFileSize(maxAudioSize)}\n          </span>\n        </div>\n        <div className=\"w-full bg-gray-200 rounded-full h-3\">\n          <div \n            className={`h-3 rounded-full transition-all duration-300 ${\n              audioSizePercentage > 90 ? 'bg-red-500' : \n              audioSizePercentage > 70 ? 'bg-yellow-500' : 'bg-green-500'\n            }`}\n            style={{ width: `${Math.min(audioSizePercentage, 100)}%` }}\n          />\n        </div>\n      </div>\n\n      {/* タブ切り替え */}\n      <div className=\"flex space-x-1 mb-6 bg-gray-100 p-1 rounded-xl\">\n        {[\n          { id: 'bgm' as AudioType, label: 'BGM', icon: '🎵' },\n          { id: 'se' as AudioType, label: '効果音', icon: '🔊' }\n        ].map((tab) => (\n          <button\n            key={tab.id}\n            onClick={() => setActiveAudioType(tab.id)}\n            className={`flex items-center space-x-2 px-4 py-2 rounded-lg font-medium transition-all ${\n              activeAudioType === tab.id\n                ? 'bg-white text-purple-600 shadow-sm'\n                : 'text-gray-600 hover:text-gray-800'\n            }`}\n          >\n            <span>{tab.icon}</span>\n            <span>{tab.label}</span>\n          </button>\n        ))}\n      </div>\n\n      {/* マスター音量 */}\n      <div className=\"mb-6 p-4 bg-white rounded-xl border border-gray-200\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <span className=\"text-sm font-medium\">🔊 マスター音量</span>\n          <span className=\"text-sm text-gray-600\">{Math.round(volume * 100)}%</span>\n        </div>\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"1\"\n          step=\"0.1\"\n          value={volume}\n          onChange={(e) => setVolume(parseFloat(e.target.value))}\n          className=\"w-full\"\n        />\n      </div>\n\n      {/* BGM管理 */}\n      {activeAudioType === 'bgm' && (\n        <div>\n          <h3 className=\"text-lg font-semibold mb-4 flex items-center\">\n            🎵 BGM\n            <span className=\"ml-2 text-sm text-gray-500\">(1曲まで)</span>\n          </h3>\n\n          {project.assets.audio.bgm ? (\n            <div className=\"bg-white rounded-xl border-2 border-gray-200 p-4\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"flex-1\">\n                  <h4 className=\"font-medium text-lg\">{project.assets.audio.bgm.name}</h4>\n                  <p className=\"text-sm text-gray-500\">\n                    {formatTime(project.assets.audio.bgm.duration)} • {formatFileSize(project.assets.audio.bgm.fileSize)}\n                  </p>\n                </div>\n                <div className=\"flex space-x-2\">\n                  <button\n                    onClick={() => playAudio(project.assets.audio.bgm!)}\n                    className={`px-4 py-2 rounded-lg font-medium transition-colors ${\n                      playingId === project.assets.audio.bgm.id\n                        ? 'bg-red-100 text-red-700 hover:bg-red-200'\n                        : 'bg-blue-100 text-blue-700 hover:bg-blue-200'\n                    }`}\n                  >\n                    {playingId === project.assets.audio.bgm.id ? '⏹️ 停止' : '▶️ 再生'}\n                  </button>\n                  <button\n                    onClick={() => setEditingId(\n                      editingId === project.assets.audio.bgm!.id ? null : project.assets.audio.bgm!.id\n                    )}\n                    className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200\"\n                  >\n                    ⚙️ 設定\n                  </button>\n                  <button\n                    onClick={() => deleteAudio('bgm')}\n                    className=\"px-4 py-2 bg-red-100 text-red-700 rounded-lg hover:bg-red-200\"\n                  >\n                    🗑️ 削除\n                  </button>\n                </div>\n              </div>\n\n              {/* 波形表示（簡易版） */}\n              <div className=\"mb-4 bg-gray-100 rounded-lg p-4\">\n                <canvas\n                  ref={canvasRef}\n                  width={400}\n                  height={60}\n                  className=\"w-full h-15 bg-gray-50 rounded\"\n                />\n                {playingId === project.assets.audio.bgm.id && (\n                  <div className=\"mt-2 text-sm text-gray-600\">\n                    再生時間: {formatTime(currentTime)} / {formatTime(project.assets.audio.bgm.duration)}\n                  </div>\n                )}\n              </div>\n\n              {/* 設定パネル */}\n              {editingId === project.assets.audio.bgm.id && (\n                <div className=\"border-t pt-4 space-y-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      音量 ({Math.round(project.assets.audio.bgm.volume * 100)}%)\n                    </label>\n                    <input\n                      type=\"range\"\n                      min=\"0\"\n                      max=\"1\"\n                      step=\"0.1\"\n                      value={project.assets.audio.bgm.volume}\n                      onChange={(e) => updateAudioProperty('bgm', project.assets.audio.bgm!.id, 'volume', parseFloat(e.target.value))}\n                      className=\"w-full\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"flex items-center space-x-2\">\n                      <input\n                        type=\"checkbox\"\n                        checked={project.assets.audio.bgm.loop}\n                        onChange={(e) => updateAudioProperty('bgm', project.assets.audio.bgm!.id, 'loop', e.target.checked)}\n                      />\n                      <span className=\"text-sm\">ループ再生</span>\n                    </label>\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : (\n            <FileUploader\n              accept=\"audio/*\"\n              maxSize={EDITOR_LIMITS.AUDIO.BGM_MAX_SIZE}\n              onUpload={(files: FileList) => handleAudioUpload(files, 'bgm')}\n              disabled={uploading}\n              className=\"mb-4\"\n            >\n              <div className=\"border-2 border-dashed border-gray-300 rounded-xl p-8 text-center hover:border-purple-400 hover:bg-purple-50 transition-colors\">\n                <div className=\"text-6xl mb-4\">🎵</div>\n                <p className=\"text-lg font-medium text-gray-700 mb-2\">BGMをアップロード</p>\n                <p className=\"text-sm text-gray-500 mb-4\">\n                  音声ファイルをドラッグ&ドロップするか、クリックして選択\n                </p>\n                <div className=\"px-6 py-3 bg-purple-600 text-white rounded-xl hover:bg-purple-700 font-medium inline-block\">\n                  {uploading ? '処理中...' : 'ファイルを選択'}\n                </div>\n                <p className=\"text-xs text-gray-400 mt-4\">\n                  最大{EDITOR_LIMITS.AUDIO.BGM_MAX_DURATION}秒 • {formatFileSize(EDITOR_LIMITS.AUDIO.BGM_MAX_SIZE)}まで\n                </p>\n              </div>\n            </FileUploader>\n          )}\n        </div>\n      )}\n\n      {/* 効果音管理 */}\n      {activeAudioType === 'se' && (\n        <div>\n          <h3 className=\"text-lg font-semibold mb-4 flex items-center\">\n            🔊 効果音\n            <span className=\"ml-2 text-sm text-gray-500\">\n              ({project.assets.audio.se.length}/{EDITOR_LIMITS.PROJECT.MAX_SE_COUNT})\n            </span>\n          </h3>\n\n          {/* 既存効果音一覧 */}\n          <div className=\"space-y-3 mb-6\">\n            {project.assets.audio.se.map((se) => (\n              <div key={se.id} className=\"bg-white rounded-xl border-2 border-gray-200 p-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex-1\">\n                    <h4 className=\"font-medium\">{se.name}</h4>\n                    <p className=\"text-sm text-gray-500\">\n                      {formatTime(se.duration)} • {formatFileSize(se.fileSize)}\n                    </p>\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    <button\n                      onClick={() => playAudio(se)}\n                      className={`px-3 py-1 rounded-lg text-sm font-medium transition-colors ${\n                        playingId === se.id\n                          ? 'bg-red-100 text-red-700 hover:bg-red-200'\n                          : 'bg-blue-100 text-blue-700 hover:bg-blue-200'\n                      }`}\n                    >\n                      {playingId === se.id ? '⏹️' : '▶️'}\n                    </button>\n                    <button\n                      onClick={() => setEditingId(editingId === se.id ? null : se.id)}\n                      className=\"px-3 py-1 bg-gray-100 text-gray-700 rounded-lg text-sm hover:bg-gray-200\"\n                    >\n                      ⚙️\n                    </button>\n                    <button\n                      onClick={() => deleteAudio('se', se.id)}\n                      className=\"px-3 py-1 bg-red-100 text-red-700 rounded-lg text-sm hover:bg-red-200\"\n                    >\n                      🗑️\n                    </button>\n                  </div>\n                </div>\n\n                {/* SE設定パネル */}\n                {editingId === se.id && (\n                  <div className=\"border-t mt-4 pt-4 space-y-3\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        効果音名\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={se.name}\n                        onChange={(e) => updateAudioProperty('se', se.id, 'name', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        音量 ({Math.round(se.volume * 100)}%)\n                      </label>\n                      <input\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"1\"\n                        step=\"0.1\"\n                        value={se.volume}\n                        onChange={(e) => updateAudioProperty('se', se.id, 'volume', parseFloat(e.target.value))}\n                        className=\"w-full\"\n                      />\n                    </div>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n\n          {/* 新規効果音追加 */}\n          {project.assets.audio.se.length < EDITOR_LIMITS.PROJECT.MAX_SE_COUNT && (\n            <FileUploader\n              accept=\"audio/*\"\n              maxSize={EDITOR_LIMITS.AUDIO.SE_MAX_SIZE}\n              onUpload={(files: FileList) => handleAudioUpload(files, 'se')}\n              disabled={uploading}\n              className=\"mb-4\"\n            >\n              <div className=\"border-2 border-dashed border-gray-300 rounded-xl p-6 text-center hover:border-purple-400 hover:bg-purple-50 transition-colors\">\n                <div className=\"text-4xl mb-3\">🔊</div>\n                <p className=\"text-lg font-medium text-gray-700 mb-2\">効果音を追加</p>\n                <p className=\"text-sm text-gray-500 mb-3\">\n                  音声ファイルをドラッグ&ドロップ\n                </p>\n                <div className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 font-medium inline-block\">\n                  {uploading ? '処理中...' : 'ファイルを選択'}\n                </div>\n                <p className=\"text-xs text-gray-400 mt-3\">\n                  最大{EDITOR_LIMITS.AUDIO.SE_MAX_DURATION}秒 • {formatFileSize(EDITOR_LIMITS.AUDIO.SE_MAX_SIZE)}まで\n                </p>\n              </div>\n            </FileUploader>\n          )}\n        </div>\n      )}\n\n      {/* 隠し音声要素 */}\n      <audio\n        ref={audioRef}\n        onLoadedData={() => {\n          // 波形描画などの処理をここに追加可能\n        }}\n        preload=\"none\"\n      />\n\n      {/* アップロード中表示 */}\n      {uploading && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-2xl p-8 text-center\">\n            <div className=\"animate-spin text-4xl mb-4\">🎵</div>\n            <p className=\"text-lg font-semibold\">音声を処理中...</p>\n            <p className=\"text-sm text-gray-600 mt-2\">少々お待ちください</p>\n          </div>\n        </div>\n      )}\n\n      {/* 音声コントロール説明 */}\n      <div className=\"mt-8 p-4 bg-blue-50 rounded-xl\">\n        <h4 className=\"font-medium text-blue-800 mb-2\">💡 音声のヒント</h4>\n        <ul className=\"text-sm text-blue-700 space-y-1\">\n          <li>• BGMは自動ループ、効果音は1回再生されます</li>\n          <li>• BGMは最大{EDITOR_LIMITS.AUDIO.BGM_MAX_DURATION}秒、効果音は最大{EDITOR_LIMITS.AUDIO.SE_MAX_DURATION}秒まで</li>\n          <li>• 対応形式: MP3, WAV, OGG</li>\n          <li>• 音量は0%〜100%で調整できます</li>\n        </ul>\n      </div>\n    </div>\n  );\n};","import React, { useState, useCallback, useRef } from 'react';\nimport { GameProject } from '../../../types/editor/GameProject';\nimport { GameRule, TriggerCondition, GameAction, MovementPattern, EffectPattern } from '../../../types/editor/GameScript';\nimport { CONDITIONS_LIBRARY, ACTIONS_LIBRARY, MOVEMENT_PATTERNS } from '../../../constants/EditorLimits';\n\ninterface ScriptTabProps {\n  project: GameProject;\n  onProjectUpdate: (project: GameProject) => void;\n}\n\nexport const ScriptTab: React.FC<ScriptTabProps> = ({ project, onProjectUpdate }) => {\n  const [mode, setMode] = useState<'layout' | 'rules'>('layout');\n  const [selectedObjectId, setSelectedObjectId] = useState<string | null>(null);\n  const [editingRule, setEditingRule] = useState<GameRule | null>(null);\n  const [showRuleModal, setShowRuleModal] = useState(false);\n  const [draggedItem, setDraggedItem] = useState<any>(null);\n  const gamePreviewRef = useRef<HTMLDivElement>(null);\n\n  // プロジェクト更新ヘルパー\n  const updateProject = useCallback((updates: Partial<GameProject>) => {\n    onProjectUpdate({ ...project, ...updates });\n  }, [project, onProjectUpdate]);\n\n  // レイアウトモード: オブジェクト配置\n  const handleObjectPositionUpdate = useCallback((objectId: string, position: { x: number; y: number }) => {\n    const updatedScript = { ...project.script };\n    const objectIndex = updatedScript.layout.objects.findIndex(obj => obj.objectId === objectId);\n    \n    if (objectIndex !== -1) {\n      updatedScript.layout.objects[objectIndex].position = position;\n      updateProject({ script: updatedScript });\n    }\n  }, [project.script, updateProject]);\n\n  // ルール追加\n  const handleAddRule = useCallback(() => {\n    const now = new Date().toISOString();\n    const newRule: GameRule = {\n      id: `rule_${Date.now()}`,\n      name: '新しいルール',\n      enabled: true,\n      priority: project.script.rules.length + 1,\n      targetObjectId: 'stage',\n      triggers: {\n        operator: 'AND',\n        conditions: []\n      },\n      actions: [],\n      createdAt: now,\n      lastModified: now // ★ 修正: lastModified プロパティを追加\n    };\n    \n    setEditingRule(newRule);\n    setShowRuleModal(true);\n  }, [project.script.rules.length]);\n\n  // ルール保存\n  const handleSaveRule = useCallback((rule: GameRule) => {\n    const updatedScript = { ...project.script };\n    const existingIndex = updatedScript.rules.findIndex(r => r.id === rule.id);\n    \n    // 保存時にlastModifiedを更新\n    const updatedRule = {\n      ...rule,\n      lastModified: new Date().toISOString()\n    };\n    \n    if (existingIndex !== -1) {\n      updatedScript.rules[existingIndex] = updatedRule;\n    } else {\n      updatedScript.rules.push(updatedRule);\n    }\n    \n    // ★ 修正: 統計更新（完全な型に対応）\n    updatedScript.statistics = {\n      totalRules: updatedScript.rules.length,\n      totalConditions: updatedScript.rules.reduce((sum, r) => sum + r.triggers.conditions.length, 0),\n      totalActions: updatedScript.rules.reduce((sum, r) => sum + r.actions.length, 0),\n      complexityScore: Math.min(100, updatedScript.rules.length * 10),\n      \n      // 追加のプロパティ\n      usedTriggerTypes: [...new Set(updatedScript.rules.flatMap(r => r.triggers.conditions.map(c => c.type)))],\n      usedActionTypes: [...new Set(updatedScript.rules.flatMap(r => r.actions.map(a => a.type)))],\n      flagCount: updatedScript.flags.length,\n      estimatedCPUUsage: updatedScript.rules.length > 20 ? 'high' : updatedScript.rules.length > 10 ? 'medium' : 'low',\n      estimatedMemoryUsage: updatedScript.rules.length * 0.5, // MB概算\n      maxConcurrentEffects: Math.max(0, ...updatedScript.rules.map(r => \n        r.actions.filter(a => a.type === 'effect').length\n      ))\n    };\n    \n    updateProject({ script: updatedScript });\n    setShowRuleModal(false);\n    setEditingRule(null);\n  }, [project.script, updateProject]);\n\n  // ルール削除\n  const handleDeleteRule = useCallback((ruleId: string) => {\n    const updatedScript = { ...project.script };\n    updatedScript.rules = updatedScript.rules.filter(r => r.id !== ruleId);\n    \n    // 統計更新\n    updatedScript.statistics = {\n      totalRules: updatedScript.rules.length,\n      totalConditions: updatedScript.rules.reduce((sum, r) => sum + r.triggers.conditions.length, 0),\n      totalActions: updatedScript.rules.reduce((sum, r) => sum + r.actions.length, 0),\n      complexityScore: Math.min(100, updatedScript.rules.length * 10),\n      usedTriggerTypes: [...new Set(updatedScript.rules.flatMap(r => r.triggers.conditions.map(c => c.type)))],\n      usedActionTypes: [...new Set(updatedScript.rules.flatMap(r => r.actions.map(a => a.type)))],\n      flagCount: updatedScript.flags.length,\n      estimatedCPUUsage: updatedScript.rules.length > 20 ? 'high' : updatedScript.rules.length > 10 ? 'medium' : 'low',\n      estimatedMemoryUsage: updatedScript.rules.length * 0.5,\n      maxConcurrentEffects: Math.max(0, ...updatedScript.rules.map(r => \n        r.actions.filter(a => a.type === 'effect').length\n      ))\n    };\n    \n    updateProject({ script: updatedScript });\n  }, [project.script, updateProject]);\n\n  // ドラッグ&ドロップ処理（ゲーム要素配置）\n  const handleDragOver = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  }, []);\n\n  const handleDrop = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    \n    if (mode !== 'layout' || !draggedItem) return;\n    \n    const rect = gamePreviewRef.current?.getBoundingClientRect();\n    if (!rect) return;\n    \n    const x = (e.clientX - rect.left) / rect.width;\n    const y = (e.clientY - rect.top) / rect.height;\n    \n    // 範囲制限（0-1）\n    const clampedX = Math.max(0, Math.min(1, x));\n    const clampedY = Math.max(0, Math.min(1, y));\n    \n    handleObjectPositionUpdate(draggedItem.id, { x: clampedX, y: clampedY });\n    setDraggedItem(null);\n  }, [mode, draggedItem, handleObjectPositionUpdate]);\n\n  return (\n    <div className=\"script-tab h-full flex flex-col\">\n      {/* タブ切り替え */}\n      <div className=\"flex mb-4 bg-gray-100 rounded-lg p-1\">\n        <button\n          className={`flex-1 py-2 px-4 rounded-md font-medium transition-colors ${\n            mode === 'layout' ? 'bg-white shadow-sm text-blue-600' : 'text-gray-600 hover:text-gray-800'\n          }`}\n          onClick={() => setMode('layout')}\n        >\n          🎨 レイアウト\n        </button>\n        <button\n          className={`flex-1 py-2 px-4 rounded-md font-medium transition-colors ${\n            mode === 'rules' ? 'bg-white shadow-sm text-blue-600' : 'text-gray-600 hover:text-gray-800'\n          }`}\n          onClick={() => setMode('rules')}\n        >\n          ⚙️ ルール設定\n        </button>\n      </div>\n\n      {/* レイアウトモード */}\n      {mode === 'layout' && (\n        <div className=\"flex flex-1 gap-4\">\n          {/* ゲームプレビューエリア */}\n          <div className=\"flex-1\">\n            <h3 className=\"text-lg font-semibold mb-3 text-gray-800\">🎮 ゲーム画面</h3>\n            <div\n              ref={gamePreviewRef}\n              className=\"relative w-full bg-gradient-to-b from-sky-200 to-green-200 rounded-xl border-2 border-gray-300 overflow-hidden\"\n              style={{ aspectRatio: '9/16', minHeight: '400px' }}\n              onDragOver={handleDragOver}\n              onDrop={handleDrop}\n            >\n              {/* 背景表示 */}\n              {project.script.layout.background.visible && project.assets.background && (\n                <div \n                  className=\"absolute inset-0 bg-cover bg-center\"\n                  style={{\n                    backgroundImage: project.assets.background.frames[0]?.dataUrl \n                      ? `url(${project.assets.background.frames[0].dataUrl})` \n                      : undefined\n                  }}\n                />\n              )}\n              \n              {/* オブジェクト表示 */}\n              {project.script.layout.objects.map((layoutObj, index) => {\n                const asset = project.assets.objects.find(obj => obj.id === layoutObj.objectId);\n                if (!asset || !asset.frames[0]) return null;\n                \n                return (\n                  <div\n                    key={layoutObj.objectId}\n                    className={`absolute cursor-move border-2 border-dashed transition-all ${\n                      selectedObjectId === layoutObj.objectId \n                        ? 'border-blue-500 shadow-lg' \n                        : 'border-transparent hover:border-blue-300'\n                    }`}\n                    style={{\n                      left: `${layoutObj.position.x * 100}%`,\n                      top: `${layoutObj.position.y * 100}%`,\n                      transform: 'translate(-50%, -50%)',\n                      zIndex: layoutObj.zIndex\n                    }}\n                    onClick={() => setSelectedObjectId(layoutObj.objectId)}\n                    draggable\n                    onDragStart={(e) => {\n                      setDraggedItem({ id: layoutObj.objectId, type: 'object' });\n                      e.dataTransfer.effectAllowed = 'move';\n                    }}\n                  >\n                    <img\n                      src={asset.frames[0].dataUrl}\n                      alt={asset.name}\n                      className=\"max-w-16 max-h-16 object-contain\"\n                      style={{\n                        transform: `scale(${layoutObj.scale.x}, ${layoutObj.scale.y}) rotate(${layoutObj.rotation}deg)`\n                      }}\n                    />\n                    <div className=\"absolute -top-6 left-1/2 transform -translate-x-1/2 text-xs bg-black bg-opacity-70 text-white px-1 rounded opacity-0 group-hover:opacity-100 transition-opacity\">\n                      {asset.name}\n                    </div>\n                  </div>\n                );\n              })}\n              \n              {/* グリッドヘルパー（開発時のみ表示） */}\n              <div className=\"absolute inset-0 pointer-events-none opacity-10\">\n                {Array.from({ length: 10 }).map((_, i) => (\n                  <div key={`h-${i}`} className=\"absolute border-t border-gray-400\" style={{ top: `${i * 10}%`, width: '100%' }} />\n                ))}\n                {Array.from({ length: 6 }).map((_, i) => (\n                  <div key={`v-${i}`} className=\"absolute border-l border-gray-400\" style={{ left: `${i * 16.67}%`, height: '100%' }} />\n                ))}\n              </div>\n            </div>\n          </div>\n          \n          {/* オブジェクト設定パネル */}\n          <div className=\"w-80 bg-gray-50 rounded-lg p-4\">\n            <h4 className=\"font-semibold text-gray-800 mb-3\">🔧 オブジェクト設定</h4>\n            \n            {selectedObjectId ? (\n              <div className=\"space-y-4\">\n                {(() => {\n                  const selectedObj = project.script.layout.objects.find(obj => obj.objectId === selectedObjectId);\n                  const selectedAsset = project.assets.objects.find(obj => obj.id === selectedObjectId);\n                  \n                  if (!selectedObj || !selectedAsset) return <p className=\"text-gray-500\">オブジェクトが見つかりません</p>;\n                  \n                  return (\n                    <>\n                      <div className=\"text-center\">\n                        <img \n                          src={selectedAsset.frames[0]?.dataUrl} \n                          alt={selectedAsset.name}\n                          className=\"w-16 h-16 mx-auto object-contain border rounded-lg\"\n                        />\n                        <p className=\"mt-2 font-medium\">{selectedAsset.name}</p>\n                      </div>\n                      \n                      {/* 位置設定 */}\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">位置</label>\n                        <div className=\"grid grid-cols-2 gap-2\">\n                          <div>\n                            <label className=\"text-xs text-gray-500\">X座標</label>\n                            <input\n                              type=\"range\"\n                              min=\"0\"\n                              max=\"1\"\n                              step=\"0.01\"\n                              value={selectedObj.position.x}\n                              onChange={(e) => handleObjectPositionUpdate(selectedObjectId, {\n                                x: parseFloat(e.target.value),\n                                y: selectedObj.position.y\n                              })}\n                              className=\"w-full\"\n                            />\n                            <span className=\"text-xs text-gray-500\">{Math.round(selectedObj.position.x * 100)}%</span>\n                          </div>\n                          <div>\n                            <label className=\"text-xs text-gray-500\">Y座標</label>\n                            <input\n                              type=\"range\"\n                              min=\"0\"\n                              max=\"1\"\n                              step=\"0.01\"\n                              value={selectedObj.position.y}\n                              onChange={(e) => handleObjectPositionUpdate(selectedObjectId, {\n                                x: selectedObj.position.x,\n                                y: parseFloat(e.target.value)\n                              })}\n                              className=\"w-full\"\n                            />\n                            <span className=\"text-xs text-gray-500\">{Math.round(selectedObj.position.y * 100)}%</span>\n                          </div>\n                        </div>\n                      </div>\n                      \n                      {/* 初期状態設定 */}\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">初期状態</label>\n                        <div className=\"space-y-2\">\n                          <label className=\"flex items-center\">\n                            <input\n                              type=\"checkbox\"\n                              checked={selectedObj.initialState.visible}\n                              onChange={(e) => {\n                                const updatedScript = { ...project.script };\n                                const objIndex = updatedScript.layout.objects.findIndex(obj => obj.objectId === selectedObjectId);\n                                if (objIndex !== -1) {\n                                  updatedScript.layout.objects[objIndex].initialState.visible = e.target.checked;\n                                  updateProject({ script: updatedScript });\n                                }\n                              }}\n                              className=\"mr-2\"\n                            />\n                            <span className=\"text-sm\">最初から表示</span>\n                          </label>\n                          \n                          <label className=\"flex items-center\">\n                            <input\n                              type=\"checkbox\"\n                              checked={selectedObj.initialState.autoStart}\n                              onChange={(e) => {\n                                const updatedScript = { ...project.script };\n                                const objIndex = updatedScript.layout.objects.findIndex(obj => obj.objectId === selectedObjectId);\n                                if (objIndex !== -1) {\n                                  updatedScript.layout.objects[objIndex].initialState.autoStart = e.target.checked;\n                                  updateProject({ script: updatedScript });\n                                }\n                              }}\n                              className=\"mr-2\"\n                            />\n                            <span className=\"text-sm\">アニメ自動開始</span>\n                          </label>\n                        </div>\n                      </div>\n                    </>\n                  );\n                })()}\n              </div>\n            ) : (\n              <div className=\"text-center text-gray-500 py-8\">\n                <div className=\"text-4xl mb-2\">👆</div>\n                <p>オブジェクトをタップして<br />設定を変更できます</p>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* ルールモード */}\n      {mode === 'rules' && (\n        <div className=\"flex-1\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h3 className=\"text-lg font-semibold text-gray-800\">⚙️ ゲームルール</h3>\n            <button\n              onClick={handleAddRule}\n              className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg font-medium transition-colors\"\n            >\n              ➕ ルール追加\n            </button>\n          </div>\n          \n          {/* 統計表示 */}\n          <div className=\"grid grid-cols-4 gap-4 mb-6\">\n            <div className=\"bg-blue-50 p-3 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-blue-600\">{project.script.statistics?.totalRules || 0}</div>\n              <div className=\"text-sm text-blue-700\">ルール数</div>\n            </div>\n            <div className=\"bg-green-50 p-3 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">{project.script.statistics?.totalConditions || 0}</div>\n              <div className=\"text-sm text-green-700\">条件数</div>\n            </div>\n            <div className=\"bg-purple-50 p-3 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-purple-600\">{project.script.statistics?.totalActions || 0}</div>\n              <div className=\"text-sm text-purple-700\">アクション数</div>\n            </div>\n            <div className=\"bg-orange-50 p-3 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-orange-600\">{project.script.statistics?.complexityScore || 0}</div>\n              <div className=\"text-sm text-orange-700\">複雑度</div>\n            </div>\n          </div>\n          \n          {/* ルール一覧 */}\n          <div className=\"space-y-3\">\n            {project.script.rules.length === 0 ? (\n              <div className=\"text-center py-12 bg-gray-50 rounded-lg border-2 border-dashed border-gray-300\">\n                <div className=\"text-6xl mb-4\">🎯</div>\n                <h4 className=\"text-lg font-medium text-gray-800 mb-2\">ルールがありません</h4>\n                <p className=\"text-gray-600 mb-4\">ゲームを動かすためのルールを追加しましょう！</p>\n                <button\n                  onClick={handleAddRule}\n                  className=\"bg-blue-500 hover:bg-blue-600 text-white px-6 py-3 rounded-lg font-medium transition-colors\"\n                >\n                  最初のルールを作成\n                </button>\n              </div>\n            ) : (\n              project.script.rules.map((rule) => (\n                <div key={rule.id} className=\"bg-white border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow\">\n                  <div className=\"flex justify-between items-start mb-3\">\n                    <div className=\"flex items-center gap-3\">\n                      <label className=\"flex items-center\">\n                        <input\n                          type=\"checkbox\"\n                          checked={rule.enabled}\n                          onChange={(e) => {\n                            const updatedScript = { ...project.script };\n                            const ruleIndex = updatedScript.rules.findIndex(r => r.id === rule.id);\n                            if (ruleIndex !== -1) {\n                              updatedScript.rules[ruleIndex].enabled = e.target.checked;\n                              updateProject({ script: updatedScript });\n                            }\n                          }}\n                          className=\"mr-2\"\n                        />\n                        <span className=\"font-medium text-gray-800\">{rule.name}</span>\n                      </label>\n                      <span className=\"text-xs bg-gray-100 px-2 py-1 rounded\">優先度: {rule.priority}</span>\n                    </div>\n                    \n                    <div className=\"flex gap-2\">\n                      <button\n                        onClick={() => {\n                          setEditingRule(rule);\n                          setShowRuleModal(true);\n                        }}\n                        className=\"text-blue-500 hover:text-blue-700 text-sm font-medium\"\n                      >\n                        編集\n                      </button>\n                      <button\n                        onClick={() => handleDeleteRule(rule.id)}\n                        className=\"text-red-500 hover:text-red-700 text-sm font-medium\"\n                      >\n                        削除\n                      </button>\n                    </div>\n                  </div>\n                  \n                  <div className=\"text-sm text-gray-600\">\n                    <p><strong>条件:</strong> {rule.triggers.conditions.length}個 ({rule.triggers.operator})</p>\n                    <p><strong>アクション:</strong> {rule.actions.length}個</p>\n                    {rule.targetObjectId && rule.targetObjectId !== 'stage' && (\n                      <p><strong>対象:</strong> {project.assets.objects.find(obj => obj.id === rule.targetObjectId)?.name || rule.targetObjectId}</p>\n                    )}\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* ルール編集モーダル */}\n      {showRuleModal && editingRule && (\n        <RuleEditorModal\n          rule={editingRule}\n          project={project}\n          onSave={handleSaveRule}\n          onClose={() => {\n            setShowRuleModal(false);\n            setEditingRule(null);\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\n// ルール編集モーダルコンポーネント\ninterface RuleEditorModalProps {\n  rule: GameRule;\n  project: GameProject;\n  onSave: (rule: GameRule) => void;\n  onClose: () => void;\n}\n\nconst RuleEditorModal: React.FC<RuleEditorModalProps> = ({ rule: initialRule, project, onSave, onClose }) => {\n  const [rule, setRule] = useState<GameRule>(initialRule);\n\n  const handleSave = () => {\n    onSave(rule);\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-4xl max-h-[90vh] overflow-auto\">\n        <div className=\"p-6 border-b border-gray-200\">\n          <h3 className=\"text-xl font-semibold text-gray-800\">🔧 ルール編集</h3>\n        </div>\n        \n        <div className=\"p-6\">\n          {/* ルール基本情報 */}\n          <div className=\"mb-6\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">ルール名</label>\n            <input\n              type=\"text\"\n              value={rule.name}\n              onChange={(e) => setRule({ ...rule, name: e.target.value })}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"ルール名を入力\"\n            />\n          </div>\n          \n          {/* 対象オブジェクト選択 */}\n          <div className=\"mb-6\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">対象オブジェクト</label>\n            <select\n              value={rule.targetObjectId}\n              onChange={(e) => setRule({ ...rule, targetObjectId: e.target.value })}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"stage\">🎮 ゲーム全体</option>\n              {project.assets.objects.map((obj) => (\n                <option key={obj.id} value={obj.id}>\n                  {obj.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          \n          {/* 条件設定 */}\n          <div className=\"mb-6\">\n            <h4 className=\"text-lg font-medium text-gray-800 mb-3\">🎯 発動条件</h4>\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <div className=\"flex items-center gap-2 mb-3\">\n                <span className=\"text-sm font-medium\">条件の組み合わせ:</span>\n                <select\n                  value={rule.triggers.operator}\n                  onChange={(e) => setRule({\n                    ...rule,\n                    triggers: { ...rule.triggers, operator: e.target.value as 'AND' | 'OR' }\n                  })}\n                  className=\"px-2 py-1 border border-gray-300 rounded text-sm\"\n                >\n                  <option value=\"AND\">すべての条件 (AND)</option>\n                  <option value=\"OR\">いずれかの条件 (OR)</option>\n                </select>\n              </div>\n              \n              {/* 条件ライブラリ */}\n              <div className=\"grid grid-cols-3 gap-2 mb-4\">\n                {CONDITIONS_LIBRARY.map((condition) => (\n                  <button\n                    key={condition.type}\n                    onClick={() => {\n                      const newCondition: TriggerCondition = {\n                        type: condition.type as any,\n                        target: 'self'\n                      } as any;\n                      \n                      setRule({\n                        ...rule,\n                        triggers: {\n                          ...rule.triggers,\n                          conditions: [...rule.triggers.conditions, newCondition]\n                        }\n                      });\n                    }}\n                    className={`p-3 text-center rounded-lg border-2 border-dashed border-gray-300 hover:border-blue-500 transition-colors ${condition.color}`}\n                  >\n                    <div className=\"text-2xl mb-1\">{condition.icon}</div>\n                    <div className=\"text-xs font-medium\">{condition.label}</div>\n                  </button>\n                ))}\n              </div>\n              \n              {/* 追加された条件一覧 */}\n              <div className=\"space-y-2\">\n                {rule.triggers.conditions.map((condition, index) => (\n                  <div key={index} className=\"flex items-center gap-2 bg-white p-2 rounded border\">\n                    <span className=\"text-sm\">\n                      {CONDITIONS_LIBRARY.find(c => c.type === condition.type)?.label || condition.type}\n                    </span>\n                    <button\n                      onClick={() => {\n                        const newConditions = rule.triggers.conditions.filter((_, i) => i !== index);\n                        setRule({\n                          ...rule,\n                          triggers: { ...rule.triggers, conditions: newConditions }\n                        });\n                      }}\n                      className=\"text-red-500 hover:text-red-700 text-sm\"\n                    >\n                      削除\n                    </button>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n          \n          {/* アクション設定 */}\n          <div className=\"mb-6\">\n            <h4 className=\"text-lg font-medium text-gray-800 mb-3\">⚡ アクション</h4>\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              {/* アクションライブラリ */}\n              <div className=\"grid grid-cols-4 gap-2 mb-4\">\n                {ACTIONS_LIBRARY.map((action) => (\n                  <button\n                    key={action.type}\n                    onClick={() => {\n                      const newAction: GameAction = {\n                        type: action.type as any\n                      } as any;\n                      \n                      setRule({\n                        ...rule,\n                        actions: [...rule.actions, newAction]\n                      });\n                    }}\n                    className={`p-3 text-center rounded-lg border-2 border-dashed border-gray-300 hover:border-green-500 transition-colors ${action.color}`}\n                  >\n                    <div className=\"text-xl mb-1\">{action.icon}</div>\n                    <div className=\"text-xs font-medium\">{action.label}</div>\n                  </button>\n                ))}\n              </div>\n              \n              {/* 追加されたアクション一覧 */}\n              <div className=\"space-y-2\">\n                {rule.actions.map((action, index) => (\n                  <div key={index} className=\"flex items-center gap-2 bg-white p-2 rounded border\">\n                    <span className=\"text-sm\">\n                      {ACTIONS_LIBRARY.find(a => a.type === action.type)?.label || action.type}\n                    </span>\n                    <button\n                      onClick={() => {\n                        const newActions = rule.actions.filter((_, i) => i !== index);\n                        setRule({ ...rule, actions: newActions });\n                      }}\n                      className=\"text-red-500 hover:text-red-700 text-sm\"\n                    >\n                      削除\n                    </button>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        {/* モーダルフッター */}\n        <div className=\"p-6 border-t border-gray-200 flex justify-end gap-3\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 text-gray-600 hover:text-gray-800 font-medium transition-colors\"\n          >\n            キャンセル\n          </button>\n          <button\n            onClick={handleSave}\n            className=\"px-6 py-2 bg-blue-500 hover:bg-blue-600 text-white font-medium rounded-lg transition-colors\"\n          >\n            保存\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ScriptTab;","import React, { useState, useCallback, useRef, useEffect } from 'react';\nimport { GameProject } from '../../../types/editor/GameProject';\nimport { GameSettings } from '../../../types/editor/GameProject';\n\ninterface SettingsTabProps {\n  project: GameProject;\n  onProjectUpdate: (project: GameProject) => void;\n}\n\n// ゲーム時間のプリセット\nconst DURATION_PRESETS = [\n  { value: 5, label: '5秒', description: 'サクッと', emoji: '⚡', color: 'bg-yellow-100 border-yellow-300' },\n  { value: 10, label: '10秒', description: 'ちょうどいい', emoji: '⏰', color: 'bg-blue-100 border-blue-300' },\n  { value: 15, label: '15秒', description: 'じっくり', emoji: '🎯', color: 'bg-green-100 border-green-300' },\n  { value: 30, label: '30秒', description: 'たっぷり', emoji: '🏃', color: 'bg-purple-100 border-purple-300' },\n] as const;\n\n// 難易度設定\nconst DIFFICULTY_LEVELS = [\n  { value: 'easy', label: 'やさしい', description: '誰でも楽しめる', emoji: '😊', color: 'bg-green-100 border-green-300' },\n  { value: 'normal', label: 'ふつう', description: 'ちょうどいい挑戦', emoji: '🙂', color: 'bg-blue-100 border-blue-300' },\n  { value: 'hard', label: 'むずかしい', description: '上級者向け', emoji: '😤', color: 'bg-red-100 border-red-300' },\n] as const;\n\nexport const SettingsTab: React.FC<SettingsTabProps> = ({ project, onProjectUpdate }) => {\n  const [isTestPlaying, setIsTestPlaying] = useState(false);\n  const [testPlayResult, setTestPlayResult] = useState<'success' | 'failure' | null>(null);\n  const [isPublishing, setIsPublishing] = useState(false);\n  const [publishError, setPublishError] = useState<string | null>(null);\n  const [generateThumbnail, setGenerateThumbnail] = useState(false);\n  const gameTestRef = useRef<HTMLDivElement>(null);\n\n  // プロジェクト更新ヘルパー\n  const updateProject = useCallback((updates: Partial<GameProject>) => {\n    onProjectUpdate({ ...project, ...updates });\n  }, [project, onProjectUpdate]);\n\n  // 設定更新ヘルパー\n  const updateSettings = useCallback((updates: Partial<GameSettings>) => {\n    const newSettings = { ...project.settings, ...updates };\n    updateProject({ settings: newSettings });\n  }, [project.settings, updateProject]);\n\n  // ゲーム名の更新\n  const handleGameNameChange = useCallback((name: string) => {\n    updateSettings({ name: name.slice(0, 50) }); // 50文字制限\n  }, [updateSettings]);\n\n  // ゲーム説明の更新\n  const handleDescriptionChange = useCallback((description: string) => {\n    updateSettings({ description: description.slice(0, 200) }); // 200文字制限\n  }, [updateSettings]);\n\n  // ゲーム時間設定の更新\n  const handleDurationChange = useCallback((seconds: number) => {\n    updateSettings({\n      duration: {\n        type: 'fixed',\n        seconds: seconds as 5 | 10 | 15 | 20 | 30\n      }\n    });\n  }, [updateSettings]);\n\n  // 難易度設定の更新\n  const handleDifficultyChange = useCallback((difficulty: 'easy' | 'normal' | 'hard') => {\n    updateSettings({ difficulty });\n  }, [updateSettings]);\n\n  // テストプレイ機能\n  const handleTestPlay = useCallback(async () => {\n    setIsTestPlaying(true);\n    setTestPlayResult(null);\n    \n    try {\n      // 簡単なプロジェクト検証\n      if (!project.assets.objects.length && !project.assets.background) {\n        throw new Error('ゲームにオブジェクトまたは背景を追加してください');\n      }\n      \n      if (!project.script.rules.length && !project.script.successConditions.length) {\n        throw new Error('ゲームルールまたは成功条件を設定してください');\n      }\n      \n      // テストプレイシミュレーション（3秒間）\n      setTimeout(() => {\n        // ランダムに成功/失敗を決定（デモ用）\n        const success = Math.random() > 0.3;\n        setTestPlayResult(success ? 'success' : 'failure');\n        setIsTestPlaying(false);\n      }, 3000);\n      \n    } catch (error) {\n      console.error('Test play error:', error);\n      setTestPlayResult('failure');\n      setIsTestPlaying(false);\n    }\n  }, [project]);\n\n  // サムネイル自動生成\n  const handleGenerateThumbnail = useCallback(async () => {\n    setGenerateThumbnail(true);\n    \n    try {\n      // 実際の実装では、ゲーム画面のスクリーンショットを撮る\n      // ここではダミー実装\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      const canvas = document.createElement('canvas');\n      canvas.width = 300;\n      canvas.height = 400;\n      const ctx = canvas.getContext('2d');\n      \n      if (ctx) {\n        // 背景グラデーション\n        const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n        gradient.addColorStop(0, '#3B82F6');\n        gradient.addColorStop(1, '#1D4ED8');\n        ctx.fillStyle = gradient;\n        ctx.fillRect(0, 0, 300, 400);\n        \n        // ゲーム名表示\n        ctx.fillStyle = 'white';\n        ctx.font = 'bold 24px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText(project.settings.name || 'My Game', 150, 50);\n        \n        // 背景画像があれば表示（簡略版）\n        if (project.assets.background?.frames[0]) {\n          ctx.fillStyle = 'rgba(255,255,255,0.1)';\n          ctx.fillRect(50, 100, 200, 150);\n          ctx.fillStyle = 'white';\n          ctx.font = '16px Arial';\n          ctx.fillText('Background Image', 150, 175);\n        }\n        \n        // オブジェクト数表示\n        ctx.fillStyle = 'rgba(255,255,255,0.9)';\n        ctx.font = '14px Arial';\n        ctx.fillText(`Objects: ${project.assets.objects.length}`, 150, 300);\n        ctx.fillText(`Rules: ${project.script.rules.length}`, 150, 320);\n        ctx.fillText(`Duration: ${project.settings.duration?.seconds || 10}s`, 150, 340);\n      }\n      \n      const thumbnailDataUrl = canvas.toDataURL('image/png');\n      \n      updateSettings({\n        preview: {\n          ...project.settings.preview,\n          thumbnailDataUrl\n        }\n      });\n      \n    } catch (error) {\n      console.error('Thumbnail generation error:', error);\n    } finally {\n      setGenerateThumbnail(false);\n    }\n  }, [project, updateSettings]);\n\n  // プロジェクト公開\n  const handlePublish = useCallback(async () => {\n    setIsPublishing(true);\n    setPublishError(null);\n    \n    try {\n      // 必須項目チェック\n      if (!project.settings.name?.trim()) {\n        throw new Error('ゲーム名を入力してください');\n      }\n      \n      if (!project.assets.objects.length && !project.assets.background) {\n        throw new Error('最低1つのオブジェクトまたは背景を追加してください');\n      }\n      \n      if (!project.script.rules.length && !project.script.successConditions.length) {\n        throw new Error('ゲームルールまたは成功条件を設定してください');\n      }\n      \n      // 公開処理のシミュレーション\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      // 公開設定を更新\n      updateSettings({\n        publishing: {\n          ...project.settings.publishing,\n          isPublished: true,\n          publishedAt: new Date().toISOString(),\n          visibility: 'public'\n        }\n      });\n      \n      // ステータス更新\n      updateProject({ status: 'published' });\n      \n    } catch (error) {\n      setPublishError(error instanceof Error ? error.message : '公開に失敗しました');\n    } finally {\n      setIsPublishing(false);\n    }\n  }, [project, updateSettings, updateProject]);\n\n  // エクスポート機能\n  const handleExport = useCallback(async () => {\n    try {\n      const exportData = {\n        ...project,\n        exportedAt: new Date().toISOString(),\n        exportSettings: project.settings.export\n      };\n      \n      const blob = new Blob([JSON.stringify(exportData, null, 2)], { \n        type: 'application/json' \n      });\n      \n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `${project.settings.name || 'my-game'}.json`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      \n    } catch (error) {\n      console.error('Export error:', error);\n    }\n  }, [project]);\n\n  return (\n    <div className=\"settings-tab h-full overflow-auto\">\n      <div className=\"max-w-4xl mx-auto p-6\">\n        \n        {/* ゲーム基本情報 */}\n        <section className=\"mb-8\">\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-4 flex items-center gap-2\">\n            🎮 ゲーム情報\n          </h3>\n          \n          <div className=\"bg-white rounded-lg border border-gray-200 p-6 space-y-4\">\n            {/* ゲーム名 */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                ゲーム名 <span className=\"text-red-500\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                value={project.settings.name || ''}\n                onChange={(e) => handleGameNameChange(e.target.value)}\n                placeholder=\"素晴らしいゲーム名を入力してください\"\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                maxLength={50}\n              />\n              <div className=\"text-right text-sm text-gray-500 mt-1\">\n                {(project.settings.name || '').length}/50\n              </div>\n            </div>\n            \n            {/* ゲーム説明 */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                ゲーム説明\n              </label>\n              <textarea\n                value={project.settings.description || ''}\n                onChange={(e) => handleDescriptionChange(e.target.value)}\n                placeholder=\"このゲームの楽しさを説明してください\"\n                rows={3}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none\"\n                maxLength={200}\n              />\n              <div className=\"text-right text-sm text-gray-500 mt-1\">\n                {(project.settings.description || '').length}/200\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* ゲーム設定 */}\n        <section className=\"mb-8\">\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-4 flex items-center gap-2\">\n            ⚙️ ゲーム設定\n          </h3>\n          \n          <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n            {/* ゲーム時間設定 */}\n            <div className=\"mb-6\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                ゲーム時間\n              </label>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3\">\n                {DURATION_PRESETS.map((preset) => (\n                  <button\n                    key={preset.value}\n                    onClick={() => handleDurationChange(preset.value)}\n                    className={`p-4 border-2 rounded-lg text-center transition-all hover:scale-105 ${\n                      project.settings.duration?.seconds === preset.value\n                        ? preset.color + ' border-current shadow-lg'\n                        : 'border-gray-200 hover:border-gray-300'\n                    }`}\n                  >\n                    <div className=\"text-2xl mb-1\">{preset.emoji}</div>\n                    <div className=\"font-semibold\">{preset.label}</div>\n                    <div className=\"text-xs text-gray-600\">{preset.description}</div>\n                  </button>\n                ))}\n              </div>\n            </div>\n            \n            {/* 難易度設定 */}\n            <div className=\"mb-6\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                難易度\n              </label>\n              <div className=\"grid grid-cols-3 gap-3\">\n                {DIFFICULTY_LEVELS.map((level) => (\n                  <button\n                    key={level.value}\n                    onClick={() => handleDifficultyChange(level.value)}\n                    className={`p-4 border-2 rounded-lg text-center transition-all hover:scale-105 ${\n                      project.settings.difficulty === level.value\n                        ? level.color + ' border-current shadow-lg'\n                        : 'border-gray-200 hover:border-gray-300'\n                    }`}\n                  >\n                    <div className=\"text-2xl mb-1\">{level.emoji}</div>\n                    <div className=\"font-semibold\">{level.label}</div>\n                    <div className=\"text-xs text-gray-600\">{level.description}</div>\n                  </button>\n                ))}\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* テストプレイ */}\n        <section className=\"mb-8\">\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-4 flex items-center gap-2\">\n            🎯 テストプレイ\n          </h3>\n          \n          <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n            <div className=\"flex flex-col items-center text-center\">\n              {!isTestPlaying && testPlayResult === null && (\n                <>\n                  <div className=\"text-6xl mb-4\">🕹️</div>\n                  <h4 className=\"text-lg font-medium text-gray-800 mb-2\">\n                    ゲームをテストしてみましょう\n                  </h4>\n                  <p className=\"text-gray-600 mb-6\">\n                    作成したゲームが正しく動作するか確認できます\n                  </p>\n                  <button\n                    onClick={handleTestPlay}\n                    disabled={!project.settings.name}\n                    className=\"bg-blue-500 hover:bg-blue-600 disabled:bg-gray-300 disabled:cursor-not-allowed text-white px-8 py-3 rounded-lg font-medium transition-colors\"\n                  >\n                    ▶️ テストプレイ開始\n                  </button>\n                </>\n              )}\n              \n              {isTestPlaying && (\n                <>\n                  <div className=\"text-6xl mb-4 animate-bounce\">🎮</div>\n                  <h4 className=\"text-lg font-medium text-gray-800 mb-2\">\n                    テストプレイ中...\n                  </h4>\n                  <p className=\"text-gray-600\">ゲームの動作を確認しています</p>\n                  <div className=\"mt-4 w-full bg-gray-200 rounded-full h-2\">\n                    <div className=\"bg-blue-500 h-2 rounded-full animate-pulse\" style={{ width: '70%' }}></div>\n                  </div>\n                </>\n              )}\n              \n              {testPlayResult === 'success' && (\n                <>\n                  <div className=\"text-6xl mb-4\">🎉</div>\n                  <h4 className=\"text-lg font-medium text-green-600 mb-2\">\n                    テスト成功！\n                  </h4>\n                  <p className=\"text-gray-600 mb-4\">\n                    ゲームが正常に動作しています\n                  </p>\n                  <button\n                    onClick={() => setTestPlayResult(null)}\n                    className=\"text-blue-500 hover:text-blue-700 font-medium\"\n                  >\n                    もう一度テスト\n                  </button>\n                </>\n              )}\n              \n              {testPlayResult === 'failure' && (\n                <>\n                  <div className=\"text-6xl mb-4\">⚠️</div>\n                  <h4 className=\"text-lg font-medium text-red-600 mb-2\">\n                    テストで問題発見\n                  </h4>\n                  <p className=\"text-gray-600 mb-4\">\n                    ゲーム設定を確認して、再度テストしてください\n                  </p>\n                  <div className=\"flex gap-3\">\n                    <button\n                      onClick={() => setTestPlayResult(null)}\n                      className=\"text-blue-500 hover:text-blue-700 font-medium\"\n                    >\n                      もう一度テスト\n                    </button>\n                    <button\n                      onClick={() => {/* ルールタブに移動 */}}\n                      className=\"text-orange-500 hover:text-orange-700 font-medium\"\n                    >\n                      ルール設定を確認\n                    </button>\n                  </div>\n                </>\n              )}\n            </div>\n          </div>\n        </section>\n\n        {/* サムネイル設定 */}\n        <section className=\"mb-8\">\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-4 flex items-center gap-2\">\n            📸 サムネイル\n          </h3>\n          \n          <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n            <div className=\"flex items-center gap-6\">\n              {/* サムネイルプレビュー */}\n              <div className=\"flex-shrink-0\">\n                <div className=\"w-32 h-40 bg-gray-100 rounded-lg border-2 border-dashed border-gray-300 flex items-center justify-center overflow-hidden\">\n                  {project.settings.preview?.thumbnailDataUrl ? (\n                    <img\n                      src={project.settings.preview.thumbnailDataUrl}\n                      alt=\"Game Thumbnail\"\n                      className=\"w-full h-full object-cover\"\n                    />\n                  ) : (\n                    <div className=\"text-center text-gray-500\">\n                      <div className=\"text-2xl mb-1\">📸</div>\n                      <div className=\"text-xs\">No Thumbnail</div>\n                    </div>\n                  )}\n                </div>\n              </div>\n              \n              {/* サムネイル設定 */}\n              <div className=\"flex-1\">\n                <h4 className=\"font-medium text-gray-800 mb-2\">ゲームサムネイル</h4>\n                <p className=\"text-sm text-gray-600 mb-4\">\n                  ゲームの魅力を伝えるサムネイルを設定します\n                </p>\n                \n                <div className=\"flex gap-3\">\n                  <button\n                    onClick={handleGenerateThumbnail}\n                    disabled={generateThumbnail}\n                    className=\"bg-green-500 hover:bg-green-600 disabled:bg-gray-300 text-white px-4 py-2 rounded-lg font-medium transition-colors\"\n                  >\n                    {generateThumbnail ? '生成中...' : '🎨 自動生成'}\n                  </button>\n                  \n                  <label className=\"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg font-medium transition-colors cursor-pointer\">\n                    📁 アップロード\n                    <input\n                      type=\"file\"\n                      accept=\"image/*\"\n                      className=\"hidden\"\n                      onChange={(e) => {\n                        const file = e.target.files?.[0];\n                        if (file) {\n                          const reader = new FileReader();\n                          reader.onload = (e) => {\n                            const thumbnailDataUrl = e.target?.result as string;\n                            updateSettings({\n                              preview: {\n                                ...project.settings.preview,\n                                thumbnailDataUrl\n                              }\n                            });\n                          };\n                          reader.readAsDataURL(file);\n                        }\n                      }}\n                    />\n                  </label>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* 公開設定 */}\n        <section className=\"mb-8\">\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-4 flex items-center gap-2\">\n            🌐 公開設定\n          </h3>\n          \n          <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n            <div className=\"space-y-4\">\n              <label className=\"flex items-center gap-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={project.settings.publishing?.visibility === 'public'}\n                  onChange={(e) => updateSettings({\n                    publishing: {\n                      ...project.settings.publishing,\n                      visibility: e.target.checked ? 'public' : 'private'\n                    }\n                  })}\n                  className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n                />\n                <div>\n                  <div className=\"font-medium text-gray-800\">🌍 一般公開</div>\n                  <div className=\"text-sm text-gray-600\">誰でもゲームを遊べるようにする</div>\n                </div>\n              </label>\n              \n              <label className=\"flex items-center gap-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={project.settings.publishing?.allowComments || false}\n                  onChange={(e) => updateSettings({\n                    publishing: {\n                      ...project.settings.publishing,\n                      allowComments: e.target.checked\n                    }\n                  })}\n                  className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n                />\n                <div>\n                  <div className=\"font-medium text-gray-800\">💬 コメント許可</div>\n                  <div className=\"text-sm text-gray-600\">ユーザーがコメントできるようにする</div>\n                </div>\n              </label>\n              \n              <label className=\"flex items-center gap-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={project.settings.publishing?.allowRemix || false}\n                  onChange={(e) => updateSettings({\n                    publishing: {\n                      ...project.settings.publishing,\n                      allowRemix: e.target.checked\n                    }\n                  })}\n                  className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n                />\n                <div>\n                  <div className=\"font-medium text-gray-800\">🔄 リミックス許可</div>\n                  <div className=\"text-sm text-gray-600\">他のユーザーがゲームを改変できるようにする</div>\n                </div>\n              </label>\n            </div>\n            \n            {publishError && (\n              <div className=\"mt-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\n                <div className=\"text-red-600 text-sm\">⚠️ {publishError}</div>\n              </div>\n            )}\n          </div>\n        </section>\n\n        {/* アクションボタン */}\n        <section className=\"flex flex-wrap gap-4 justify-center\">\n          <button\n            onClick={handleTestPlay}\n            disabled={!project.settings.name || isTestPlaying}\n            className=\"flex items-center gap-2 bg-blue-500 hover:bg-blue-600 disabled:bg-gray-300 disabled:cursor-not-allowed text-white px-6 py-3 rounded-lg font-medium transition-colors\"\n          >\n            🎯 テストプレイ\n          </button>\n          \n          <button\n            onClick={handlePublish}\n            disabled={!project.settings.name || isPublishing || !project.assets.objects.length}\n            className=\"flex items-center gap-2 bg-green-500 hover:bg-green-600 disabled:bg-gray-300 disabled:cursor-not-allowed text-white px-6 py-3 rounded-lg font-medium transition-colors\"\n          >\n            {isPublishing ? '公開中...' : project.settings.publishing?.isPublished ? '🔄 更新' : '🚀 公開'}\n          </button>\n          \n          <button\n            onClick={handleExport}\n            className=\"flex items-center gap-2 bg-purple-500 hover:bg-purple-600 text-white px-6 py-3 rounded-lg font-medium transition-colors\"\n          >\n            📦 エクスポート\n          </button>\n        </section>\n        \n        {/* 公開ステータス表示 */}\n        {project.settings.publishing?.isPublished && (\n          <div className=\"mt-6 text-center\">\n            <div className=\"inline-flex items-center gap-2 bg-green-50 border border-green-200 px-4 py-2 rounded-lg\">\n              <span className=\"text-green-600\">✅ 公開済み</span>\n              {project.settings.publishing?.publishedAt && (\n                <span className=\"text-green-600 text-sm\">\n                  {new Date(project.settings.publishing.publishedAt).toLocaleString('ja-JP')}\n                </span>\n              )}\n            </div>\n          </div>\n        )}\n        \n        {/* ゲーム統計情報 */}\n        <section className=\"mt-8 bg-gray-50 rounded-lg p-6\">\n          <h4 className=\"text-lg font-medium text-gray-800 mb-4\">📊 ゲーム統計</h4>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-blue-600\">\n                {project.assets.objects.length}\n              </div>\n              <div className=\"text-sm text-gray-600\">オブジェクト</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">\n                {project.script.rules.length}\n              </div>\n              <div className=\"text-sm text-gray-600\">ルール</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-purple-600\">\n                {project.assets.texts.length}\n              </div>\n              <div className=\"text-sm text-gray-600\">テキスト</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-orange-600\">\n                {Math.round((project.totalSize || 0) / 1024 / 1024 * 10) / 10}MB\n              </div>\n              <div className=\"text-sm text-gray-600\">総容量</div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsTab;","import React, { useState, useEffect } from 'react';\nimport { GameProject } from '../../types/editor/GameProject';\nimport { EDITOR_LIMITS } from '../../constants/EditorLimits';\nimport { AssetsTab } from './tabs/AssetsTab';\nimport { AudioTab } from './tabs/AudioTab';\nimport ScriptTab from './tabs/ScriptTab';\nimport SettingsTab from './tabs/SettingsTab';\n\n// タブタイプ定義\ntype EditorTab = 'assets' | 'audio' | 'script' | 'settings';\n\ninterface GameEditorProps {\n  project: GameProject;\n  onProjectUpdate: (project: GameProject) => void;\n  onSave: () => void;\n  onPublish: () => void;\n  onTestPlay: () => void;\n  tabs?: Array<{\n    id: EditorTab;\n    label: string;\n    icon: string;\n    description: string;\n    disabled?: boolean;\n    badge?: string | number;\n  }>;\n}\n\nexport const GameEditor: React.FC<GameEditorProps> = ({\n  project,\n  onProjectUpdate,\n  onSave,\n  onPublish,\n  onTestPlay,\n  tabs: customTabs\n}) => {\n  const [activeTab, setActiveTab] = useState<EditorTab>('assets');\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n  const [autoSaveEnabled, setAutoSaveEnabled] = useState(true);\n\n  // プロジェクト更新時の処理\n  const handleProjectUpdate = (updatedProject: GameProject) => {\n    onProjectUpdate({\n      ...updatedProject,\n      lastModified: new Date().toISOString(),\n      editorState: {\n        ...updatedProject.editorState,\n        activeTab,\n        lastSaved: new Date().toISOString(),\n        autoSaveEnabled,\n        tabStates: updatedProject.editorState?.tabStates || {\n          assets: {\n            selectedAssetType: null,\n            selectedAssetId: null,\n            showAnimationEditor: false\n          },\n          audio: {\n            selectedAudioType: null,\n            selectedAudioId: null,\n            isPlaying: false\n          },\n          script: {\n            mode: 'layout',\n            selectedObjectId: null,\n            selectedRuleId: null,\n            showRuleEditor: false\n          },\n          settings: {\n            showTestPlay: false,\n            lastTestResult: null\n          }\n        },\n        ui: updatedProject.editorState?.ui || {\n          sidebarCollapsed: false,\n          previewVisible: true,\n          capacityMeterExpanded: false\n        }\n      }\n    });\n    setHasUnsavedChanges(true);\n  };\n\n  // 自動保存機能\n  useEffect(() => {\n    if (autoSaveEnabled && hasUnsavedChanges) {\n      const autoSaveTimer = setTimeout(() => {\n        onSave();\n        setHasUnsavedChanges(false);\n      }, EDITOR_LIMITS.PROJECT.AUTO_SAVE_INTERVAL);\n\n      return () => clearTimeout(autoSaveTimer);\n    }\n  }, [autoSaveEnabled, hasUnsavedChanges, onSave]);\n\n  // 容量計算\n  const calculateTotalSize = (): number => {\n    const assets = project.assets;\n    let total = 0;\n\n    // 背景サイズ\n    if (assets.background) {\n      total += assets.background.totalSize;\n    }\n\n    // オブジェクトサイズ\n    assets.objects.forEach(obj => {\n      total += obj.totalSize;\n    });\n\n    // 音声サイズ\n    if (assets.audio.bgm) {\n      total += assets.audio.bgm.fileSize;\n    }\n    assets.audio.se.forEach(se => {\n      total += se.fileSize;\n    });\n\n    return total;\n  };\n\n  const totalSize = calculateTotalSize();\n  const sizePercentage = (totalSize / EDITOR_LIMITS.PROJECT.TOTAL_MAX_SIZE) * 100;\n\n  // タブの設定（動的バッジ表示）\n  const tabs = customTabs || [\n    { \n      id: 'assets' as EditorTab, \n      label: '絵', \n      icon: '🎨', \n      description: 'キャラクター・背景・テキスト管理',\n      badge: project.assets.objects.length + (project.assets.background ? 1 : 0) + project.assets.texts.length || undefined\n    },\n    { \n      id: 'audio' as EditorTab, \n      label: '音', \n      icon: '🎵', \n      description: '音楽・効果音管理',\n      badge: (project.assets.audio.bgm ? 1 : 0) + project.assets.audio.se.length || undefined\n    },\n    { \n      id: 'script' as EditorTab, \n      label: 'ルール', \n      icon: '⚙️', \n      description: 'ゲーム動作・条件設定',\n      badge: project.script.rules.length || undefined\n    },\n    { \n      id: 'settings' as EditorTab, \n      label: '公開', \n      icon: '🚀', \n      description: 'ゲーム設定・テスト・公開',\n      badge: project.settings.publishing?.isPublished ? '✓' : undefined\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-50 to-pink-50\">\n      {/* ヘッダー */}\n      <header className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center py-4\">\n            {/* プロジェクト情報 */}\n            <div className=\"flex items-center space-x-4\">\n              <div>\n                <h1 className=\"text-2xl font-bold text-gray-900\">\n                  {project.name || project.settings.name || 'マイゲーム'}\n                </h1>\n                <p className=\"text-sm text-gray-500\">\n                  最終更新: {new Date(project.lastModified).toLocaleDateString('ja-JP')}\n                  {hasUnsavedChanges && <span className=\"text-orange-500 ml-2\">• 未保存</span>}\n                  {project.status === 'published' && <span className=\"text-green-500 ml-2\">• 公開中</span>}\n                </p>\n              </div>\n            </div>\n\n            {/* アクション */}\n            <div className=\"flex items-center space-x-3\">\n              {/* 容量表示 */}\n              <div className=\"text-sm\">\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"text-gray-600\">容量:</span>\n                  <div className=\"w-20 bg-gray-200 rounded-full h-2\">\n                    <div \n                      className={`h-2 rounded-full transition-all duration-300 ${\n                        sizePercentage > 90 ? 'bg-red-500' : \n                        sizePercentage > 70 ? 'bg-yellow-500' : 'bg-green-500'\n                      }`}\n                      style={{ width: `${Math.min(sizePercentage, 100)}%` }}\n                    />\n                  </div>\n                  <span className={`text-xs ${sizePercentage > 90 ? 'text-red-600' : 'text-gray-600'}`}>\n                    {(totalSize / 1024 / 1024).toFixed(1)}MB\n                  </span>\n                </div>\n              </div>\n\n              {/* 自動保存切り替え */}\n              <label className=\"flex items-center space-x-2 text-sm\">\n                <input\n                  type=\"checkbox\"\n                  checked={autoSaveEnabled}\n                  onChange={(e) => setAutoSaveEnabled(e.target.checked)}\n                  className=\"rounded\"\n                />\n                <span className=\"text-gray-600\">自動保存</span>\n              </label>\n\n              {/* アクションボタン */}\n              <button\n                onClick={onSave}\n                className=\"px-4 py-2 bg-gray-100 hover:bg-gray-200 rounded-lg font-medium text-gray-700 transition-colors\"\n              >\n                💾 保存\n              </button>\n              <button\n                onClick={onTestPlay}\n                className=\"px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-lg font-medium transition-colors\"\n              >\n                ▶️ テスト\n              </button>\n              <button\n                onClick={onPublish}\n                className=\"px-4 py-2 bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white rounded-lg font-medium transition-colors\"\n              >\n                🚀 公開\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* タブナビゲーション */}\n      <nav className=\"bg-white shadow-sm\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex space-x-1 py-3\">\n            {tabs.map((tab) => (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`relative flex items-center space-x-2 px-6 py-3 rounded-full font-semibold transition-all duration-200 ${\n                  activeTab === tab.id\n                    ? 'bg-gradient-to-r from-purple-500 to-pink-500 text-white shadow-md scale-105'\n                    : 'bg-gray-100 text-gray-600 hover:bg-gray-200 hover:scale-102'\n                }`}\n              >\n                <span className=\"text-lg\">{tab.icon}</span>\n                <span>{tab.label}</span>\n                {/* バッジ表示 */}\n                {tab.badge && (\n                  <span className={`absolute -top-1 -right-1 min-w-5 h-5 flex items-center justify-center text-xs font-bold rounded-full ${\n                    activeTab === tab.id \n                      ? 'bg-white text-purple-600' \n                      : 'bg-red-500 text-white'\n                  }`}>\n                    {tab.badge}\n                  </span>\n                )}\n              </button>\n            ))}\n          </div>\n          \n          {/* タブ説明 */}\n          <div className=\"pb-3\">\n            <p className=\"text-sm text-gray-500\">\n              {tabs.find(tab => tab.id === activeTab)?.description}\n            </p>\n          </div>\n        </div>\n      </nav>\n\n      {/* メインコンテンツエリア */}\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"bg-white rounded-2xl shadow-lg border border-gray-200 min-h-[600px]\">\n          <div className=\"p-6\">\n            {/* タブ別コンテンツ */}\n            {activeTab === 'assets' && (\n              <AssetsTab \n                project={project} \n                onProjectUpdate={handleProjectUpdate}\n              />\n            )}\n\n            {activeTab === 'audio' && (\n              <AudioTab\n                project={project}\n                onProjectUpdate={handleProjectUpdate}\n              />\n            )}\n\n            {activeTab === 'script' && (\n              <ScriptTab\n                project={project}\n                onProjectUpdate={handleProjectUpdate}\n              />\n            )}\n\n            {activeTab === 'settings' && (\n              <SettingsTab\n                project={project}\n                onProjectUpdate={handleProjectUpdate}\n              />\n            )}\n          </div>\n        </div>\n      </main>\n\n      {/* フローティングヘルプボタン */}\n      <div className=\"fixed bottom-6 right-6\">\n        <button className=\"bg-purple-500 hover:bg-purple-600 text-white p-4 rounded-full shadow-lg transition-colors\">\n          <span className=\"text-xl\">❓</span>\n        </button>\n      </div>\n\n      {/* 開発進捗表示（デバッグ用） */}\n      {process.env.NODE_ENV === 'development' && (\n        <div className=\"fixed bottom-6 left-6 bg-black bg-opacity-80 text-white text-xs p-3 rounded-lg\">\n          <div>🎯 Phase 6.4 完了</div>\n          <div>📊 Assets: {project.assets.objects.length}, Rules: {project.script.rules.length}</div>\n          <div>💾 Size: {(totalSize / 1024 / 1024).toFixed(1)}MB</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n","import React, { useState, useEffect } from 'react';\nimport { GameProject } from '../../types/editor/GameProject';\nimport { EDITOR_LIMITS } from '../../constants/EditorLimits';\n\ninterface ProjectSelectorProps {\n  onProjectSelect: (project: GameProject) => void;\n  onCreateNew: (name: string) => void;\n  onDelete?: (projectId: string) => void;      // ← 追加\n  onDuplicate?: (projectId: string) => void;   // ← 追加 \n  onExport?: (projectId: string) => void;      // ← 追加\n}\n\ninterface ProjectCardProps {\n  project: GameProject;\n  onSelect: () => void;\n  onDelete: () => void;\n}\n\nconst ProjectCard: React.FC<ProjectCardProps> = ({ project, onSelect, onDelete }) => {\n  const lastModified = new Date(project.lastModified);\n  const isRecent = Date.now() - lastModified.getTime() < 24 * 60 * 60 * 1000; // 24時間以内\n\n  // プロジェクト統計計算\n  const stats = {\n    objects: project.assets.objects.length,\n    sounds: project.assets.audio.se.length + (project.assets.audio.bgm ? 1 : 0),\n    rules: project.script.rules.length,\n    totalSize: project.totalSize || 0\n  };\n\n  const sizeInMB = (stats.totalSize / 1024 / 1024).toFixed(1);\n  const sizePercentage = (stats.totalSize / EDITOR_LIMITS.PROJECT.TOTAL_MAX_SIZE) * 100;\n\n  return (\n    <div className=\"bg-white rounded-2xl shadow-lg border border-gray-200 hover:shadow-xl transition-all duration-300 overflow-hidden group\">\n      {/* サムネイル/プレビューエリア */}\n      <div className=\"h-32 bg-gradient-to-br from-purple-100 to-pink-100 relative\">\n        {project.thumbnailDataUrl ? (\n          <img \n            src={project.thumbnailDataUrl} \n            alt={project.name}\n            className=\"w-full h-full object-cover\"\n          />\n        ) : (\n          <div className=\"flex items-center justify-center h-full\">\n            <div className=\"text-center\">\n              <div className=\"text-3xl mb-1\">🎮</div>\n              <div className=\"text-xs text-gray-500\">サムネイル未設定</div>\n            </div>\n          </div>\n        )}\n        \n        {/* ステータスバッジ */}\n        <div className=\"absolute top-2 left-2\">\n          <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n            project.status === 'published' ? 'bg-green-100 text-green-800' :\n            project.status === 'testing' ? 'bg-blue-100 text-blue-800' :\n            'bg-gray-100 text-gray-800'\n          }`}>\n            {project.status === 'published' ? '公開済み' :\n             project.status === 'testing' ? 'テスト中' : '下書き'}\n          </span>\n        </div>\n\n        {/* 新規作成バッジ */}\n        {isRecent && (\n          <div className=\"absolute top-2 right-2\">\n            <span className=\"px-2 py-1 bg-orange-100 text-orange-800 rounded-full text-xs font-medium\">\n              NEW\n            </span>\n          </div>\n        )}\n\n        {/* 削除ボタン */}\n        <button\n          onClick={(e) => {\n            e.stopPropagation();\n            if (window.confirm(`「${project.name}」を削除しますか？この操作は取り消せません。`)) {\n              onDelete();\n            }\n          }}\n          className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity bg-red-500 hover:bg-red-600 text-white p-1 rounded-full text-xs\"\n        >\n          🗑️\n        </button>\n      </div>\n\n      {/* プロジェクト情報 */}\n      <div className=\"p-4\">\n        <h3 className=\"font-semibold text-gray-800 mb-2 line-clamp-1\">\n          {project.name}\n        </h3>\n        \n        {project.description && (\n          <p className=\"text-sm text-gray-600 mb-3 line-clamp-2\">\n            {project.description}\n          </p>\n        )}\n\n        {/* 統計情報 */}\n        <div className=\"grid grid-cols-3 gap-2 mb-3 text-xs text-gray-500\">\n          <div className=\"text-center\">\n            <div className=\"font-medium text-gray-700\">{stats.objects}</div>\n            <div>オブジェクト</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"font-medium text-gray-700\">{stats.sounds}</div>\n            <div>音声</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"font-medium text-gray-700\">{stats.rules}</div>\n            <div>ルール</div>\n          </div>\n        </div>\n\n        {/* 容量バー */}\n        <div className=\"mb-3\">\n          <div className=\"flex justify-between text-xs text-gray-500 mb-1\">\n            <span>容量</span>\n            <span>{sizeInMB}MB</span>\n          </div>\n          <div className=\"w-full bg-gray-200 rounded-full h-2\">\n            <div \n              className={`h-2 rounded-full transition-all duration-300 ${\n                sizePercentage > 90 ? 'bg-red-500' : \n                sizePercentage > 70 ? 'bg-yellow-500' : 'bg-green-500'\n              }`}\n              style={{ width: `${Math.min(sizePercentage, 100)}%` }}\n            />\n          </div>\n        </div>\n\n        {/* 最終更新日時 */}\n        <div className=\"text-xs text-gray-500 mb-4\">\n          最終更新: {lastModified.toLocaleDateString('ja-JP')} {lastModified.toLocaleTimeString('ja-JP', { hour: '2-digit', minute: '2-digit' })}\n        </div>\n\n        {/* 編集ボタン */}\n        <button\n          onClick={onSelect}\n          className=\"w-full bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white py-3 rounded-xl font-medium transition-all duration-200 hover:scale-105\"\n        >\n          編集する\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport const ProjectSelector: React.FC<ProjectSelectorProps> = ({\n  onProjectSelect,\n  onCreateNew\n}) => {\n  const [projects, setProjects] = useState<GameProject[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [showNewProjectModal, setShowNewProjectModal] = useState(false);\n  const [newProjectName, setNewProjectName] = useState('');\n\n  // プロジェクト一覧の読み込み（実際の実装ではローカルストレージやAPIから取得）\n  useEffect(() => {\n    const loadProjects = async () => {\n      try {\n        setLoading(true);\n        // TODO: 実際のプロジェクト読み込み処理を実装\n        // const loadedProjects = await ProjectStorage.listProjects();\n        // setProjects(loadedProjects);\n        \n        // デモデータ\n        const demoProjects: GameProject[] = [\n          {\n            id: 'demo-1',\n            name: 'マイゲーム1',\n            description: '初めて作ったゲームです',\n            createdAt: '2025-09-01T10:00:00.000Z',\n            lastModified: '2025-09-01T15:30:00.000Z',\n            version: '1.0.0',\n            creator: { isAnonymous: true },\n            status: 'draft',\n            totalSize: 12 * 1024 * 1024, // 12MB\n            assets: {\n              background: null,\n              objects: [\n                {\n                  id: 'obj1',\n                  name: 'キャラクター1',\n                  frames: [],\n                  animationSettings: { speed: 10, loop: true, pingPong: false, autoStart: true },\n                  totalSize: 2 * 1024 * 1024,\n                  createdAt: '2025-09-01T10:00:00.000Z',\n                  lastModified: '2025-09-01T10:00:00.000Z',\n                  defaultScale: 1.0,\n                  defaultOpacity: 1.0,\n                }\n              ],\n              texts: [],\n              audio: { bgm: null, se: [] },\n              statistics: { \n                totalImageSize: 0, \n                totalAudioSize: 0, \n                totalSize: 0,\n                usedSlots: { \n                  background: 0,\n                  objects: 1, \n                  texts: 0, \n                  bgm: 0,\n                  se: 0 \n                },\n                limitations: {\n                  isNearImageLimit: false,\n                  isNearAudioLimit: false,\n                  isNearTotalLimit: false,\n                  hasViolations: false\n                }\n              },\n              lastModified: '2025-09-01T10:00:00.000Z'\n            },\n            script: {\n              layout: {\n                background: { visible: true, initialAnimation: 0, animationSpeed: 10, autoStart: true },\n                objects: [],\n                texts: [],\n                stage: { backgroundColor: '#ffffff' }\n              },\n              flags: [],\n              rules: [],\n              successConditions: [],\n              statistics: { \n                totalRules: 0, \n                totalConditions: 0, \n                totalActions: 0, \n                complexityScore: 0,\n                usedTriggerTypes: [],\n                usedActionTypes: [],\n                flagCount: 0,\n                estimatedCPUUsage: 'low',\n                estimatedMemoryUsage: 0,\n                maxConcurrentEffects: 0\n              },\n              version: '1.0.0',\n              lastModified: '2025-09-01T10:00:00.000Z'\n            },\n            settings: {\n              name: 'マイゲーム1',\n              duration: { type: 'fixed', seconds: 10 },\n              difficulty: 'easy',\n              publishing: {\n                isPublished: false,\n                visibility: 'private',\n                allowComments: true,\n                allowRemix: true\n              },\n              preview: {},\n              export: { includeSourceData: true, compressionLevel: 'medium', format: 'json' }\n            },\n            metadata: {\n              statistics: {\n                totalEditTime: 0,\n                saveCount: 0,\n                testPlayCount: 0,\n                publishCount: 0\n              },\n              usage: {\n                lastOpened: '2025-09-01T10:00:00.000Z',\n                totalOpenCount: 1,\n                averageSessionTime: 0\n              },\n              performance: {\n                lastBuildTime: 0,\n                averageFPS: 60,\n                memoryUsage: 0\n              }\n            },\n            versionHistory: [],\n            projectSettings: {\n              autoSaveInterval: 30000,\n              backupEnabled: true,\n              compressionEnabled: false,\n              maxVersionHistory: 10\n            }\n          }\n        ];\n        setProjects(demoProjects);\n      } catch (error) {\n        console.error('プロジェクトの読み込みに失敗しました:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadProjects();\n  }, []);\n\n  // 検索フィルター\n  const filteredProjects = projects.filter(project =>\n    project.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    (project.description?.toLowerCase().includes(searchQuery.toLowerCase()) ?? false)\n  );\n\n  // 新規プロジェクト作成\n  const handleCreateNew = () => {\n    if (newProjectName.trim()) {\n      onCreateNew(newProjectName.trim());\n      setShowNewProjectModal(false);\n      setNewProjectName('');\n    }\n  };\n\n  // プロジェクト削除\n  const handleDeleteProject = (projectId: string) => {\n    setProjects(prev => prev.filter(p => p.id !== projectId));\n    // TODO: 実際のストレージからも削除\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-50 to-pink-50\">\n      {/* ヘッダー */}\n      <header className=\"bg-white shadow-sm\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n          <div className=\"text-center\">\n            <h1 className=\"text-4xl font-bold bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent mb-2\">\n              🎮 ゲームエディター\n            </h1>\n            <p className=\"text-lg text-gray-600\">\n              簡単にゲームを作って、みんなに遊んでもらおう！\n            </p>\n          </div>\n        </div>\n      </header>\n\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* 検索と新規作成 */}\n        <div className=\"flex flex-col sm:flex-row gap-4 mb-8\">\n          <div className=\"flex-1\">\n            <input\n              type=\"text\"\n              placeholder=\"プロジェクトを検索...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              className=\"w-full px-4 py-3 rounded-xl border border-gray-300 focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\n            />\n          </div>\n          <button\n            onClick={() => setShowNewProjectModal(true)}\n            className=\"px-8 py-3 bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white rounded-xl font-semibold transition-all duration-200 hover:scale-105 shadow-lg\"\n          >\n            ✨ 新しいゲームを作る\n          </button>\n        </div>\n\n        {/* プロジェクト一覧 */}\n        {loading ? (\n          <div className=\"text-center py-20\">\n            <div className=\"text-4xl mb-4\">⏳</div>\n            <p className=\"text-gray-600\">プロジェクトを読み込み中...</p>\n          </div>\n        ) : filteredProjects.length === 0 ? (\n          <div className=\"text-center py-20\">\n            <div className=\"text-6xl mb-4\">🎨</div>\n            <h3 className=\"text-xl font-semibold text-gray-800 mb-2\">\n              {searchQuery ? 'プロジェクトが見つかりません' : 'まだプロジェクトがありません'}\n            </h3>\n            <p className=\"text-gray-600 mb-8\">\n              {searchQuery ? '別のキーワードで検索してみてください' : '初めてのゲームを作ってみましょう！'}\n            </p>\n            {!searchQuery && (\n              <button\n                onClick={() => setShowNewProjectModal(true)}\n                className=\"px-8 py-4 bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white rounded-xl font-semibold transition-all duration-200 hover:scale-105 shadow-lg\"\n              >\n                ✨ 新しいゲームを作る\n              </button>\n            )}\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n            {filteredProjects.map(project => (\n              <ProjectCard\n                key={project.id}\n                project={project}\n                onSelect={() => onProjectSelect(project)}\n                onDelete={() => handleDeleteProject(project.id)}\n              />\n            ))}\n          </div>\n        )}\n      </main>\n\n      {/* 新規プロジェクト作成モーダル */}\n      {showNewProjectModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-2xl shadow-2xl p-8 max-w-md w-full mx-4\">\n            <div className=\"text-center mb-6\">\n              <div className=\"text-4xl mb-2\">✨</div>\n              <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">新しいゲームを作る</h2>\n              <p className=\"text-gray-600\">ゲームの名前を決めましょう</p>\n            </div>\n\n            <div className=\"mb-6\">\n              <input\n                type=\"text\"\n                value={newProjectName}\n                onChange={(e) => setNewProjectName(e.target.value)}\n                placeholder=\"ゲーム名を入力してください\"\n                className=\"w-full px-4 py-3 rounded-xl border border-gray-300 focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\n                maxLength={50}\n                onKeyPress={(e) => {\n                  if (e.key === 'Enter') {\n                    handleCreateNew();\n                  }\n                }}\n                autoFocus\n              />\n              <div className=\"text-xs text-gray-500 mt-1\">\n                {newProjectName.length}/50文字\n              </div>\n            </div>\n\n            <div className=\"flex gap-3\">\n              <button\n                onClick={() => {\n                  setShowNewProjectModal(false);\n                  setNewProjectName('');\n                }}\n                className=\"flex-1 px-4 py-3 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-xl font-medium transition-colors\"\n              >\n                キャンセル\n              </button>\n              <button\n                onClick={handleCreateNew}\n                disabled={!newProjectName.trim()}\n                className=\"flex-1 px-4 py-3 bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white rounded-xl font-medium transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                作成\n              </button>\n            </div>\n\n            {/* テンプレート選択（将来実装） */}\n            <div className=\"mt-6 pt-6 border-t border-gray-200\">\n              <p className=\"text-sm text-gray-500 text-center\">\n                💡 テンプレートから始めることもできます（準備中）\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* フローティングヘルプボタン */}\n      <div className=\"fixed bottom-6 right-6\">\n        <button className=\"bg-purple-500 hover:bg-purple-600 text-white p-4 rounded-full shadow-lg transition-colors\">\n          <span className=\"text-xl\">❓</span>\n        </button>\n      </div>\n    </div>\n  );\n};","import { useState, useCallback, useEffect } from 'react';\nimport { GameProject } from '../../types/editor/GameProject';\nimport { ProjectAssets } from '../../types/editor/ProjectAssets';\nimport { GameScript } from '../../types/editor/GameScript';\nimport { GameSettings } from '../../types/editor/GameSettings';\nimport { EDITOR_LIMITS } from '../../constants/EditorLimits';\n\ninterface UseGameProjectReturn {\n  currentProject: GameProject | null;\n  loading: boolean;\n  error: string | null;\n  hasUnsavedChanges: boolean;\n  \n  // CRUD操作\n  createProject: (name: string, template?: string) => Promise<GameProject>;\n  loadProject: (id: string) => Promise<void>;\n  saveProject: (project?: GameProject) => Promise<void>;\n  updateProject: (updates: Partial<GameProject>) => void;\n  deleteProject: (id: string) => Promise<void>;\n  duplicateProject: (id: string, newName: string) => Promise<GameProject>;\n  \n  // アセット管理\n  updateAssets: (assets: Partial<ProjectAssets>) => void;\n  addAsset: (type: keyof ProjectAssets, asset: any) => void;\n  removeAsset: (type: keyof ProjectAssets, id: string) => void;\n  \n  // スクリプト管理\n  updateScript: (script: Partial<GameScript>) => void;\n  addRule: (rule: any) => void;\n  removeRule: (ruleId: string) => void;\n  \n  // 設定管理\n  updateSettings: (settings: Partial<GameSettings>) => void;\n  \n  // ユーティリティ\n  getTotalSize: () => number;\n  canAddAsset: (type: string, size?: number) => boolean;\n  getValidationErrors: () => string[];\n}\n\n// デフォルトプロジェクト作成\nconst createDefaultProject = (name: string): GameProject => {\n  return {\n    id: crypto.randomUUID(),\n    name: name.trim(),\n    createdAt: new Date().toISOString(),\n    lastModified: new Date().toISOString(),\n    version: '1.0.0',\n    creator: { isAnonymous: true },\n    status: 'draft',\n    totalSize: 0,\n    \n    // 修正: 不足プロパティ追加\n    metadata: {\n      statistics: {\n        totalEditTime: 0,\n        saveCount: 0,\n        testPlayCount: 0,\n        publishCount: 0\n      },\n      usage: {\n        lastOpened: new Date().toISOString(),\n        totalOpenCount: 1,\n        averageSessionTime: 0\n      },\n      performance: {\n        lastBuildTime: 0,\n        averageFPS: 60,\n        memoryUsage: 0\n      }\n    },\n    \n    versionHistory: [\n      {\n        id: crypto.randomUUID(),\n        version: '1.0.0',\n        createdAt: new Date().toISOString(),\n        description: 'プロジェクト作成',\n        author: 'Anonymous',\n        changes: [\n          {\n            type: 'added',\n            category: 'assets',\n            description: 'プロジェクト作成',\n            affectedItems: []\n          }\n        ],\n        snapshot: {\n          assetsCount: { background: 0, objects: 0, texts: 0, bgm: 0, se: 0 },\n          rulesCount: 0,\n          totalSize: 0\n        }\n      }\n    ],\n    \n    projectSettings: {\n      autoSaveInterval: 30000,\n      backupEnabled: true,\n      compressionEnabled: false,\n      maxVersionHistory: 10\n    },\n    \n    assets: {\n      background: null,\n      objects: [],\n      texts: [],\n      audio: { bgm: null, se: [] },\n      statistics: {\n        totalImageSize: 0,\n        totalAudioSize: 0,\n        totalSize: 0,\n        usedSlots: { \n          background: 0,\n          objects: 0, \n          texts: 0, \n          bgm: 0,    // 修正: sounds → bgm\n          se: 0      // 修正: sounds → se\n        },\n        limitations: {\n          isNearImageLimit: false,\n          isNearAudioLimit: false,\n          isNearTotalLimit: false,\n          hasViolations: false\n        }\n      },\n      lastModified: new Date().toISOString()\n    },\n    \n    script: {\n      layout: {\n        background: { visible: false, initialAnimation: 0, animationSpeed: 10, autoStart: false },\n        objects: [],\n        texts: [],\n        stage: { backgroundColor: '#ffffff' }\n      },\n      flags: [],\n      rules: [],\n      successConditions: [],\n      statistics: { \n        totalRules: 0, \n        totalConditions: 0, \n        totalActions: 0, \n        complexityScore: 0,\n        // 修正: 不足プロパティ追加\n        usedTriggerTypes: [],\n        usedActionTypes: [],\n        flagCount: 0,\n        estimatedCPUUsage: 'low' as const,\n        estimatedMemoryUsage: 0,\n        maxConcurrentEffects: 0\n      },\n      // 修正: 不足プロパティ追加\n      version: '1.0.0',\n      lastModified: new Date().toISOString()\n    },\n    \n    settings: {\n      name: name.trim(),\n      duration: { type: 'fixed', seconds: 10 },\n      difficulty: 'easy',\n      publishing: {\n        isPublished: false,\n        visibility: 'private',\n        allowComments: true,\n        allowRemix: true\n      },\n      preview: {},\n      export: { \n        includeSourceData: true, \n        compressionLevel: 'medium',\n        format: 'json' // 修正: format追加\n      }\n    },\n    \n    // 修正: EditorState完全化\n    editorState: {\n      activeTab: 'assets',\n      lastSaved: new Date().toISOString(),\n      autoSaveEnabled: true,\n      tabStates: {\n        assets: {\n          selectedAssetType: null,\n          selectedAssetId: null,\n          showAnimationEditor: false\n        },\n        audio: {\n          selectedAudioType: null,\n          selectedAudioId: null,\n          isPlaying: false\n        },\n        script: {\n          mode: 'layout',\n          selectedObjectId: null,\n          selectedRuleId: null,\n          showRuleEditor: false\n        },\n        settings: {\n          showTestPlay: false,\n          lastTestResult: null\n        }\n      },\n      ui: {\n        sidebarCollapsed: false,\n        previewVisible: true,\n        capacityMeterExpanded: false\n      }\n    }\n  };\n};\n\n// ローカルストレージキー\nconst STORAGE_KEYS = {\n  PROJECTS: 'editor_projects',\n  CURRENT_PROJECT_ID: 'editor_current_project_id',\n  AUTO_SAVE_ENABLED: 'editor_auto_save_enabled'\n} as const;\n\nexport const useGameProject = (): UseGameProjectReturn => {\n  const [currentProject, setCurrentProject] = useState<GameProject | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n\n  // エラーハンドリングヘルパー\n  const handleError = useCallback((operation: string, err: any) => {\n    console.error(`${operation} failed:`, err);\n    setError(`${operation}に失敗しました: ${err.message}`);\n    setLoading(false);\n  }, []);\n\n  // ローカルストレージからプロジェクト一覧取得\n  const getStoredProjects = useCallback((): GameProject[] => {\n    try {\n      const stored = localStorage.getItem(STORAGE_KEYS.PROJECTS);\n      return stored ? JSON.parse(stored) : [];\n    } catch (error) {\n      console.error('Failed to load projects from storage:', error);\n      return [];\n    }\n  }, []);\n\n  // ローカルストレージにプロジェクト一覧保存\n  const saveStoredProjects = useCallback((projects: GameProject[]) => {\n    try {\n      localStorage.setItem(STORAGE_KEYS.PROJECTS, JSON.stringify(projects));\n    } catch (error) {\n      console.error('Failed to save projects to storage:', error);\n    }\n  }, []);\n\n  // プロジェクト作成\n  const createProject = useCallback(async (name: string, template?: string): Promise<GameProject> => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      if (!name.trim()) {\n        throw new Error('プロジェクト名が入力されていません');\n      }\n\n      if (name.length > 50) {\n        throw new Error('プロジェクト名は50文字以内で入力してください');\n      }\n\n      const newProject = createDefaultProject(name);\n      \n      // TODO: テンプレート適用処理\n      if (template) {\n        // テンプレートベースの初期化\n        console.log('Template application for:', template);\n      }\n\n      // プロジェクト一覧に追加\n      const projects = getStoredProjects();\n      const updatedProjects = [newProject, ...projects];\n      saveStoredProjects(updatedProjects);\n\n      // 現在のプロジェクトとして設定\n      setCurrentProject(newProject);\n      localStorage.setItem(STORAGE_KEYS.CURRENT_PROJECT_ID, newProject.id);\n      setHasUnsavedChanges(false);\n\n      return newProject;\n    } catch (err: any) {\n      handleError('プロジェクト作成', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, [getStoredProjects, saveStoredProjects, handleError]);\n\n  // プロジェクト読み込み\n  const loadProject = useCallback(async (id: string): Promise<void> => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const projects = getStoredProjects();\n      const project = projects.find(p => p.id === id);\n\n      if (!project) {\n        throw new Error('プロジェクトが見つかりません');\n      }\n\n      setCurrentProject(project);\n      localStorage.setItem(STORAGE_KEYS.CURRENT_PROJECT_ID, id);\n      setHasUnsavedChanges(false);\n    } catch (err: any) {\n      handleError('プロジェクト読み込み', err);\n    } finally {\n      setLoading(false);\n    }\n  }, [getStoredProjects, handleError]);\n\n  // プロジェクト保存\n  const saveProject = useCallback(async (project?: GameProject): Promise<void> => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const projectToSave = project || currentProject;\n      if (!projectToSave) {\n        throw new Error('保存するプロジェクトがありません');\n      }\n\n      // 保存時に統計更新\n      const updatedProject: GameProject = {\n        ...projectToSave,\n        lastModified: new Date().toISOString(),\n        totalSize: calculateTotalSize(projectToSave),\n        assets: {\n          ...projectToSave.assets,\n          statistics: calculateAssetStatistics(projectToSave.assets)\n        },\n        script: {\n          ...projectToSave.script,\n          statistics: calculateScriptStatistics(projectToSave.script)\n        }\n      };\n\n      // プロジェクト一覧を更新\n      const projects = getStoredProjects();\n      const projectIndex = projects.findIndex(p => p.id === updatedProject.id);\n      \n      if (projectIndex >= 0) {\n        projects[projectIndex] = updatedProject;\n      } else {\n        projects.unshift(updatedProject);\n      }\n      \n      saveStoredProjects(projects);\n      setCurrentProject(updatedProject);\n      setHasUnsavedChanges(false);\n    } catch (err: any) {\n      handleError('プロジェクト保存', err);\n    } finally {\n      setLoading(false);\n    }\n  }, [currentProject, getStoredProjects, saveStoredProjects, handleError]);\n\n  // プロジェクト更新\n  const updateProject = useCallback((updates: Partial<GameProject>) => {\n    if (!currentProject) return;\n\n    const updatedProject = { ...currentProject, ...updates };\n    setCurrentProject(updatedProject);\n    setHasUnsavedChanges(true);\n  }, [currentProject]);\n\n  // プロジェクト削除\n  const deleteProject = useCallback(async (id: string): Promise<void> => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const projects = getStoredProjects();\n      const filteredProjects = projects.filter(p => p.id !== id);\n      saveStoredProjects(filteredProjects);\n\n      // 現在のプロジェクトが削除された場合\n      if (currentProject?.id === id) {\n        setCurrentProject(null);\n        localStorage.removeItem(STORAGE_KEYS.CURRENT_PROJECT_ID);\n        setHasUnsavedChanges(false);\n      }\n    } catch (err: any) {\n      handleError('プロジェクト削除', err);\n    } finally {\n      setLoading(false);\n    }\n  }, [currentProject, getStoredProjects, saveStoredProjects, handleError]);\n\n  // プロジェクト複製\n  const duplicateProject = useCallback(async (id: string, newName: string): Promise<GameProject> => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const projects = getStoredProjects();\n      const originalProject = projects.find(p => p.id === id);\n\n      if (!originalProject) {\n        throw new Error('複製するプロジェクトが見つかりません');\n      }\n\n      const duplicatedProject: GameProject = {\n        ...originalProject,\n        id: crypto.randomUUID(),\n        name: newName.trim(),\n        createdAt: new Date().toISOString(),\n        lastModified: new Date().toISOString(),\n        status: 'draft',\n        settings: {\n          ...originalProject.settings,\n          name: newName.trim(),\n          publishing: {\n            ...originalProject.settings.publishing,\n            isPublished: false\n          }\n        }\n      };\n\n      const updatedProjects = [duplicatedProject, ...projects];\n      saveStoredProjects(updatedProjects);\n\n      return duplicatedProject;\n    } catch (err: any) {\n      handleError('プロジェクト複製', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, [getStoredProjects, saveStoredProjects, handleError]);\n\n  // アセット更新\n  const updateAssets = useCallback((assets: Partial<ProjectAssets>) => {\n    if (!currentProject) return;\n\n    updateProject({\n      assets: { ...currentProject.assets, ...assets }\n    });\n  }, [currentProject, updateProject]);\n\n  // アセット追加\n  const addAsset = useCallback((type: keyof ProjectAssets, asset: any) => {\n    if (!currentProject) return;\n\n    const currentAssets = currentProject.assets;\n    let updatedAssets = { ...currentAssets };\n\n    switch (type) {\n      case 'objects':\n        if (currentAssets.objects.length < EDITOR_LIMITS.PROJECT.MAX_OBJECTS) {\n          updatedAssets.objects = [...currentAssets.objects, asset];\n        }\n        break;\n      case 'texts':\n        if (currentAssets.texts.length < EDITOR_LIMITS.TEXT.MAX_COUNT) {\n          updatedAssets.texts = [...currentAssets.texts, asset];\n        }\n        break;\n      case 'audio':\n        if (asset.type === 'se' && currentAssets.audio.se.length < EDITOR_LIMITS.PROJECT.MAX_SE_COUNT) {\n          updatedAssets.audio = {\n            ...currentAssets.audio,\n            se: [...currentAssets.audio.se, asset]\n          };\n        } else if (asset.type === 'bgm') {\n          updatedAssets.audio = {\n            ...currentAssets.audio,\n            bgm: asset\n          };\n        }\n        break;\n    }\n\n    updateAssets(updatedAssets);\n  }, [currentProject, updateAssets]);\n\n  // アセット削除\n  const removeAsset = useCallback((type: keyof ProjectAssets, id: string) => {\n    if (!currentProject) return;\n\n    const currentAssets = currentProject.assets;\n    let updatedAssets = { ...currentAssets };\n\n    switch (type) {\n      case 'background':\n        updatedAssets.background = null;\n        break;\n      case 'objects':\n        updatedAssets.objects = currentAssets.objects.filter(obj => obj.id !== id);\n        break;\n      case 'texts':\n        updatedAssets.texts = currentAssets.texts.filter(text => text.id !== id);\n        break;\n      case 'audio':\n        if (currentAssets.audio.bgm?.id === id) {\n          updatedAssets.audio = { ...currentAssets.audio, bgm: null };\n        } else {\n          updatedAssets.audio = {\n            ...currentAssets.audio,\n            se: currentAssets.audio.se.filter(se => se.id !== id)\n          };\n        }\n        break;\n    }\n\n    updateAssets(updatedAssets);\n  }, [currentProject, updateAssets]);\n\n  // スクリプト更新\n  const updateScript = useCallback((script: Partial<GameScript>) => {\n    if (!currentProject) return;\n\n    updateProject({\n      script: { ...currentProject.script, ...script }\n    });\n  }, [currentProject, updateProject]);\n\n  // ルール追加\n  const addRule = useCallback((rule: any) => {\n    if (!currentProject) return;\n    \n    if (currentProject.script.rules.length < EDITOR_LIMITS.PROJECT.MAX_RULES) {\n      const updatedRules = [...currentProject.script.rules, rule];\n      updateScript({ rules: updatedRules });\n    }\n  }, [currentProject, updateScript]);\n\n  // ルール削除\n  const removeRule = useCallback((ruleId: string) => {\n    if (!currentProject) return;\n\n    const updatedRules = currentProject.script.rules.filter(rule => rule.id !== ruleId);\n    updateScript({ rules: updatedRules });\n  }, [currentProject, updateScript]);\n\n  // 設定更新\n  const updateSettings = useCallback((settings: Partial<GameSettings>) => {\n    if (!currentProject) return;\n\n    updateProject({\n      settings: { ...currentProject.settings, ...settings }\n    });\n  }, [currentProject, updateProject]);\n\n  // 総容量計算\n  const getTotalSize = useCallback((): number => {\n    if (!currentProject) return 0;\n    return calculateTotalSize(currentProject);\n  }, [currentProject]);\n\n  // アセット追加可否チェック\n  const canAddAsset = useCallback((type: string, size: number = 0): boolean => {\n    if (!currentProject) return false;\n\n    const currentSize = getTotalSize();\n    const limits = EDITOR_LIMITS;\n\n    // 総容量チェック\n    if (currentSize + size > limits.PROJECT.TOTAL_MAX_SIZE) {\n      return false;\n    }\n\n    // 種類別制限チェック\n    switch (type) {\n      case 'background':\n        return !currentProject.assets.background && size <= limits.IMAGE.BACKGROUND_TOTAL_MAX_SIZE;\n      case 'object':\n        return currentProject.assets.objects.length < limits.PROJECT.MAX_OBJECTS && \n               size <= limits.IMAGE.OBJECT_TOTAL_MAX_SIZE;\n      case 'text':\n        return currentProject.assets.texts.length < limits.TEXT.MAX_COUNT;\n      case 'bgm':\n        return !currentProject.assets.audio.bgm && size <= limits.AUDIO.BGM_MAX_SIZE;\n      case 'se':\n        return currentProject.assets.audio.se.length < limits.PROJECT.MAX_SE_COUNT && \n               size <= limits.AUDIO.SE_MAX_SIZE;\n      default:\n        return false;\n    }\n  }, [currentProject, getTotalSize]);\n\n  // バリデーションエラー取得\n  const getValidationErrors = useCallback((): string[] => {\n    if (!currentProject) return [];\n\n    const errors: string[] = [];\n\n    // 基本情報チェック\n    if (!currentProject.name.trim()) {\n      errors.push('ゲーム名が入力されていません');\n    }\n\n    // 容量チェック\n    const totalSize = getTotalSize();\n    if (totalSize > EDITOR_LIMITS.PROJECT.TOTAL_MAX_SIZE) {\n      errors.push(`プロジェクトサイズが制限を超えています (${(totalSize / 1024 / 1024).toFixed(1)}MB / ${EDITOR_LIMITS.PROJECT.TOTAL_MAX_SIZE / 1024 / 1024}MB)`);\n    }\n\n    // アセットチェック\n    if (currentProject.assets.objects.length === 0 && !currentProject.assets.background) {\n      errors.push('背景またはオブジェクトを最低1つ追加してください');\n    }\n\n    // ルールチェック\n    if (currentProject.script.rules.length === 0) {\n      errors.push('ゲームルールを最低1つ設定してください');\n    }\n\n    // 成功条件チェック\n    if (currentProject.script.successConditions.length === 0) {\n      errors.push('成功条件を設定してください');\n    }\n\n    return errors;\n  }, [currentProject, getTotalSize]);\n\n  // 初期化時に前回のプロジェクトを復元\n  useEffect(() => {\n    const lastProjectId = localStorage.getItem(STORAGE_KEYS.CURRENT_PROJECT_ID);\n    if (lastProjectId) {\n      loadProject(lastProjectId).catch(() => {\n        // 読み込みに失敗した場合は無視\n        localStorage.removeItem(STORAGE_KEYS.CURRENT_PROJECT_ID);\n      });\n    }\n  }, [loadProject]);\n\n  return {\n    currentProject,\n    loading,\n    error,\n    hasUnsavedChanges,\n    \n    createProject,\n    loadProject,\n    saveProject,\n    updateProject,\n    deleteProject,\n    duplicateProject,\n    \n    updateAssets,\n    addAsset,\n    removeAsset,\n    \n    updateScript,\n    addRule,\n    removeRule,\n    \n    updateSettings,\n    \n    getTotalSize,\n    canAddAsset,\n    getValidationErrors\n  };\n};\n\n// ヘルパー関数\n\n// 総容量計算\nconst calculateTotalSize = (project: GameProject): number => {\n  let total = 0;\n\n  // 背景サイズ\n  if (project.assets.background) {\n    total += project.assets.background.totalSize;\n  }\n\n  // オブジェクトサイズ\n  project.assets.objects.forEach(obj => {\n    total += obj.totalSize;\n  });\n\n  // 音声サイズ\n  if (project.assets.audio.bgm) {\n    total += project.assets.audio.bgm.fileSize;\n  }\n  project.assets.audio.se.forEach(se => {\n    total += se.fileSize;\n  });\n\n  return total;\n};\n\n// アセット統計計算（修正版）\nconst calculateAssetStatistics = (assets: ProjectAssets): ProjectAssets['statistics'] => {\n  let totalImageSize = 0;\n  let totalAudioSize = 0;\n\n  // 画像サイズ計算\n  if (assets.background) {\n    totalImageSize += assets.background.totalSize;\n  }\n  assets.objects.forEach(obj => {\n    totalImageSize += obj.totalSize;\n  });\n\n  // 音声サイズ計算\n  if (assets.audio.bgm) {\n    totalAudioSize += assets.audio.bgm.fileSize;\n  }\n  assets.audio.se.forEach(se => {\n    totalAudioSize += se.fileSize;\n  });\n\n  return {\n    totalImageSize,\n    totalAudioSize,\n    totalSize: totalImageSize + totalAudioSize,\n    usedSlots: {\n      background: assets.background ? 1 : 0,\n      objects: assets.objects.length,\n      texts: assets.texts.length,\n      bgm: assets.audio.bgm ? 1 : 0,    // 修正: sounds → bgm\n      se: assets.audio.se.length        // 修正: sounds → se\n    },\n    limitations: {\n      isNearImageLimit: false,\n      isNearAudioLimit: false,\n      isNearTotalLimit: false,\n      hasViolations: false\n    }\n  };\n};\n\n// スクリプト統計計算（修正版）\nconst calculateScriptStatistics = (script: GameScript): GameScript['statistics'] => {\n  let totalConditions = 0;\n  let totalActions = 0;\n\n  script.rules.forEach(rule => {\n    totalConditions += rule.triggers.conditions.length;\n    totalActions += rule.actions.length;\n  });\n\n  // 複雑度スコア計算（0-100）\n  const complexityScore = Math.min(100, Math.round(\n    (script.rules.length * 10) +\n    (totalConditions * 5) +\n    (totalActions * 3) +\n    (script.flags.length * 2) +\n    (script.successConditions.length * 5)\n  ));\n\n  return {\n    totalRules: script.rules.length,\n    totalConditions,\n    totalActions,\n    complexityScore,\n    // 修正: 不足プロパティ追加\n    usedTriggerTypes: [],\n    usedActionTypes: [],\n    flagCount: script.flags.length,\n    estimatedCPUUsage: complexityScore < 30 ? 'low' : complexityScore < 70 ? 'medium' : 'high',\n    estimatedMemoryUsage: script.rules.length * 1024, // 概算\n    maxConcurrentEffects: Math.min(10, script.rules.length)\n  };\n};","import { GameProject } from '../../types/editor/GameProject';\nimport { EDITOR_LIMITS } from '../../constants/EditorLimits';\n\n// ストレージキー定数\nconst STORAGE_KEYS = {\n  PROJECTS: 'editor_projects',\n  PROJECT_PREFIX: 'editor_project_',\n  METADATA: 'editor_metadata',\n  SETTINGS: 'editor_settings'\n} as const;\n\n// ストレージ設定\ninterface StorageSettings {\n  autoSaveEnabled: boolean;\n  autoSaveInterval: number;\n  maxProjects: number;\n  compressionEnabled: boolean;\n}\n\n// プロジェクトメタデータ\ninterface ProjectMetadata {\n  id: string;\n  name: string;\n  lastModified: string;\n  status: GameProject['status'];\n  size: number;\n  version: string;\n}\n\n// ストレージ統計\ninterface StorageStats {\n  totalProjects: number;\n  totalSize: number;\n  availableSpace: number;\n  lastCleanup: string;\n}\n\n// エクスポート/インポート用の型\ninterface ProjectExportData {\n  project: GameProject;\n  metadata: ProjectMetadata;\n  exportedAt: string;\n  version: string;\n}\n\nexport class ProjectStorage {\n  private static instance: ProjectStorage | null = null;\n  private settings: StorageSettings;\n  private dbPromise: Promise<IDBDatabase> | null = null;\n\n  private constructor() {\n    this.settings = this.loadSettings();\n    this.initIndexedDB();\n  }\n\n  // シングルトンパターン\n  public static getInstance(): ProjectStorage {\n    if (!ProjectStorage.instance) {\n      ProjectStorage.instance = new ProjectStorage();\n    }\n    return ProjectStorage.instance;\n  }\n\n  // IndexedDB初期化\n  private initIndexedDB(): void {\n    if (typeof window === 'undefined' || !('indexedDB' in window)) {\n      console.warn('IndexedDB is not available, falling back to localStorage');\n      return;\n    }\n\n    this.dbPromise = new Promise((resolve, reject) => {\n      const request = indexedDB.open('GameEditorDB', 1);\n      \n      request.onerror = () => reject(request.error);\n      request.onsuccess = () => resolve(request.result);\n      \n      request.onupgradeneeded = (event) => {\n        const db = (event.target as IDBOpenDBRequest).result;\n        \n        // プロジェクトストア\n        if (!db.objectStoreNames.contains('projects')) {\n          const projectStore = db.createObjectStore('projects', { keyPath: 'id' });\n          projectStore.createIndex('lastModified', 'lastModified', { unique: false });\n          projectStore.createIndex('status', 'status', { unique: false });\n        }\n        \n        // アセットストア（大容量ファイル用）\n        if (!db.objectStoreNames.contains('assets')) {\n          const assetStore = db.createObjectStore('assets', { keyPath: 'id' });\n          assetStore.createIndex('projectId', 'projectId', { unique: false });\n          assetStore.createIndex('type', 'type', { unique: false });\n        }\n      };\n    });\n  }\n\n  // 設定読み込み\n  private loadSettings(): StorageSettings {\n    try {\n      const stored = localStorage.getItem(STORAGE_KEYS.SETTINGS);\n      return stored ? JSON.parse(stored) : this.getDefaultSettings();\n    } catch (error) {\n      console.error('Failed to load storage settings:', error);\n      return this.getDefaultSettings();\n    }\n  }\n\n  // デフォルト設定\n  private getDefaultSettings(): StorageSettings {\n    return {\n      autoSaveEnabled: true,\n      autoSaveInterval: EDITOR_LIMITS.PROJECT.AUTO_SAVE_INTERVAL,\n      maxProjects: 50,\n      compressionEnabled: true\n    };\n  }\n\n  // 設定保存\n  public saveSettings(settings: Partial<StorageSettings>): void {\n    this.settings = { ...this.settings, ...settings };\n    localStorage.setItem(STORAGE_KEYS.SETTINGS, JSON.stringify(this.settings));\n  }\n\n  // プロジェクト一覧取得\n  public async listProjects(): Promise<ProjectMetadata[]> {\n    try {\n      // IndexedDBが利用可能な場合\n      if (this.dbPromise) {\n        const db = await this.dbPromise;\n        const transaction = db.transaction(['projects'], 'readonly');\n        const store = transaction.objectStore('projects');\n        const request = store.getAll();\n        \n        return new Promise((resolve, reject) => {\n          request.onsuccess = () => {\n            const projects = request.result.map((project: GameProject): ProjectMetadata => ({\n              id: project.id,\n              name: project.name,\n              lastModified: project.lastModified,\n              status: project.status,\n              size: project.totalSize || 0,\n              version: project.version\n            }));\n            \n            // 最終更新日でソート\n            projects.sort((a, b) => new Date(b.lastModified).getTime() - new Date(a.lastModified).getTime());\n            resolve(projects);\n          };\n          request.onerror = () => reject(request.error);\n        });\n      }\n\n      // localStorageフォールバック\n      const stored = localStorage.getItem(STORAGE_KEYS.PROJECTS);\n      const projects: GameProject[] = stored ? JSON.parse(stored) : [];\n      \n      return projects.map((project): ProjectMetadata => ({\n        id: project.id,\n        name: project.name,\n        lastModified: project.lastModified,\n        status: project.status,\n        size: project.totalSize || 0,\n        version: project.version\n      })).sort((a, b) => new Date(b.lastModified).getTime() - new Date(a.lastModified).getTime());\n\n    } catch (error) {\n      console.error('Failed to list projects:', error);\n      return [];\n    }\n  }\n\n  // プロジェクト保存\n  public async saveProject(project: GameProject): Promise<void> {\n    try {\n      // バリデーション\n      this.validateProject(project);\n      \n      // 容量制限チェック\n      if (project.totalSize && project.totalSize > EDITOR_LIMITS.PROJECT.TOTAL_MAX_SIZE) {\n        throw new Error(`プロジェクトサイズが制限を超えています (${(project.totalSize / 1024 / 1024).toFixed(1)}MB)`);\n      }\n\n      // IndexedDBが利用可能な場合\n      if (this.dbPromise) {\n        const db = await this.dbPromise;\n        const transaction = db.transaction(['projects'], 'readwrite');\n        const store = transaction.objectStore('projects');\n        \n        return new Promise((resolve, reject) => {\n          const request = store.put(project);\n          request.onsuccess = () => resolve();\n          request.onerror = () => reject(request.error);\n        });\n      }\n\n      // localStorageフォールバック\n      const projects = await this.loadAllProjects();\n      const existingIndex = projects.findIndex(p => p.id === project.id);\n      \n      if (existingIndex >= 0) {\n        projects[existingIndex] = project;\n      } else {\n        projects.unshift(project);\n      }\n\n      // プロジェクト数制限\n      if (projects.length > this.settings.maxProjects) {\n        projects.splice(this.settings.maxProjects);\n      }\n\n      localStorage.setItem(STORAGE_KEYS.PROJECTS, JSON.stringify(projects));\n    } catch (error) {\n      console.error('Failed to save project:', error);\n      throw error;\n    }\n  }\n\n  // プロジェクト読み込み\n  public async loadProject(id: string): Promise<GameProject | null> {\n    try {\n      // IndexedDBが利用可能な場合\n      if (this.dbPromise) {\n        const db = await this.dbPromise;\n        const transaction = db.transaction(['projects'], 'readonly');\n        const store = transaction.objectStore('projects');\n        const request = store.get(id);\n        \n        return new Promise((resolve, reject) => {\n          request.onsuccess = () => resolve(request.result || null);\n          request.onerror = () => reject(request.error);\n        });\n      }\n\n      // localStorageフォールバック\n      const projects = await this.loadAllProjects();\n      return projects.find(p => p.id === id) || null;\n    } catch (error) {\n      console.error('Failed to load project:', error);\n      return null;\n    }\n  }\n\n  // プロジェクト削除\n  public async deleteProject(id: string): Promise<void> {\n    try {\n      // IndexedDBが利用可能な場合\n      if (this.dbPromise) {\n        const db = await this.dbPromise;\n        const transaction = db.transaction(['projects', 'assets'], 'readwrite');\n        \n        // プロジェクト削除\n        const projectStore = transaction.objectStore('projects');\n        const deleteProjectRequest = projectStore.delete(id);\n        \n        // 関連アセット削除\n        const assetStore = transaction.objectStore('assets');\n        const assetIndex = assetStore.index('projectId');\n        const assetRequest = assetIndex.openCursor(IDBKeyRange.only(id));\n        \n        return new Promise((resolve, reject) => {\n          let completed = 0;\n          const checkCompletion = () => {\n            completed++;\n            if (completed >= 2) resolve();\n          };\n\n          deleteProjectRequest.onsuccess = checkCompletion;\n          deleteProjectRequest.onerror = () => reject(deleteProjectRequest.error);\n          \n          assetRequest.onsuccess = (event) => {\n            const cursor = (event.target as IDBRequest).result;\n            if (cursor) {\n              cursor.delete();\n              cursor.continue();\n            } else {\n              checkCompletion();\n            }\n          };\n          assetRequest.onerror = () => reject(assetRequest.error);\n        });\n      }\n\n      // localStorageフォールバック\n      const projects = await this.loadAllProjects();\n      const filteredProjects = projects.filter(p => p.id !== id);\n      localStorage.setItem(STORAGE_KEYS.PROJECTS, JSON.stringify(filteredProjects));\n    } catch (error) {\n      console.error('Failed to delete project:', error);\n      throw error;\n    }\n  }\n\n  // プロジェクト複製\n  public async duplicateProject(id: string, newName: string): Promise<GameProject> {\n    const originalProject = await this.loadProject(id);\n    if (!originalProject) {\n      throw new Error('複製するプロジェクトが見つかりません');\n    }\n\n    const duplicatedProject: GameProject = {\n      ...originalProject,\n      id: crypto.randomUUID(),\n      name: newName.trim(),\n      createdAt: new Date().toISOString(),\n      lastModified: new Date().toISOString(),\n      status: 'draft',\n      settings: {\n        ...originalProject.settings,\n        name: newName.trim(),\n        publishing: {\n          ...originalProject.settings.publishing,\n          isPublished: false\n        }\n      }\n    };\n\n    await this.saveProject(duplicatedProject);\n    return duplicatedProject;\n  }\n\n  // プロジェクトエクスポート\n  public async exportProject(id: string): Promise<Blob> {\n    const project = await this.loadProject(id);\n    if (!project) {\n      throw new Error('エクスポートするプロジェクトが見つかりません');\n    }\n\n    const exportData: ProjectExportData = {\n      project,\n      metadata: {\n        id: project.id,\n        name: project.name,\n        lastModified: project.lastModified,\n        status: project.status,\n        size: project.totalSize || 0,\n        version: project.version\n      },\n      exportedAt: new Date().toISOString(),\n      version: '1.0.0'\n    };\n\n    const jsonData = JSON.stringify(exportData, null, 2);\n    return new Blob([jsonData], { type: 'application/json' });\n  }\n\n  // プロジェクトインポート\n  public async importProject(file: File): Promise<GameProject> {\n    try {\n      const text = await file.text();\n      const importData: ProjectExportData = JSON.parse(text);\n      \n      if (!importData.project || !importData.metadata) {\n        throw new Error('無効なプロジェクトファイルです');\n      }\n\n      // 新しいIDを生成（重複防止）\n      const importedProject: GameProject = {\n        ...importData.project,\n        id: crypto.randomUUID(),\n        createdAt: new Date().toISOString(),\n        lastModified: new Date().toISOString(),\n        status: 'draft'\n      };\n\n      // バリデーション\n      this.validateProject(importedProject);\n      \n      await this.saveProject(importedProject);\n      return importedProject;\n    } catch (error) {\n      console.error('Failed to import project:', error);\n      throw new Error('プロジェクトのインポートに失敗しました');\n    }\n  }\n\n  // ストレージ統計取得\n  public async getStorageStats(): Promise<StorageStats> {\n    const projects = await this.loadAllProjects();\n    const totalSize = projects.reduce((sum, project) => sum + (project.totalSize || 0), 0);\n    \n    // ブラウザストレージの利用可能容量を推定\n    let availableSpace = 0;\n    if ('storage' in navigator && 'estimate' in navigator.storage) {\n      try {\n        const estimate = await navigator.storage.estimate();\n        const used = estimate.usage || 0;\n        const quota = estimate.quota || 0;\n        availableSpace = quota - used;\n      } catch (error) {\n        console.warn('Could not estimate storage:', error);\n        availableSpace = 100 * 1024 * 1024; // 100MBとして推定\n      }\n    } else {\n      availableSpace = 50 * 1024 * 1024; // 50MBとして推定\n    }\n\n    return {\n      totalProjects: projects.length,\n      totalSize,\n      availableSpace,\n      lastCleanup: localStorage.getItem('editor_last_cleanup') || 'never'\n    };\n  }\n\n  // ストレージクリーンアップ\n  public async cleanupStorage(): Promise<void> {\n    try {\n      const projects = await this.loadAllProjects();\n      \n      // 古いプロジェクトを削除（30日以上更新されていない下書き）\n      const thirtyDaysAgo = Date.now() - (30 * 24 * 60 * 60 * 1000);\n      const projectsToDelete = projects.filter(project => \n        project.status === 'draft' && \n        new Date(project.lastModified).getTime() < thirtyDaysAgo\n      );\n\n      for (const project of projectsToDelete) {\n        await this.deleteProject(project.id);\n      }\n\n      // クリーンアップ実行日時を記録\n      localStorage.setItem('editor_last_cleanup', new Date().toISOString());\n      \n      console.log(`Cleaned up ${projectsToDelete.length} old projects`);\n    } catch (error) {\n      console.error('Storage cleanup failed:', error);\n    }\n  }\n\n  // 全プロジェクト読み込み（内部用）\n  private async loadAllProjects(): Promise<GameProject[]> {\n    try {\n      // IndexedDBが利用可能な場合\n      if (this.dbPromise) {\n        const db = await this.dbPromise;\n        const transaction = db.transaction(['projects'], 'readonly');\n        const store = transaction.objectStore('projects');\n        const request = store.getAll();\n        \n        return new Promise((resolve, reject) => {\n          request.onsuccess = () => resolve(request.result || []);\n          request.onerror = () => reject(request.error);\n        });\n      }\n\n      // localStorageフォールバック\n      const stored = localStorage.getItem(STORAGE_KEYS.PROJECTS);\n      return stored ? JSON.parse(stored) : [];\n    } catch (error) {\n      console.error('Failed to load all projects:', error);\n      return [];\n    }\n  }\n\n  // プロジェクトバリデーション\n  private validateProject(project: GameProject): void {\n    if (!project.id) {\n      throw new Error('プロジェクトIDが必要です');\n    }\n    \n    if (!project.name.trim()) {\n      throw new Error('プロジェクト名が必要です');\n    }\n    \n    if (project.name.length > 50) {\n      throw new Error('プロジェクト名は50文字以内にしてください');\n    }\n    \n    if (!project.version) {\n      throw new Error('プロジェクトバージョンが必要です');\n    }\n\n    if (!project.assets) {\n      throw new Error('アセット情報が必要です');\n    }\n\n    if (!project.script) {\n      throw new Error('スクリプト情報が必要です');\n    }\n\n    if (!project.settings) {\n      throw new Error('設定情報が必要です');\n    }\n  }\n\n  // 設定取得\n  public getSettings(): StorageSettings {\n    return { ...this.settings };\n  }\n\n  // 容量制限チェック\n  public async checkStorageCapacity(additionalSize: number = 0): Promise<{\n    canStore: boolean;\n    currentUsage: number;\n    availableSpace: number;\n    warningLevel: 'safe' | 'warning' | 'critical';\n  }> {\n    const stats = await this.getStorageStats();\n    const totalUsage = stats.totalSize + additionalSize;\n    const usagePercentage = (totalUsage / stats.availableSpace) * 100;\n\n    return {\n      canStore: totalUsage < stats.availableSpace,\n      currentUsage: totalUsage,\n      availableSpace: stats.availableSpace,\n      warningLevel: usagePercentage > 90 ? 'critical' : \n                   usagePercentage > 75 ? 'warning' : 'safe'\n    };\n  }\n\n  // アセット最適化（圧縮・リサイズ）\n  public async optimizeAssets(project: GameProject): Promise<GameProject> {\n    if (!this.settings.compressionEnabled) {\n      return project;\n    }\n\n    // TODO: 画像圧縮・リサイズ処理\n    // この関数では実際の最適化処理のフレームワークのみ提供\n    console.log('Asset optimization for project:', project.name);\n    \n    return {\n      ...project,\n      lastModified: new Date().toISOString()\n    };\n  }\n\n  // プロジェクト検索\n  public async searchProjects(query: string): Promise<ProjectMetadata[]> {\n    const allProjects = await this.listProjects();\n    \n    if (!query.trim()) {\n      return allProjects;\n    }\n\n    const searchTerm = query.toLowerCase();\n    \n    return allProjects.filter(project => \n      project.name.toLowerCase().includes(searchTerm) ||\n      project.id.toLowerCase().includes(searchTerm)\n    );\n  }\n\n  // バックアップ作成\n  public async createBackup(): Promise<Blob> {\n    try {\n      const projects = await this.loadAllProjects();\n      const stats = await this.getStorageStats();\n      \n      const backupData = {\n        version: '1.0.0',\n        createdAt: new Date().toISOString(),\n        stats,\n        projects\n      };\n\n      const jsonData = JSON.stringify(backupData, null, 2);\n      return new Blob([jsonData], { type: 'application/json' });\n    } catch (error) {\n      console.error('Failed to create backup:', error);\n      throw new Error('バックアップの作成に失敗しました');\n    }\n  }\n\n  // バックアップ復元\n  public async restoreBackup(file: File, mergeMode: 'replace' | 'merge' = 'merge'): Promise<void> {\n    try {\n      const text = await file.text();\n      const backupData = JSON.parse(text);\n      \n      if (!backupData.projects || !Array.isArray(backupData.projects)) {\n        throw new Error('無効なバックアップファイルです');\n      }\n\n      if (mergeMode === 'replace') {\n        // 既存プロジェクトを全削除\n        const existingProjects = await this.listProjects();\n        for (const project of existingProjects) {\n          await this.deleteProject(project.id);\n        }\n      }\n\n      // プロジェクトを復元\n      for (const project of backupData.projects) {\n        // 新しいIDを生成（重複防止）\n        const restoredProject: GameProject = {\n          ...project,\n          id: crypto.randomUUID(),\n          createdAt: new Date().toISOString(),\n          lastModified: new Date().toISOString()\n        };\n        \n        await this.saveProject(restoredProject);\n      }\n    } catch (error) {\n      console.error('Failed to restore backup:', error);\n      throw new Error('バックアップの復元に失敗しました');\n    }\n  }\n\n  // 自動保存設定\n  public enableAutoSave(): void {\n    this.saveSettings({ autoSaveEnabled: true });\n  }\n\n  public disableAutoSave(): void {\n    this.saveSettings({ autoSaveEnabled: false });\n  }\n\n  public isAutoSaveEnabled(): boolean {\n    return this.settings.autoSaveEnabled;\n  }\n\n  // IndexedDB利用可否チェック\n  public isIndexedDBAvailable(): boolean {\n    return this.dbPromise !== null;\n  }\n\n  // ストレージタイプ取得\n  public getStorageType(): 'indexeddb' | 'localstorage' {\n    return this.dbPromise ? 'indexeddb' : 'localstorage';\n  }\n}","import React from 'react';\n\nexport type EditorTab = 'assets' | 'audio' | 'script' | 'settings';\n\nexport interface TabConfig {\n  id: EditorTab;\n  label: string;\n  icon: string;\n  description: string;\n  disabled?: boolean;\n  badge?: string | number;\n}\n\ninterface TabNavigationProps {\n  activeTab: EditorTab;\n  onTabChange: (tab: EditorTab) => void;\n  tabs: TabConfig[];\n  className?: string;\n}\n\nexport const TabNavigation: React.FC<TabNavigationProps> = ({\n  activeTab,\n  onTabChange,\n  tabs,\n  className = ''\n}) => {\n  return (\n    <nav className={`bg-white shadow-sm ${className}`}>\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* モバイル対応ドロップダウン（画面幅狭い時） */}\n        <div className=\"sm:hidden\">\n          <select\n            value={activeTab}\n            onChange={(e) => onTabChange(e.target.value as EditorTab)}\n            className=\"block w-full px-3 py-2 border border-gray-300 rounded-md bg-white text-gray-900 focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\n          >\n            {tabs.map((tab) => (\n              <option key={tab.id} value={tab.id} disabled={tab.disabled}>\n                {tab.icon} {tab.label}\n                {tab.badge && ` (${tab.badge})`}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* デスクトップ・タブレット対応タブ */}\n        <div className=\"hidden sm:flex space-x-1 py-3\">\n          {tabs.map((tab) => (\n            <button\n              key={tab.id}\n              onClick={() => !tab.disabled && onTabChange(tab.id)}\n              disabled={tab.disabled}\n              className={`flex items-center space-x-2 px-6 py-3 rounded-full font-semibold transition-all duration-200 relative ${\n                activeTab === tab.id\n                  ? 'bg-gradient-to-r from-purple-500 to-pink-500 text-white shadow-md scale-105'\n                  : tab.disabled\n                  ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\n                  : 'bg-gray-100 text-gray-600 hover:bg-gray-200 hover:scale-102'\n              }`}\n            >\n              <span className=\"text-lg\">{tab.icon}</span>\n              <span>{tab.label}</span>\n              \n              {/* バッジ表示 */}\n              {tab.badge && (\n                <span className={`ml-1 px-2 py-0.5 rounded-full text-xs font-medium ${\n                  activeTab === tab.id\n                    ? 'bg-white bg-opacity-20 text-white'\n                    : 'bg-purple-100 text-purple-600'\n                }`}>\n                  {tab.badge}\n                </span>\n              )}\n\n              {/* 無効状態のオーバーレイ */}\n              {tab.disabled && (\n                <div className=\"absolute inset-0 bg-gray-200 bg-opacity-50 rounded-full flex items-center justify-center\">\n                  <span className=\"text-xs bg-gray-600 text-white px-2 py-1 rounded\">準備中</span>\n                </div>\n              )}\n            </button>\n          ))}\n        </div>\n        \n        {/* タブ説明 */}\n        <div className=\"pb-3\">\n          <p className=\"text-sm text-gray-500\">\n            {tabs.find(tab => tab.id === activeTab)?.description}\n          </p>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\n// プリセット用のタブ設定\nexport const DEFAULT_EDITOR_TABS: TabConfig[] = [\n  { \n    id: 'assets', \n    label: '絵', \n    icon: '🎨', \n    description: '背景、キャラクター、テキストを管理します' \n  },\n  { \n    id: 'audio', \n    label: '音', \n    icon: '🎵', \n    description: 'BGMと効果音を管理します' \n  },\n  { \n    id: 'script', \n    label: 'ルール', \n    icon: '⚙️', \n    description: 'ゲームの動作ルールと成功条件を設定します' \n  },\n  { \n    id: 'settings', \n    label: '公開', \n    icon: '🚀', \n    description: 'ゲーム情報の設定とテスト、公開を行います' \n  }\n];\n\n// タブの進捗チェック用ヘルパー関数\nexport const getTabCompletionStatus = (tab: EditorTab, project: any): { completed: boolean; progress: number } => {\n  switch (tab) {\n    case 'assets':\n      const hasBackground = !!project.assets?.background;\n      const hasObjects = project.assets?.objects?.length > 0;\n      const assetsProgress = (hasBackground ? 50 : 0) + (hasObjects ? 50 : 0);\n      return { completed: assetsProgress === 100, progress: assetsProgress };\n      \n    case 'audio':\n      const hasBGM = !!project.assets?.audio?.bgm;\n      const hasSE = project.assets?.audio?.se?.length > 0;\n      const audioProgress = (hasBGM ? 50 : 0) + (hasSE ? 50 : 0);\n      return { completed: audioProgress === 100, progress: audioProgress };\n      \n    case 'script':\n      const hasRules = project.script?.rules?.length > 0;\n      const hasSuccess = project.script?.successConditions?.length > 0;\n      const scriptProgress = (hasRules ? 50 : 0) + (hasSuccess ? 50 : 0);\n      return { completed: scriptProgress === 100, progress: scriptProgress };\n      \n    case 'settings':\n      const hasName = !!project.name?.trim();\n      const hasSettings = !!project.settings?.duration;\n      const settingsProgress = (hasName ? 50 : 0) + (hasSettings ? 50 : 0);\n      return { completed: settingsProgress === 100, progress: settingsProgress };\n      \n    default:\n      return { completed: false, progress: 0 };\n  }\n};\n\n// プログレス付きタブ設定を生成\nexport const getProgressTabConfig = (project: any): TabConfig[] => {\n  return DEFAULT_EDITOR_TABS.map(tab => {\n    const { completed, progress } = getTabCompletionStatus(tab.id, project);\n    return {\n      ...tab,\n      badge: completed ? '✓' : progress > 0 ? `${progress}%` : undefined\n    };\n  });\n};","import React, { useState, useCallback, useEffect } from 'react';\nimport { GameProject } from '../../types/editor/GameProject';\nimport { GameEditor } from './GameEditor';\nimport { ProjectSelector } from './ProjectSelector';\nimport { useGameProject } from '../../hooks/editor/useGameProject';\nimport { ProjectStorage } from '../../services/editor/ProjectStorage';\nimport { DEFAULT_EDITOR_TABS, getProgressTabConfig } from './common/TabNavigation';\n\ntype AppMode = 'selector' | 'editor';\n\ninterface EditorAppProps {\n  onClose?: () => void;\n  initialProjectId?: string;\n  className?: string;\n}\n\nexport const EditorApp: React.FC<EditorAppProps> = ({\n  onClose,\n  initialProjectId,\n  className = ''\n}) => {\n  const [mode, setMode] = useState<AppMode>('selector');\n  const [notification, setNotification] = useState<{\n    type: 'success' | 'error' | 'info';\n    message: string;\n  } | null>(null);\n\n  const {\n    currentProject,\n    loading,\n    error,\n    hasUnsavedChanges,\n    createProject,\n    loadProject,\n    saveProject,\n    updateProject,\n    deleteProject,\n    duplicateProject,\n    getTotalSize,\n    getValidationErrors\n  } = useGameProject();\n\n  // 初期化処理\n  useEffect(() => {\n    if (initialProjectId) {\n      handleProjectSelect({ id: initialProjectId } as GameProject);\n    }\n  }, [initialProjectId]);\n\n  // 通知表示\n  const showNotification = useCallback((type: 'success' | 'error' | 'info', message: string) => {\n    setNotification({ type, message });\n    setTimeout(() => setNotification(null), 5000);\n  }, []);\n\n  // プロジェクト選択\n  const handleProjectSelect = useCallback(async (project: GameProject) => {\n    try {\n      await loadProject(project.id);\n      setMode('editor');\n      showNotification('success', `「${project.name}」を開きました`);\n    } catch (error: any) {\n      showNotification('error', `プロジェクトの読み込みに失敗しました: ${error.message}`);\n    }\n  }, [loadProject, showNotification]);\n\n  // 新規プロジェクト作成\n  const handleCreateNew = useCallback(async (name: string) => {\n    try {\n      const newProject = await createProject(name);\n      setMode('editor');\n      showNotification('success', `「${name}」を作成しました`);\n    } catch (error: any) {\n      showNotification('error', `プロジェクトの作成に失敗しました: ${error.message}`);\n    }\n  }, [createProject, showNotification]);\n\n  // プロジェクト保存\n  const handleSave = useCallback(async () => {\n    if (!currentProject) return;\n\n    try {\n      await saveProject();\n      showNotification('success', 'プロジェクトを保存しました');\n    } catch (error: any) {\n      showNotification('error', `保存に失敗しました: ${error.message}`);\n    }\n  }, [currentProject, saveProject, showNotification]);\n\n  // テストプレイ\n  const handleTestPlay = useCallback(() => {\n    if (!currentProject) return;\n\n    const errors = getValidationErrors();\n    if (errors.length > 0) {\n      showNotification('error', `テストプレイできません: ${errors[0]}`);\n      return;\n    }\n\n    // TODO: 実際のテストプレイ機能を実装\n    showNotification('info', 'テストプレイ機能は準備中です');\n    console.log('Test play for project:', currentProject.name);\n  }, [currentProject, getValidationErrors, showNotification]);\n\n  // プロジェクト公開\n  const handlePublish = useCallback(async () => {\n    if (!currentProject) return;\n\n    const errors = getValidationErrors();\n    if (errors.length > 0) {\n      showNotification('error', `公開できません: ${errors[0]}`);\n      return;\n    }\n\n    try {\n      // 公開前に自動保存\n      await saveProject();\n\n      // 公開状態に更新\n      updateProject({\n        status: 'published',\n        settings: {\n          ...currentProject.settings,\n          publishing: {\n            ...currentProject.settings.publishing,\n            isPublished: true,\n            publishedAt: new Date().toISOString()\n          }\n        }\n      });\n\n      // 再保存\n      await saveProject();\n\n      showNotification('success', 'ゲームを公開しました！');\n      // TODO: 実際の公開処理（API呼び出し等）\n    } catch (error: any) {\n      showNotification('error', `公開に失敗しました: ${error.message}`);\n    }\n  }, [currentProject, getValidationErrors, saveProject, updateProject, showNotification]);\n\n  // エディターから戻る\n  const handleBackToSelector = useCallback(() => {\n    if (hasUnsavedChanges) {\n      const confirmed = window.confirm('未保存の変更があります。保存しますか？');\n      if (confirmed) {\n        handleSave().then(() => setMode('selector'));\n      } else {\n        setMode('selector');\n      }\n    } else {\n      setMode('selector');\n    }\n  }, [hasUnsavedChanges, handleSave]);\n\n  // プロジェクト削除（プロジェクトセレクターから）\n  const handleProjectDelete = useCallback(async (projectId: string) => {\n    try {\n      await deleteProject(projectId);\n      showNotification('success', 'プロジェクトを削除しました');\n    } catch (error: any) {\n      showNotification('error', `削除に失敗しました: ${error.message}`);\n    }\n  }, [deleteProject, showNotification]);\n\n  // プロジェクト複製\n  const handleProjectDuplicate = useCallback(async (projectId: string) => {\n    try {\n      const originalProject = currentProject || { name: 'コピー' } as GameProject;\n      const newName = `${originalProject.name} のコピー`;\n      const duplicated = await duplicateProject(projectId, newName);\n      showNotification('success', `「${duplicated.name}」を作成しました`);\n    } catch (error: any) {\n      showNotification('error', `複製に失敗しました: ${error.message}`);\n    }\n  }, [currentProject, duplicateProject, showNotification]);\n\n  // エクスポート処理\n  const handleExport = useCallback(async (projectId: string) => {\n    try {\n      const storage = ProjectStorage.getInstance();\n      const blob = await storage.exportProject(projectId);\n      \n      // ダウンロード\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `${currentProject?.name || 'project'}_export.json`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      \n      showNotification('success', 'プロジェクトをエクスポートしました');\n    } catch (error: any) {\n      showNotification('error', `エクスポートに失敗しました: ${error.message}`);\n    }\n  }, [currentProject, showNotification]);\n\n  // キーボードショートカット\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      // Ctrl+S で保存\n      if ((event.ctrlKey || event.metaKey) && event.key === 's') {\n        event.preventDefault();\n        if (mode === 'editor') {\n          handleSave();\n        }\n      }\n      \n      // Esc でプロジェクトセレクターに戻る\n      if (event.key === 'Escape' && mode === 'editor') {\n        handleBackToSelector();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [mode, handleSave, handleBackToSelector]);\n\n  // ウィンドウ閉じる前の確認\n  useEffect(() => {\n    const handleBeforeUnload = (event: BeforeUnloadEvent) => {\n      if (hasUnsavedChanges) {\n        event.preventDefault();\n        event.returnValue = '未保存の変更があります。本当に閉じますか？';\n      }\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => window.removeEventListener('beforeunload', handleBeforeUnload);\n  }, [hasUnsavedChanges]);\n\n  return (\n    <div className={`editor-app min-h-screen bg-gray-50 ${className}`}>\n      {/* ローディング表示 */}\n      {loading && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-2xl p-8 shadow-2xl text-center\">\n            <div className=\"animate-spin text-4xl mb-4\">⏳</div>\n            <p className=\"text-lg font-semibold text-gray-800\">読み込み中...</p>\n          </div>\n        </div>\n      )}\n\n      {/* 通知表示 */}\n      {notification && (\n        <div className=\"fixed top-4 right-4 z-40 max-w-md\">\n          <div className={`p-4 rounded-2xl shadow-lg border-l-4 ${\n            notification.type === 'success' ? 'bg-green-50 border-green-500 text-green-800' :\n            notification.type === 'error' ? 'bg-red-50 border-red-500 text-red-800' :\n            'bg-blue-50 border-blue-500 text-blue-800'\n          }`}>\n            <div className=\"flex items-center\">\n              <span className=\"text-xl mr-3\">\n                {notification.type === 'success' ? '✅' :\n                 notification.type === 'error' ? '❌' : 'ℹ️'}\n              </span>\n              <p className=\"font-medium\">{notification.message}</p>\n              <button\n                onClick={() => setNotification(null)}\n                className=\"ml-auto text-gray-500 hover:text-gray-700\"\n              >\n                ✕\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* エラー表示 */}\n      {error && (\n        <div className=\"fixed top-4 left-4 right-4 z-40\">\n          <div className=\"bg-red-50 border border-red-200 rounded-2xl p-4 shadow-lg\">\n            <div className=\"flex items-center\">\n              <span className=\"text-red-500 text-xl mr-3\">⚠️</span>\n              <p className=\"text-red-800 font-medium flex-1\">{error}</p>\n              <button\n                onClick={() => window.location.reload()}\n                className=\"ml-4 px-4 py-2 bg-red-500 hover:bg-red-600 text-white rounded-lg text-sm transition-colors\"\n              >\n                再読み込み\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* メインコンテンツ */}\n      {mode === 'selector' ? (\n        <ProjectSelector\n          onProjectSelect={handleProjectSelect}\n          onCreateNew={handleCreateNew}\n          onDelete={handleProjectDelete}\n          onDuplicate={handleProjectDuplicate}\n          onExport={handleExport}\n        />\n      ) : currentProject ? (\n        <div>\n          {/* エディターヘッダー（戻るボタン付き） */}\n          <div className=\"bg-white shadow-sm border-b border-gray-200\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n              <div className=\"flex items-center py-2\">\n                <button\n                  onClick={handleBackToSelector}\n                  className=\"flex items-center space-x-2 px-4 py-2 text-gray-600 hover:text-gray-800 transition-colors\"\n                >\n                  <span>← 戻る</span>\n                </button>\n                \n                {/* プロジェクト進捗表示 */}\n                <div className=\"ml-auto flex items-center space-x-4 text-sm\">\n                  <div className=\"text-gray-600\">\n                    容量: {(getTotalSize() / 1024 / 1024).toFixed(1)}MB\n                  </div>\n                  {hasUnsavedChanges && (\n                    <div className=\"text-orange-600 font-medium\">\n                      未保存の変更があります\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          {/* エディター本体 */}\n          <GameEditor\n            project={currentProject}\n            onProjectUpdate={updateProject}\n            onSave={handleSave}\n            onPublish={handlePublish}\n            onTestPlay={handleTestPlay}\n            tabs={getProgressTabConfig(currentProject)}\n          />\n        </div>\n      ) : (\n        <div className=\"flex items-center justify-center min-h-screen\">\n          <div className=\"text-center\">\n            <div className=\"text-6xl mb-4\">📂</div>\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">プロジェクトが選択されていません</h2>\n            <button\n              onClick={handleBackToSelector}\n              className=\"px-6 py-3 bg-purple-500 hover:bg-purple-600 text-white rounded-xl font-medium transition-colors\"\n            >\n              プロジェクト一覧に戻る\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* 開発者情報（フッター） */}\n      <div className=\"fixed bottom-2 left-2 text-xs text-gray-400\">\n        Game Editor v1.0.0 - Phase 6.2 完成版\n      </div>\n    </div>\n  );\n};"],"names":["EDITOR_LIMITS","CONDITIONS_LIBRARY","ACTIONS_LIBRARY","formatFileSize","bytes","k","sizes","i","optimizeImage","file","maxWidth","maxHeight","quality","resolve","reject","canvas","ctx","img","width","height","ratio","blob","AssetsTab","project","onProjectUpdate","activeAssetType","setActiveAssetType","useState","editMode","setEditMode","dragOver","setDragOver","uploading","setUploading","textContent","setTextContent","textColor","setTextColor","fontSize","setFontSize","fontWeight","setFontWeight","fileInputRef","useRef","getTotalSize","useCallback","total","obj","totalSize","sizePercentage","handleFileUpload","files","maxSize","optimized","reader","e","dataUrl","_a","frame","now","updatedAssets","newObject","imageSize","sum","_b","audioSize","_c","se","error","addTextAsset","newText","deleteAsset","type","id","removedSize","index","text","handleDragOver","handleDragLeave","handleDrop","jsxs","jsx","tab","FileUploader","accept","onUpload","disabled","className","children","handleFileSelect","getAudioInfo","audio","url","formatTime","seconds","mins","secs","AudioTab","activeAudioType","setActiveAudioType","playingId","setPlayingId","currentTime","setCurrentTime","editingId","setEditingId","volume","setVolume","audioRef","canvasRef","maxAudioSize","audioSizePercentage","handleAudioUpload","audioInfo","maxDuration","newAudioAsset","playAudio","stopAudio","deleteAudio","updateAudioProperty","property","value","useEffect","updateTime","onEnded","ScriptTab","mode","setMode","selectedObjectId","setSelectedObjectId","editingRule","setEditingRule","showRuleModal","setShowRuleModal","draggedItem","setDraggedItem","gamePreviewRef","updateProject","updates","handleObjectPositionUpdate","objectId","position","updatedScript","objectIndex","handleAddRule","newRule","handleSaveRule","rule","existingIndex","r","updatedRule","c","a","handleDeleteRule","ruleId","rect","x","y","clampedX","clampedY","layoutObj","asset","_","selectedObj","selectedAsset","Fragment","objIndex","ruleIndex","RuleEditorModal","initialRule","onSave","onClose","setRule","handleSave","condition","newCondition","newConditions","action","newAction","newActions","DURATION_PRESETS","DIFFICULTY_LEVELS","SettingsTab","isTestPlaying","setIsTestPlaying","testPlayResult","setTestPlayResult","isPublishing","setIsPublishing","publishError","setPublishError","generateThumbnail","setGenerateThumbnail","updateSettings","newSettings","handleGameNameChange","name","handleDescriptionChange","description","handleDurationChange","handleDifficultyChange","difficulty","handleTestPlay","success","handleGenerateThumbnail","gradient","thumbnailDataUrl","handlePublish","handleExport","exportData","preset","level","_d","_e","_f","_g","GameEditor","onPublish","onTestPlay","customTabs","activeTab","setActiveTab","hasUnsavedChanges","setHasUnsavedChanges","autoSaveEnabled","setAutoSaveEnabled","handleProjectUpdate","updatedProject","autoSaveTimer","assets","tabs","ProjectCard","onSelect","onDelete","lastModified","isRecent","stats","sizeInMB","ProjectSelector","onProjectSelect","onCreateNew","projects","setProjects","loading","setLoading","searchQuery","setSearchQuery","showNewProjectModal","setShowNewProjectModal","newProjectName","setNewProjectName","demoProjects","filteredProjects","handleCreateNew","handleDeleteProject","projectId","prev","p","createDefaultProject","STORAGE_KEYS","useGameProject","currentProject","setCurrentProject","setError","handleError","operation","err","getStoredProjects","stored","saveStoredProjects","createProject","template","newProject","updatedProjects","loadProject","saveProject","projectToSave","calculateTotalSize","calculateAssetStatistics","calculateScriptStatistics","projectIndex","deleteProject","duplicateProject","newName","originalProject","duplicatedProject","updateAssets","addAsset","currentAssets","removeAsset","updateScript","script","addRule","updatedRules","removeRule","settings","canAddAsset","size","currentSize","limits","getValidationErrors","errors","lastProjectId","totalImageSize","totalAudioSize","totalConditions","totalActions","complexityScore","_ProjectStorage","__publicField","request","event","db","projectStore","assetStore","b","store","transaction","deleteProjectRequest","assetRequest","completed","checkCompletion","cursor","jsonData","importData","importedProject","availableSpace","estimate","used","thirtyDaysAgo","projectsToDelete","additionalSize","totalUsage","usagePercentage","query","allProjects","searchTerm","backupData","mergeMode","existingProjects","restoredProject","ProjectStorage","DEFAULT_EDITOR_TABS","getTabCompletionStatus","hasBackground","hasObjects","assetsProgress","hasBGM","hasSE","_h","audioProgress","hasRules","_j","_i","hasSuccess","_l","_k","scriptProgress","hasName","_m","hasSettings","_n","settingsProgress","getProgressTabConfig","progress","EditorApp","initialProjectId","notification","setNotification","handleProjectSelect","showNotification","message","handleBackToSelector","handleProjectDelete","handleProjectDuplicate","duplicated","handleKeyDown","handleBeforeUnload"],"mappings":"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"}