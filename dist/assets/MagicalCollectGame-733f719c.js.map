{"version":3,"file":"MagicalCollectGame-733f719c.js","sources":["../../src/game-engine/MagicalCollectGame.ts"],"sourcesContent":["// MagicalCollectGame.ts\n// Drop-in short game template (PixiJS + TypeScript)\n// Register under key 'magical_collect' in your factory/registry.\n//\n// Gameplay:\n// - Each round, a target ingredient (Fire / Water / Leaf / Star) is announced.\n// - Drag your wand to collect ONLY the target ingredients. Avoid CURSED or wrong ones.\n// - Reach the target count for the round before time runs out. Clear enough rounds overall.\n//\n// Project compatibility notes:\n// - Do NOT narrow base types; import GameTemplate & GameSettings only.\n// - Do NOT redeclare base fields like duration/difficulty/timerText.\n// - Use an internal `finished` flag (avoid relying on a specific GameState union).\n// - Emit results via `onGameEnd(success, score)`.\nimport { Application, Container, Graphics, Text, FederatedPointerEvent } from 'pixi.js';\nimport { GameTemplate, type GameSettings } from './GameTemplate';\n\nexport type Difficulty = 'easy' | 'normal' | 'hard';\n\nexport interface MagicalCollectSettings extends GameSettings {\n  rounds?: number;           // total rounds to clear\n  targetPerRound?: number;   // items to collect per round\n  roundTimeMs?: number;      // time per round\n  missesAllowed?: number;    // overall allowed wrong/cursed/timeout\n  spawnBaseMs?: number;      // base spawn interval\n  speedPxPerSec?: number;    // orb speed\n  palette?: 'arcane' | 'forest' | 'night';\n}\n\ntype Kind = 'fire' | 'water' | 'leaf' | 'star' | 'curse';\n\n// ---- helpers ----\nfunction isDifficulty(v: unknown): v is Difficulty { return v === 'easy' || v === 'normal' || v === 'hard'; }\nfunction getDifficulty(settings: GameSettings): Difficulty {\n  const d = (settings as any).difficulty;\n  return isDifficulty(d) ? d : 'normal';\n}\nfunction secondsToMs(s: number | undefined, fallbackMs: number) {\n  if (typeof s === 'number' && isFinite(s)) return Math.max(1000, Math.round(s * 1000));\n  return fallbackMs;\n}\nfunction clamp(x: number, lo: number, hi: number) { return Math.max(lo, Math.min(hi, x)); }\n\ntype Orb = {\n  g: Graphics;\n  x: number; y: number; r: number;\n  vx: number; vy: number;\n  kind: Kind;\n  bornAt: number;\n};\n\nexport class MagicalCollectGame extends GameTemplate {\n  public onGameEnd?: (success: boolean, score: number) => void;\n\n  private scene = new Container();\n  private finished = false;\n  private remainMs = 30_000;\n\n  // UI\n  private infoText!: Text;\n  private promptText!: Text;\n  private timeBar!: Graphics;\n\n  // playfield / wand\n  private wand!: Graphics;\n  private wx = 0; private wy = 0; private wr = 34;\n  private pointerDown = false;\n\n  // runtime\n  private spawnAccum = 0;\n  private spawnBaseMs = 650;\n  private speed = 160;\n  private orbs: Orb[] = [];\n  private roundsNeeded = 8;\n  private roundsDone = 0;\n  private roundTimeMs = 3200;\n  private roundRemain = 3200;\n  private targetPerRound = 8;\n  private targetKind: Kind = 'fire';\n  private misses = 0;\n  private missesAllowed = 3;\n  private score = 0;\n  private combo = 0;\n\n  // colors / theme\n  private colors = {\n    bgTop: 0x301934, bgBottom: 0x1a0b1e, // night-ish default\n    text: 0xffffff,\n    barBack: 0x374151, barFill: 0x8b5cf6,\n    wand: 0xffffff,\n    fire: 0xff6b6b, water: 0x3b82f6, leaf: 0x34d399, star: 0xfff1a6, curse: 0x111111,\n    ring: 0xfcd34d,\n  };\n\n  constructor(app: Application, settings: MagicalCollectSettings) {\n    super(app, settings);\n  }\n\n  async createScene(): Promise<void> {\n    const s = (this as any).settings as MagicalCollectSettings;\n    const diff = getDifficulty(s);\n    const W = this.app.renderer.width, H = this.app.renderer.height;\n\n    // overall duration\n    this.remainMs = secondsToMs((s as any).duration as number, 30_000);\n\n    // difficulty presets\n    if (diff === 'easy') {\n      this.roundsNeeded = 6; this.targetPerRound = 6; this.roundTimeMs = 3600; this.missesAllowed = 4;\n      this.spawnBaseMs = 720; this.speed = 140; this.wr = 38;\n    } else if (diff === 'hard') {\n      this.roundsNeeded = 10; this.targetPerRound = 9; this.roundTimeMs = 2800; this.missesAllowed = 2;\n      this.spawnBaseMs = 560; this.speed = 180; this.wr = 30;\n    } else {\n      this.roundsNeeded = 8; this.targetPerRound = 8; this.roundTimeMs = 3200; this.missesAllowed = 3;\n      this.spawnBaseMs = 650; this.speed = 160; this.wr = 34;\n    }\n\n    // overrides\n    if (typeof s.rounds === 'number' && isFinite(s.rounds)) this.roundsNeeded = clamp(Math.round(s.rounds), 3, 30);\n    if (typeof s.targetPerRound === 'number' && isFinite(s.targetPerRound)) this.targetPerRound = clamp(Math.round(s.targetPerRound), 2, 30);\n    if (typeof s.roundTimeMs === 'number' && isFinite(s.roundTimeMs)) this.roundTimeMs = clamp(Math.round(s.roundTimeMs), 1200, 8000);\n    if (typeof s.missesAllowed === 'number' && isFinite(s.missesAllowed)) this.missesAllowed = clamp(Math.round(s.missesAllowed), 0, 10);\n    if (typeof s.spawnBaseMs === 'number' && isFinite(s.spawnBaseMs)) this.spawnBaseMs = clamp(Math.round(s.spawnBaseMs), 200, 2000);\n    if (typeof s.speedPxPerSec === 'number' && isFinite(s.speedPxPerSec)) this.speed = clamp(Math.round(s.speedPxPerSec), 60, 360);\n\n    if (s.palette === 'forest') {\n      this.colors.bgTop = 0x14532d; this.colors.bgBottom = 0x052e16; this.colors.barFill = 0x34d399;\n    } else if (s.palette === 'arcane') {\n      this.colors.bgTop = 0x1d243b; this.colors.bgBottom = 0x0c1020; this.colors.barFill = 0x8b5cf6;\n    } else if (s.palette === 'night') {\n      this.colors.bgTop = 0x0b1020; this.colors.bgBottom = 0x151a2b; this.colors.barFill = 0x3b82f6;\n    }\n\n    // background\n    const bg = new Graphics();\n    bg.beginFill(this.colors.bgTop); bg.drawRect(0, 0, W, Math.floor(H * 0.45)); bg.endFill();\n    bg.beginFill(this.colors.bgBottom); bg.drawRect(0, Math.floor(H * 0.45), W, H); bg.endFill();\n    this.scene.addChild(bg);\n\n    // info text\n    this.infoText = new Text('', {\n      fontFamily: 'sans-serif', fontSize: Math.floor(Math.min(W, H) * 0.045),\n      fill: this.colors.text, stroke: 0x000000, strokeThickness: 4,\n    });\n    this.infoText.anchor.set(0.5);\n    this.infoText.x = W / 2; this.infoText.y = Math.floor(H * 0.18);\n    this.scene.addChild(this.infoText);\n    this.updateInfo();\n\n    // prompt\n    this.promptText = new Text('Ready?', {\n      fontFamily: 'sans-serif', fontSize: Math.floor(Math.min(W, H) * 0.08),\n      fill: this.colors.text, stroke: 0x000000, strokeThickness: 6,\n    });\n    this.promptText.anchor.set(0.5);\n    this.promptText.x = W / 2; this.promptText.y = Math.floor(H * 0.28);\n    this.scene.addChild(this.promptText);\n\n    // time bar\n    this.timeBar = new Graphics();\n    this.scene.addChild(this.timeBar);\n\n    // wand\n    this.wx = W / 2; this.wy = Math.floor(H * 0.70);\n    this.wand = new Graphics();\n    this.drawWand();\n    this.scene.addChild(this.wand);\n\n    // input (drag to move wand)\n    this.scene.eventMode = 'static';\n    this.scene.on('pointerdown', (e: FederatedPointerEvent) => { this.pointerDown = true; const p = this.scene.toLocal(e.global); this.wx = p.x; this.wy = p.y; this.drawWand(); });\n    this.scene.on('pointermove', (e: FederatedPointerEvent) => { if (!this.pointerDown) return; const p = this.scene.toLocal(e.global); this.wx = p.x; this.wy = p.y; this.clampWand(); this.drawWand(); });\n    this.scene.on('pointerup',   () => { this.pointerDown = false; });\n    this.scene.on('pointerupoutside', () => { this.pointerDown = false; });\n\n    this.container.addChild(this.scene);\n\n    // begin first round\n    this.nextRound(true);\n  }\n\n  handleInput(_e: FederatedPointerEvent): void {\n    // not used\n  }\n\n  updateGame(deltaTime: number): void {\n    if (this.finished) return;\n    const dtMs = deltaTime * (1000 / 60);\n    const dt = dtMs / 1000;\n    const W = this.app.renderer.width, H = this.app.renderer.height;\n\n    // overall timer\n    this.remainMs -= dtMs;\n    if (this.remainMs <= 0) {\n      this.remainMs = 0;\n      this.finish(this.roundsDone >= this.roundsNeeded);\n      return;\n    }\n\n    // per-round timer\n    this.roundRemain -= dtMs;\n    if (this.roundRemain <= 0) {\n      // timeout -> miss\n      this.registerMiss('timeout');\n    }\n\n    // spawn\n    this.spawnAccum += dtMs;\n    while (this.spawnAccum >= this.spawnBaseMs) {\n      this.spawnAccum -= this.spawnBaseMs;\n      this.spawnOrb();\n    }\n\n    // move orbs + bounce on edges\n    const survivors: Orb[] = [];\n    for (const o of this.orbs) {\n      o.x += o.vx * dt;\n      o.y += o.vy * dt;\n      if (o.x - o.r < 6) { o.x = o.r + 6; o.vx = Math.abs(o.vx); }\n      if (o.x + o.r > W - 6) { o.x = W - o.r - 6; o.vx = -Math.abs(o.vx); }\n      if (o.y - o.r < Math.floor(H * 0.40)) { o.y = Math.floor(H * 0.40) + o.r; o.vy = Math.abs(o.vy); }\n      if (o.y + o.r > H - 10) { o.y = H - 10 - o.r; o.vy = -Math.abs(o.vy); }\n\n      // collect?\n      const dx = o.x - this.wx, dy = o.y - this.wy;\n      const dist = Math.sqrt(dx*dx + dy*dy);\n      if (dist <= o.r + this.wr) {\n        this.onCollect(o);\n        continue;\n      }\n\n      // lifetime cull (keep scene light)\n      if (performance.now() - o.bornAt < 12000) survivors.push(o);\n      else this.scene.removeChild(o.g);\n    }\n    this.orbs = survivors;\n\n    // redraw ui\n    this.drawTimeBar();\n  }\n\n  protected showResult(result: { success: boolean; score: number }): void {\n    this.onGameEnd?.(result.success, result.score);\n  }\n\n  // ---- internals ----\n  private updateInfo() {\n    const remainS = Math.ceil(this.remainMs / 1000);\n    this.infoText.text = `Round ${this.roundsDone}/${this.roundsNeeded}   Miss ${this.misses}/${this.missesAllowed}   Time ${remainS}s`;\n  }\n\n  private drawTimeBar() {\n    const W = this.app.renderer.width;\n    const y = Math.floor(this.app.renderer.height * 0.36);\n    const w = Math.floor(W * 0.7);\n    const x = Math.floor((W - w) / 2);\n    const h = 10;\n    const frac = clamp(this.roundRemain / this.roundTimeMs, 0, 1);\n    this.timeBar.clear();\n    this.timeBar.beginFill(this.colors.barBack, 0.4); this.timeBar.drawRoundedRect(x, y, w, h, 6); this.timeBar.endFill();\n    this.timeBar.beginFill(this.colors.barFill, 0.95); this.timeBar.drawRoundedRect(x, y, Math.floor(w * frac), h, 6); this.timeBar.endFill();\n  }\n\n  private drawWand() {\n    const g = this.wand;\n    g.clear();\n    g.lineStyle(4, this.colors.ring, 0.9);\n    g.drawCircle(this.wx, this.wy, this.wr);\n    g.endFill();\n    g.beginFill(this.colors.wand, 0.6);\n    g.drawCircle(this.wx, this.wy, Math.max(6, Math.floor(this.wr * 0.18)));\n    g.endFill();\n  }\n\n  private clampWand() {\n    const W = this.app.renderer.width, H = this.app.renderer.height;\n    const top = Math.floor(H * 0.40);\n    this.wx = clamp(this.wx, this.wr + 6, W - this.wr - 6);\n    this.wy = clamp(this.wy, top + this.wr + 6, H - this.wr - 8);\n  }\n\n  private nextRound(first = false) {\n    // pick target kind\n    const kinds: Kind[] = ['fire', 'water', 'leaf', 'star'];\n    this.targetKind = kinds[(Math.random() * kinds.length) | 0];\n    this.promptText.text = `Collect ${this.targetKind.toUpperCase()} × ${this.targetPerRound}`;\n\n    // reset\n    this.roundRemain = this.roundTimeMs;\n    this.combo = 0;\n    // clear orbs\n    for (const o of this.orbs) this.scene.removeChild(o.g);\n    this.orbs = [];\n\n    if (!first) this.updateInfo();\n    this.drawTimeBar();\n  }\n\n  private spawnOrb() {\n    const W = this.app.renderer.width, H = this.app.renderer.height;\n    // bias: 45% target, 35% other goods, 20% curse\n    const r = Math.random();\n    let kind: Kind;\n    if (r < 0.45) kind = this.targetKind;\n    else if (r < 0.80) {\n      const goods: Kind[] = ['fire', 'water', 'leaf', 'star'].filter(k => k !== this.targetKind) as Kind[];\n      kind = goods[(Math.random() * goods.length) | 0];\n    } else kind = 'curse';\n\n    const g = new Graphics();\n    const rad = 16 + Math.random() * 10;\n    // draw shape by kind\n    if (kind === 'fire') {\n      g.beginFill(this.colors.fire, 0.95);\n      g.drawCircle(0, 0, rad);\n      g.endFill();\n      // flame tip\n      g.beginFill(0xffffff, 0.6);\n      g.drawCircle(rad*0.2, -rad*0.2, rad*0.35);\n      g.endFill();\n    } else if (kind === 'water') {\n      g.beginFill(this.colors.water, 0.95);\n      g.drawEllipse(0, 0, rad*0.86, rad);\n      g.endFill();\n    } else if (kind === 'leaf') {\n      g.beginFill(this.colors.leaf, 0.95);\n      g.drawPolygon([-rad, 0, 0, -rad*0.9, rad, 0, 0, rad*0.9]);\n      g.endFill();\n    } else if (kind === 'star') {\n      g.beginFill(this.colors.star, 0.95);\n      const spikes = 5, outer = rad, inner = rad*0.5;\n      for (let i = 0; i < spikes * 2; i++) {\n        const ang = (Math.PI / spikes) * i - Math.PI / 2;\n        const rr = (i % 2 === 0) ? outer : inner;\n        const x = Math.cos(ang) * rr, y = Math.sin(ang) * rr;\n        if (i === 0) g.moveTo(x, y); else g.lineTo(x, y);\n      }\n      g.closePath(); g.endFill();\n    } else {\n      g.beginFill(this.colors.curse, 0.95);\n      g.drawPolygon([-rad, -rad, rad, -rad, rad, rad, -rad, rad]);\n      g.endFill();\n    }\n\n    const marginX = 12, top = Math.floor(H * 0.42), bottom = H - 14;\n    let x = marginX + Math.random() * (W - marginX * 2);\n    let y = top + Math.random() * (bottom - top);\n    g.x = x; g.y = y;\n    this.scene.addChild(g);\n\n    const angle = Math.random() * Math.PI * 2;\n    const speed = this.speed * (0.7 + Math.random() * 0.6);\n    const vx = Math.cos(angle) * speed;\n    const vy = Math.sin(angle) * speed;\n\n    this.orbs.push({ g, x, y, r: rad, vx, vy, kind, bornAt: performance.now() });\n  }\n\n  private onCollect(o: Orb) {\n    // remove from scene\n    this.scene.removeChild(o.g);\n\n    if (o.kind === this.targetKind) {\n      this.targetPerRound--;\n      this.combo++;\n      const speedFrac = clamp(this.roundRemain / this.roundTimeMs, 0, 1);\n      const base = 120, comboBonus = Math.min(10, this.combo) * 20, speedBonus = Math.round(60 * speedFrac);\n      this.score += base + comboBonus + speedBonus;\n      this.flash(this.wx, this.wy, 0x92e6a7);\n      if (this.targetPerRound <= 0) {\n        // round cleared\n        this.roundsDone++;\n        if (this.roundsDone >= this.roundsNeeded) {\n          this.finish(true);\n        } else {\n          // restore target count for next round\n          const s = (this as any).settings as MagicalCollectSettings;\n          const diff = getDifficulty(s);\n          const def = diff === 'easy' ? 6 : diff === 'hard' ? 9 : 8;\n          const cfg = (typeof s.targetPerRound === 'number' && isFinite(s.targetPerRound)) ? clamp(Math.round(s.targetPerRound), 2, 30) : def;\n          this.targetPerRound = cfg;\n          setTimeout(() => this.nextRound(), 180);\n        }\n      }\n    } else {\n      // wrong or cursed -> miss\n      this.registerMiss(o.kind === 'curse' ? 'curse' : 'wrong');\n    }\n  }\n\n  private registerMiss(_why: 'wrong' | 'curse' | 'timeout') {\n    this.combo = 0;\n    this.misses++;\n    this.score = Math.max(0, this.score - 150);\n    this.flash(this.wx, this.wy, 0xff5a5a);\n    if (this.misses > this.missesAllowed) {\n      this.finish(false);\n    } else {\n      setTimeout(() => this.nextRound(), 220);\n    }\n  }\n\n  private flash(x: number, y: number, color: number) {\n    const g = new Graphics();\n    g.beginFill(color, 0.22);\n    g.drawCircle(0, 0, this.wr * 1.6);\n    g.endFill();\n    g.x = x; g.y = y;\n    this.scene.addChild(g);\n    const steps = 8;\n    for (let i = 1; i <= steps; i++) {\n      setTimeout(() => { g.alpha = Math.max(0, 0.22 * (1 - i/steps)); if (i === steps) this.scene.removeChild(g); }, i * 30);\n    }\n  }\n\n  private finish(success: boolean) {\n    if (this.finished) return;\n    this.finished = true;\n    const timeBonus = Math.round(this.remainMs / 6);\n    const roundBonus = this.roundsDone * 60;\n    const missPenalty = this.misses * 120;\n    const score = Math.max(0, this.score + timeBonus + roundBonus - missPenalty + (success ? 800 : 0));\n    this.onGameEnd?.(success, score);\n  }\n}\n"],"names":["isDifficulty","v","getDifficulty","settings","secondsToMs","s","fallbackMs","clamp","x","lo","hi","MagicalCollectGame","GameTemplate","app","__publicField","Container","diff","W","H","bg","Graphics","Text","e","p","_e","deltaTime","dtMs","dt","survivors","o","dx","dy","result","_a","remainS","y","w","h","frac","g","top","first","kinds","r","kind","goods","k","rad","spikes","outer","inner","i","ang","rr","marginX","bottom","angle","speed","vx","vy","speedFrac","base","comboBonus","speedBonus","def","cfg","_why","color","steps","success","timeBonus","roundBonus","missPenalty","score"],"mappings":"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"}