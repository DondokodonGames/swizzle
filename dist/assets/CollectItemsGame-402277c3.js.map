{"version":3,"file":"CollectItemsGame-402277c3.js","sources":["../../src/game-engine/CollectItemsGame.ts"],"sourcesContent":["// CollectItemsGame.ts\n// Drop-in short game template (PixiJS + TypeScript)\n// Register under key 'collect_items' in your factory/registry.\n//\n// Design goals:\n// - 30s one-shot play (duration from GameSettings.seconds)\n// - Move a basket to collect GOOD items, avoid BAD items\n// - Success if collected enough GOOD items before time runs out\n// - Do not narrow base types; do not redeclare duration/difficulty locally\n// - Internal `finished` flag instead of relying on GameState\n//\nimport { Application, Container, Graphics, Sprite, Texture, FederatedPointerEvent } from 'pixi.js';\nimport { GameTemplate, type GameSettings } from './GameTemplate';\n\nexport type Difficulty = 'easy' | 'normal' | 'hard';\n\nexport interface CollectItemsSettings extends GameSettings {\n  // Inherit: duration (seconds), difficulty from GameSettings\n  spawnBaseMs?: number;   // base interval between spawns (ms). default 700\n  badRatio?: number;      // probability of bad item [0..1]. default 0.35\n  targetGood?: number;    // how many good items needed to succeed. default by difficulty\n  playerSpeed?: number;   // basket lateral speed (px/s). default 700\n}\n\n// ---- helpers ----\nfunction isDifficulty(v: unknown): v is Difficulty {\n  return v === 'easy' || v === 'normal' || v === 'hard';\n}\nfunction getDifficulty(settings: GameSettings): Difficulty {\n  const d = (settings as any).difficulty;\n  return isDifficulty(d) ? d : 'normal';\n}\nfunction secondsToMs(s: number | undefined, fallbackMs: number) {\n  if (typeof s === 'number' && isFinite(s)) return Math.max(1000, Math.round(s * 1000));\n  return fallbackMs;\n}\nfunction createGradientSprite(app: Application, topHex: number, bottomHex: number, width?: number, height?: number) {\n  const w = width ?? app.renderer.width;\n  const h = height ?? app.renderer.height;\n  const canvas = document.createElement('canvas');\n  canvas.width = w; canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n  const g = ctx.createLinearGradient(0, 0, 0, h);\n  const hex = (n: number) => `#${n.toString(16).padStart(6, '0')}`;\n  g.addColorStop(0, hex(topHex)); g.addColorStop(1, hex(bottomHex));\n  ctx.fillStyle = g; ctx.fillRect(0, 0, w, h);\n  return new Sprite(Texture.from(canvas));\n}\nfunction clamp(x: number, lo: number, hi: number) { return Math.max(lo, Math.min(hi, x)); }\n\n// Item model (circle approximations for simplicity)\ninterface Item {\n  g: Graphics;\n  good: boolean;\n  x: number;\n  y: number;\n  r: number;  // radius for bounds\n  vx: number;\n  vy: number;\n}\n\nexport class CollectItemsGame extends GameTemplate {\n  public onGameEnd?: (success: boolean, score: number) => void;\n\n  private scene = new Container();\n  private basket!: Graphics;\n  private basketW = 140;\n  private basketH = 24;\n  private targetX = 0;\n  private playerSpeed = 700;\n\n  private items: Item[] = [];\n  private finished = false;\n\n  // timing\n  private remainMs = 30_000;\n  private spawnAccum = 0;\n  private spawnBaseMs = 700;\n\n  // goals & difficulty\n  private goodNeeded = 12;\n  private goodCount = 0;\n  private badCount = 0;\n  private badRatio = 0.35;\n  private diffMul = 1;\n  private maxBad = 2;\n\n  constructor(app: Application, settings: CollectItemsSettings) {\n    super(app, settings);\n  }\n\n  async createScene(): Promise<void> {\n    const s = (this as any).settings as CollectItemsSettings;\n    const diff = getDifficulty(s);\n\n    // duration & params\n    this.remainMs = secondsToMs((s as any).duration as number, 30_000);\n    this.spawnBaseMs = (typeof s.spawnBaseMs === 'number' && isFinite(s.spawnBaseMs)) ? Math.max(50, Math.round(s.spawnBaseMs)) : 700;\n    this.playerSpeed = (typeof s.playerSpeed === 'number' && isFinite(s.playerSpeed)) ? s.playerSpeed : 700;\n    this.badRatio = (typeof s.badRatio === 'number' && isFinite(s.badRatio)) ? clamp(s.badRatio, 0, 1) : 0.35;\n\n    // difficulty scaling\n    if (diff === 'easy')  { this.diffMul = 0.85; this.maxBad = 3; this.goodNeeded = 10; }\n    else if (diff === 'hard') { this.diffMul = 1.25; this.maxBad = 1; this.goodNeeded = 14; }\n    else { this.diffMul = 1.0; this.maxBad = 2; this.goodNeeded = 12; }\n\n    if (typeof s.targetGood === 'number' && isFinite(s.targetGood)) this.goodNeeded = Math.max(1, Math.round(s.targetGood));\n\n    const W = this.app.renderer.width; const H = this.app.renderer.height;\n\n    // background\n    const bg = createGradientSprite(this.app, 0x14532d, 0x052e16);\n    this.scene.addChild(bg);\n\n    // basket\n    this.basket = new Graphics();\n    this.basket.beginFill(0xffffff, 0.95);\n    this.basket.drawRoundedRect(-this.basketW/2, -this.basketH/2, this.basketW, this.basketH, 10);\n    this.basket.endFill();\n    this.basket.x = W / 2; this.basket.y = H - 70;\n    this.targetX = this.basket.x;\n    this.scene.addChild(this.basket);\n\n    // input\n    const onPointerMove = (e: FederatedPointerEvent) => {\n      const local = e.global;\n      this.targetX = clamp(local.x, this.basketW/2 + 10, W - this.basketW/2 - 10);\n    };\n    const onPointerDown = (e: FederatedPointerEvent) => onPointerMove(e);\n    this.scene.eventMode = 'static';\n    this.scene.on('pointermove', onPointerMove);\n    this.scene.on('pointerdown', onPointerDown);\n\n    this.container.addChild(this.scene);\n  }\n\n  handleInput(_e: FederatedPointerEvent): void {\n    // not used\n  }\n\n  updateGame(deltaTime: number): void {\n    if (this.finished) return;\n    const dtMs = deltaTime * (1000 / 60);\n    const dt = dtMs / 1000;\n    const W = this.app.renderer.width; const H = this.app.renderer.height;\n\n    // time\n    this.remainMs -= dtMs;\n    if (this.remainMs <= 0) {\n      this.remainMs = 0;\n      // success by goal\n      this.finish(this.goodCount >= this.goodNeeded);\n      return;\n    }\n\n    // spawn\n    this.spawnAccum += dtMs;\n    const interval = this.spawnBaseMs / this.diffMul;\n    while (this.spawnAccum >= interval) {\n      this.spawnAccum -= interval;\n      this.spawnItem(W);\n    }\n\n    // move basket towards target\n    const dx = this.targetX - this.basket.x;\n    const maxStep = this.playerSpeed * dt;\n    if (Math.abs(dx) <= maxStep) this.basket.x = this.targetX;\n    else this.basket.x += Math.sign(dx) * maxStep;\n\n    // update items\n    const bLeft = this.basket.x - this.basketW/2;\n    const bRight = this.basket.x + this.basketW/2;\n    const bTop = this.basket.y - this.basketH/2;\n    const bBottom = this.basket.y + this.basketH/2;\n\n    const alive: Item[] = [];\n    for (const it of this.items) {\n      it.x += it.vx * dt;\n      it.y += it.vy * dt;\n      it.g.x = it.x; it.g.y = it.y;\n\n      // catch? (circle vs rect)\n      const nx = clamp(it.x, bLeft, bRight);\n      const ny = clamp(it.y, bTop, bBottom);\n      const dx2 = it.x - nx, dy2 = it.y - ny;\n      const catchHit = (dx2*dx2 + dy2*dy2) <= (it.r*it.r);\n\n      if (catchHit) {\n        if (it.good) this.goodCount++; else this.badCount++;\n        this.scene.removeChild(it.g);\n        // early terminate success\n        if (it.good && this.goodCount >= this.goodNeeded) {\n          this.finish(true);\n          return;\n        }\n        // too many bads -> fail\n        if (!it.good && this.badCount > this.maxBad) {\n          this.finish(false);\n          return;\n        }\n        continue; // consumed\n      }\n\n      // off-screen?\n      if (it.y - it.r > H + 10) {\n        this.scene.removeChild(it.g);\n        continue;\n      }\n      alive.push(it);\n    }\n    this.items = alive;\n  }\n\n  protected showResult(result: { success: boolean; score: number }): void {\n    this.onGameEnd?.(result.success, result.score);\n  }\n\n  // ---- internals ----\n  private spawnItem(W: number) {\n    const good = Math.random() > this.badRatio;\n    const g = new Graphics();\n    let r = 18 + Math.random() * 10;\n    if (good) {\n      // good: circle (yellow-ish)\n      g.beginFill(0xfff1a6); g.drawCircle(0, 0, r); g.endFill();\n    } else {\n      // bad: triangle (red-ish)\n      r = 20;\n      g.beginFill(0xff5a5a);\n      g.moveTo(0, -r);\n      g.lineTo(r * 0.9, r);\n      g.lineTo(-r * 0.9, r);\n      g.lineTo(0, -r);\n      g.endFill();\n    }\n    const x = 20 + Math.random() * (W - 40);\n    const y = -30;\n    g.x = x; g.y = y;\n\n    // velocity\n    const vy = (good ? 260 : 300) * this.diffMul + Math.random() * 120 * this.diffMul;\n    const vx = (Math.random() - 0.5) * 60;\n\n    this.scene.addChild(g);\n    this.items.push({ g, good, x, y, r, vx, vy });\n  }\n\n  private finish(success: boolean) {\n    if (this.finished) return;\n    this.finished = true;\n    // score: 100 per good, penalty 200 per bad, time bonus\n    const base = this.goodCount * 100 - this.badCount * 200;\n    const bonus = Math.round(this.remainMs / 20);\n    const score = Math.max(0, base + bonus + (success ? 500 : 0));\n    this.onGameEnd?.(success, score);\n  }\n}\n"],"names":["isDifficulty","v","getDifficulty","settings","d","secondsToMs","s","fallbackMs","createGradientSprite","app","topHex","bottomHex","width","height","w","h","canvas","ctx","g","hex","n","Sprite","Texture","clamp","x","lo","hi","CollectItemsGame","GameTemplate","__publicField","Container","diff","W","H","bg","Graphics","onPointerMove","e","local","onPointerDown","_e","deltaTime","dtMs","dt","interval","dx","maxStep","bLeft","bRight","bTop","bBottom","alive","it","nx","ny","dx2","dy2","result","_a","good","r","y","vy","vx","success","base","bonus","score"],"mappings":"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"}