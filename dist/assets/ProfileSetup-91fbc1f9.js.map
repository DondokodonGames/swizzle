{"version":3,"file":"ProfileSetup-91fbc1f9.js","sources":["../../src/components/auth/ProfileSetup.tsx"],"sourcesContent":["// src/components/auth/ProfileSetup.tsx\n// プロフィール設定・編集画面\n// 既存デザインシステム準拠・ユーザビリティ重視\n\nimport React, { useState, useEffect } from 'react'\nimport { useAuth } from '../../hooks/useAuth'\nimport type { Profile } from '../../lib/database.types'\n\ninterface ProfileSetupProps {\n  isOpen: boolean\n  onClose: () => void\n  mode?: 'setup' | 'edit'\n  title?: string\n}\n\nconst ProfileSetup: React.FC<ProfileSetupProps> = ({ \n  isOpen, \n  onClose, \n  mode = 'setup',\n  title\n}) => {\n  const { profile, updateProfile, checkUsernameAvailable, loading, error, clearError } = useAuth()\n  \n  const [formData, setFormData] = useState({\n    username: '',\n    displayName: '',\n    bio: '',\n    language: 'ja'\n  })\n  \n  const [validationErrors, setValidationErrors] = useState<Record<string, string>>({})\n  const [usernameChecking, setUsernameChecking] = useState(false)\n  const [usernameAvailable, setUsernameAvailable] = useState<boolean | null>(null)\n  const [hasChanges, setHasChanges] = useState(false)\n\n  // 既存プロフィールデータの読み込み\n  useEffect(() => {\n    if (profile && isOpen) {\n      setFormData({\n        username: profile.username || '',\n        displayName: profile.display_name || '',\n        bio: profile.bio || '',\n        language: profile.language || 'ja'\n      })\n      setUsernameAvailable(null)\n      setHasChanges(false)\n    }\n  }, [profile, isOpen])\n\n  // モーダル開閉時のリセット\n  useEffect(() => {\n    if (isOpen) {\n      setValidationErrors({})\n      clearError()\n    } else {\n      setHasChanges(false)\n    }\n  }, [isOpen, clearError])\n\n  // Escキーでモーダルを閉じる（変更がある場合は確認）\n  useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape' && isOpen) {\n        if (hasChanges) {\n          if (window.confirm('変更が保存されていません。閉じてもよろしいですか？')) {\n            onClose()\n          }\n        } else {\n          onClose()\n        }\n      }\n    }\n    \n    if (isOpen) {\n      document.addEventListener('keydown', handleEscape)\n      document.body.style.overflow = 'hidden'\n    }\n    \n    return () => {\n      document.removeEventListener('keydown', handleEscape)\n      document.body.style.overflow = 'unset'\n    }\n  }, [isOpen, hasChanges, onClose])\n\n  // ユーザー名の可用性チェック（デバウンス）\n  useEffect(() => {\n    if (!formData.username || formData.username === profile?.username) {\n      setUsernameAvailable(null)\n      return\n    }\n\n    const timeoutId = setTimeout(async () => {\n      if (formData.username.length >= 3) {\n        setUsernameChecking(true)\n        try {\n          const available = await checkUsernameAvailable(formData.username)\n          setUsernameAvailable(available)\n        } catch (error) {\n          console.error('Username check error:', error)\n          setUsernameAvailable(null)\n        } finally {\n          setUsernameChecking(false)\n        }\n      }\n    }, 500)\n\n    return () => clearTimeout(timeoutId)\n  }, [formData.username, profile?.username, checkUsernameAvailable])\n\n  // バリデーション\n  const validateForm = (): boolean => {\n    const errors: Record<string, string> = {}\n    \n    if (!formData.username.trim()) {\n      errors.username = 'ユーザー名を入力してください'\n    } else if (formData.username.length < 3) {\n      errors.username = 'ユーザー名は3文字以上である必要があります'\n    } else if (formData.username.length > 20) {\n      errors.username = 'ユーザー名は20文字以下である必要があります'\n    } else if (!/^[a-zA-Z0-9_]+$/.test(formData.username)) {\n      errors.username = 'ユーザー名は英数字とアンダースコアのみ使用できます'\n    } else if (formData.username !== profile?.username && usernameAvailable === false) {\n      errors.username = 'このユーザー名は既に使用されています'\n    }\n    \n    if (formData.displayName.length > 50) {\n      errors.displayName = '表示名は50文字以下である必要があります'\n    }\n    \n    if (formData.bio.length > 160) {\n      errors.bio = '自己紹介は160文字以下である必要があります'\n    }\n    \n    setValidationErrors(errors)\n    return Object.keys(errors).length === 0\n  }\n\n  // フォーム送信処理\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!validateForm()) return\n    \n    try {\n      const updates: Partial<Profile> = {\n        username: formData.username.trim(),\n        display_name: formData.displayName.trim() || formData.username.trim(),\n        bio: formData.bio.trim() || null,\n        language: formData.language\n      }\n      \n      await updateProfile(updates)\n      setHasChanges(false)\n      onClose()\n    } catch (error) {\n      console.error('Profile update error:', error)\n    }\n  }\n\n  // 入力変更処理\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value } = e.target\n    setFormData(prev => ({ ...prev, [name]: value }))\n    setHasChanges(true)\n    \n    // バリデーションエラーをクリア\n    if (validationErrors[name]) {\n      setValidationErrors(prev => ({ ...prev, [name]: '' }))\n    }\n  }\n\n  // 文字数カウンター\n  const CharacterCounter: React.FC<{ current: number; max: number }> = ({ current, max }) => (\n    <span className={`text-xs ${current > max ? 'text-red-500' : 'text-gray-400'}`}>\n      {current}/{max}\n    </span>\n  )\n\n  // モーダルが閉じている場合は何も表示しない\n  if (!isOpen) return null\n\n  return (\n    <div className=\"fixed inset-0 z-50 overflow-y-auto\">\n      {/* オーバーレイ */}\n      <div \n        className=\"fixed inset-0 bg-black bg-opacity-50 transition-opacity\"\n        onClick={() => {\n          if (hasChanges) {\n            if (window.confirm('変更が保存されていません。閉じてもよろしいですか？')) {\n              onClose()\n            }\n          } else {\n            onClose()\n          }\n        }}\n      />\n      \n      {/* モーダル本体 */}\n      <div className=\"flex min-h-full items-center justify-center p-4\">\n        <div \n          className=\"relative bg-white rounded-2xl shadow-2xl w-full max-w-lg p-6 transform transition-all\"\n          onClick={(e) => e.stopPropagation()}\n        >\n          {/* 閉じるボタン */}\n          <button\n            onClick={() => {\n              if (hasChanges) {\n                if (window.confirm('変更が保存されていません。閉じてもよろしいですか？')) {\n                  onClose()\n                }\n              } else {\n                onClose()\n              }\n            }}\n            className=\"absolute top-4 right-4 text-gray-400 hover:text-gray-600 transition-colors\"\n            disabled={loading}\n          >\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n\n          {/* ヘッダー */}\n          <div className=\"text-center mb-6\">\n            <div className=\"w-16 h-16 mx-auto mb-4 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center\">\n              <span className=\"text-2xl\">👤</span>\n            </div>\n            <h2 className=\"text-2xl font-bold text-gray-900\">\n              {title || (mode === 'setup' ? 'プロフィール設定' : 'プロフィール編集')}\n            </h2>\n            <p className=\"text-gray-600 mt-2\">\n              {mode === 'setup' \n                ? 'あなたのプロフィールを設定しましょう' \n                : 'プロフィール情報を更新できます'\n              }\n            </p>\n          </div>\n\n          {/* エラーメッセージ */}\n          {error && (\n            <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-xl text-red-700 text-sm\">\n              {error}\n            </div>\n          )}\n\n          {/* 変更警告 */}\n          {hasChanges && (\n            <div className=\"mb-4 p-3 bg-amber-50 border border-amber-200 rounded-xl text-amber-700 text-sm\">\n              💡 変更が未保存です。「保存」ボタンを押してください。\n            </div>\n          )}\n\n          {/* フォーム */}\n          <form onSubmit={handleSubmit} className=\"space-y-5\">\n            {/* ユーザー名 */}\n            <div>\n              <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                ユーザー名 <span className=\"text-red-500\">*</span>\n              </label>\n              <div className=\"relative\">\n                <input\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  value={formData.username}\n                  onChange={handleInputChange}\n                  className={`w-full px-4 py-3 pr-12 border rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors ${\n                    validationErrors.username ? 'border-red-300 bg-red-50' : \n                    usernameAvailable === true ? 'border-green-300 bg-green-50' :\n                    usernameAvailable === false ? 'border-red-300 bg-red-50' :\n                    'border-gray-300'\n                  }`}\n                  placeholder=\"半角英数字とアンダースコア\"\n                  disabled={loading}\n                />\n                {/* ユーザー名チェック状態表示 */}\n                <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n                  {usernameChecking ? (\n                    <svg className=\"animate-spin h-5 w-5 text-blue-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                  ) : usernameAvailable === true ? (\n                    <span className=\"text-green-500\">✓</span>\n                  ) : usernameAvailable === false ? (\n                    <span className=\"text-red-500\">×</span>\n                  ) : null}\n                </div>\n              </div>\n              {validationErrors.username && (\n                <p className=\"mt-1 text-sm text-red-600\">{validationErrors.username}</p>\n              )}\n              {!validationErrors.username && usernameAvailable === true && formData.username !== profile?.username && (\n                <p className=\"mt-1 text-sm text-green-600\">このユーザー名は使用できます</p>\n              )}\n              <p className=\"mt-1 text-xs text-gray-500\">\n                3-20文字、半角英数字とアンダースコア（_）のみ使用可能\n              </p>\n            </div>\n\n            {/* 表示名 */}\n            <div>\n              <label htmlFor=\"displayName\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                表示名\n              </label>\n              <div className=\"relative\">\n                <input\n                  type=\"text\"\n                  id=\"displayName\"\n                  name=\"displayName\"\n                  value={formData.displayName}\n                  onChange={handleInputChange}\n                  className={`w-full px-4 py-3 border rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors ${\n                    validationErrors.displayName ? 'border-red-300 bg-red-50' : 'border-gray-300'\n                  }`}\n                  placeholder=\"みんなに表示される名前\"\n                  disabled={loading}\n                />\n                <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n                  <CharacterCounter current={formData.displayName.length} max={50} />\n                </div>\n              </div>\n              {validationErrors.displayName && (\n                <p className=\"mt-1 text-sm text-red-600\">{validationErrors.displayName}</p>\n              )}\n              <p className=\"mt-1 text-xs text-gray-500\">\n                空白の場合はユーザー名が表示されます\n              </p>\n            </div>\n\n            {/* 自己紹介 */}\n            <div>\n              <label htmlFor=\"bio\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                自己紹介\n              </label>\n              <div className=\"relative\">\n                <textarea\n                  id=\"bio\"\n                  name=\"bio\"\n                  value={formData.bio}\n                  onChange={handleInputChange}\n                  rows={3}\n                  className={`w-full px-4 py-3 border rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors resize-none ${\n                    validationErrors.bio ? 'border-red-300 bg-red-50' : 'border-gray-300'\n                  }`}\n                  placeholder=\"あなたについて教えてください...\"\n                  disabled={loading}\n                />\n                <div className=\"absolute right-3 bottom-3\">\n                  <CharacterCounter current={formData.bio.length} max={160} />\n                </div>\n              </div>\n              {validationErrors.bio && (\n                <p className=\"mt-1 text-sm text-red-600\">{validationErrors.bio}</p>\n              )}\n            </div>\n\n            {/* 言語設定 */}\n            <div>\n              <label htmlFor=\"language\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                言語設定\n              </label>\n              <select\n                id=\"language\"\n                name=\"language\"\n                value={formData.language}\n                onChange={handleInputChange}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                disabled={loading}\n              >\n                <option value=\"ja\">日本語</option>\n                <option value=\"en\">English</option>\n                <option value=\"ko\">한국어</option>\n                <option value=\"zh\">中文</option>\n                <option value=\"fr\">Français</option>\n                <option value=\"de\">Deutsch</option>\n                <option value=\"es\">Español</option>\n                <option value=\"it\">Italiano</option>\n                <option value=\"pt\">Português</option>\n              </select>\n            </div>\n\n            {/* ボタン */}\n            <div className=\"flex gap-3 pt-4\">\n              {mode === 'edit' && (\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (hasChanges) {\n                      if (window.confirm('変更が保存されていません。閉じてもよろしいですか？')) {\n                        onClose()\n                      }\n                    } else {\n                      onClose()\n                    }\n                  }}\n                  className=\"flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-xl font-medium hover:bg-gray-50 focus:ring-4 focus:ring-gray-200 transition-all\"\n                  disabled={loading}\n                >\n                  キャンセル\n                </button>\n              )}\n              \n              <button\n                type=\"submit\"\n                disabled={loading || !hasChanges || Object.keys(validationErrors).length > 0}\n                className={`${mode === 'edit' ? 'flex-1' : 'w-full'} bg-gradient-to-r from-blue-500 to-purple-600 text-white py-3 rounded-xl font-semibold hover:from-blue-600 hover:to-purple-700 focus:ring-4 focus:ring-blue-200 transition-all disabled:opacity-50 disabled:cursor-not-allowed`}\n              >\n                {loading ? (\n                  <span className=\"flex items-center justify-center\">\n                    <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                    保存中...\n                  </span>\n                ) : (\n                  '保存'\n                )}\n              </button>\n            </div>\n          </form>\n\n          {/* プロフィールプレビュー */}\n          {mode === 'edit' && (\n            <div className=\"mt-6 p-4 bg-gray-50 rounded-xl\">\n              <h3 className=\"text-sm font-medium text-gray-700 mb-2\">プレビュー</h3>\n              <div className=\"flex items-start space-x-3\">\n                <div className=\"w-10 h-10 bg-gradient-to-r from-pink-500 to-purple-600 rounded-full flex items-center justify-center\">\n                  <span className=\"text-white font-semibold\">\n                    {(formData.displayName || formData.username).charAt(0).toUpperCase()}\n                  </span>\n                </div>\n                <div className=\"flex-1\">\n                  <h4 className=\"font-semibold text-gray-900\">\n                    {formData.displayName || formData.username}\n                  </h4>\n                  <p className=\"text-sm text-gray-500\">@{formData.username}</p>\n                  {formData.bio && (\n                    <p className=\"text-sm text-gray-700 mt-1\">{formData.bio}</p>\n                  )}\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileSetup"],"names":["ProfileSetup","isOpen","onClose","mode","title","profile","updateProfile","checkUsernameAvailable","loading","error","clearError","useAuth","formData","setFormData","useState","validationErrors","setValidationErrors","usernameChecking","setUsernameChecking","usernameAvailable","setUsernameAvailable","hasChanges","setHasChanges","useEffect","handleEscape","e","timeoutId","available","validateForm","errors","handleSubmit","updates","handleInputChange","name","value","prev","CharacterCounter","current","max","jsxs","jsx"],"mappings":"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"}