{"version":3,"file":"JumpAdventureGame-1aefd93a.js","sources":["../../src/game-engine/JumpAdventureGame.ts"],"sourcesContent":["// JumpAdventureGame.ts\n// Drop-in short game template (PixiJS + TypeScript)\n// Register under key 'jump_adventure' in your factory/registry.\n//\n// Gameplay:\n// - Auto-runner. Obstacles approach from the right.\n// - Tap to jump. Hold to jump higher (limited boost time).\n// - Avoid obstacles until the timer ends to clear.\n//\n// Project compatibility notes:\n// - Do NOT narrow base types; import GameTemplate & GameSettings only.\n// - Do NOT redeclare base fields like duration/difficulty/timerText.\n// - Use an internal `finished` flag (avoid relying on a specific GameState union).\n// - Emit results via `onGameEnd(success, score)`.\n\nimport { Application, Container, Graphics, FederatedPointerEvent } from 'pixi.js';\nimport { GameTemplate, type GameSettings } from './GameTemplate';\n\nexport type Difficulty = 'easy' | 'normal' | 'hard';\n\nexport interface JumpAdventureSettings extends GameSettings {\n  spawnBaseMs?: number;     // base ms between obstacles (default by difficulty)\n  speedPxPerSec?: number;   // world scroll speed (default by difficulty)\n  gravity?: number;         // px/s^2\n  jumpVel?: number;         // initial jump velocity (px/s upward, positive number)\n  holdBoostMs?: number;     // max ms of additional upward acceleration while holding\n  allowDouble?: boolean;    // allow a single double-jump midair\n  palette?: 'dawn' | 'forest' | 'night';\n}\n\n// ---- helpers ----\nfunction isDifficulty(v: unknown): v is Difficulty {\n  return v === 'easy' || v === 'normal' || v === 'hard';\n}\nfunction getDifficulty(settings: GameSettings): Difficulty {\n  const d = (settings as any).difficulty;\n  return isDifficulty(d) ? d : 'normal';\n}\nfunction secondsToMs(s: number | undefined, fallbackMs: number) {\n  if (typeof s === 'number' && isFinite(s)) return Math.max(1000, Math.round(s * 1000));\n  return fallbackMs;\n}\nfunction clamp(x: number, lo: number, hi: number) { return Math.max(lo, Math.min(hi, x)); }\n\ntype Obstacle = {\n  g: Graphics;\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  vx: number; // leftward px/s\n};\n\nexport class JumpAdventureGame extends GameTemplate {\n  public onGameEnd?: (success: boolean, score: number) => void;\n\n  private scene = new Container();\n  private finished = false;\n  private remainMs = 30_000;\n\n  // world\n  private groundY = 0;\n  private worldSpeed = 320; // px/s\n  private spawnBaseMs = 780;\n  private spawnAccum = 0;\n\n  // player\n  private player!: Graphics;\n  private px = 0;\n  private py = 0;\n  private pw = 50;\n  private ph = 58;\n  private vy = 0;\n  private gravity = 1600;\n  private jumpVel = 620;\n  private holdBoostMs = 140;\n  private holdRemain = 0;\n  private holding = false;\n  private onGround = true;\n  private allowDouble = false;\n  private hasDouble = true;\n\n  // obstacles\n  private obstacles: Obstacle[] = [];\n\n  // difficulty\n  private speedMul = 1.0;\n  private sizeMul = 1.0;\n\n  // scoring\n  private passed = 0;\n  private score = 0;\n\n  // palette\n  private colors = {\n    bgTop: 0x87ceeb, bgBottom: 0x1f7aa8,\n    ground: 0x0f1b2d,\n    deco: 0xffffff,\n    player: 0xffffff,\n    obstacle: 0xf97316,\n    good: 0x92e6a7, bad: 0xff5a5a,\n  };\n\n  constructor(app: Application, settings: JumpAdventureSettings) {\n    super(app, settings);\n  }\n\n  async createScene(): Promise<void> {\n    const s = (this as any).settings as JumpAdventureSettings;\n    const diff = getDifficulty(s);\n    const W = this.app.renderer.width, H = this.app.renderer.height;\n\n    // duration\n    this.remainMs = secondsToMs((s as any).duration as number, 30_000);\n\n    // difficulty presets\n    if (diff === 'easy') {\n      this.worldSpeed = 300; this.spawnBaseMs = 860;\n      this.gravity = 1500; this.jumpVel = 600; this.holdBoostMs = 170;\n      this.speedMul = 0.95; this.sizeMul = 0.95; this.allowDouble = true;\n    } else if (diff === 'hard') {\n      this.worldSpeed = 360; this.spawnBaseMs = 680;\n      this.gravity = 1700; this.jumpVel = 650; this.holdBoostMs = 120;\n      this.speedMul = 1.1; this.sizeMul = 1.1; this.allowDouble = false;\n    } else {\n      this.worldSpeed = 330; this.spawnBaseMs = 760;\n      this.gravity = 1600; this.jumpVel = 620; this.holdBoostMs = 140;\n      this.speedMul = 1.0; this.sizeMul = 1.0; this.allowDouble = true;\n    }\n\n    // overrides\n    if (typeof s.speedPxPerSec === 'number' && isFinite(s.speedPxPerSec)) this.worldSpeed = clamp(Math.round(s.speedPxPerSec), 180, 520);\n    if (typeof s.spawnBaseMs === 'number' && isFinite(s.spawnBaseMs)) this.spawnBaseMs = clamp(Math.round(s.spawnBaseMs), 220, 2000);\n    if (typeof s.gravity === 'number' && isFinite(s.gravity)) this.gravity = clamp(s.gravity, 800, 2600);\n    if (typeof s.jumpVel === 'number' && isFinite(s.jumpVel)) this.jumpVel = clamp(s.jumpVel, 380, 980);\n    if (typeof s.holdBoostMs === 'number' && isFinite(s.holdBoostMs)) this.holdBoostMs = clamp(Math.round(s.holdBoostMs), 60, 400);\n    if (typeof s.allowDouble === 'boolean') this.allowDouble = s.allowDouble;\n\n    if (s.palette === 'night') {\n      this.colors.bgTop = 0x0b1020; this.colors.bgBottom = 0x151a2b; this.colors.ground = 0x101522; this.colors.deco = 0x94a3b8;\n    } else if (s.palette === 'forest') {\n      this.colors.bgTop = 0x14532d; this.colors.bgBottom = 0x052e16; this.colors.ground = 0x0b2e20; this.colors.obstacle = 0x34d399;\n    } else if (s.palette === 'dawn') {\n      this.colors.bgTop = 0xffd6a5; this.colors.bgBottom = 0xf15bb5; this.colors.ground = 0x5a2a00; this.colors.obstacle = 0xff8787;\n    }\n\n    // layout\n    this.groundY = Math.floor(H * 0.78);\n    this.pw = Math.min(70, Math.floor(W * 0.09));\n    this.ph = Math.floor(this.pw * 1.1);\n    this.px = Math.floor(W * 0.22);\n    this.py = this.groundY - this.ph / 2;\n    this.vy = 0;\n    this.onGround = true;\n    this.hasDouble = this.allowDouble;\n\n    // background\n    const bg = new Graphics();\n    bg.beginFill(this.colors.bgTop); bg.drawRect(0, 0, W, Math.floor(H * 0.45)); bg.endFill();\n    bg.beginFill(this.colors.bgBottom); bg.drawRect(0, Math.floor(H * 0.45), W, H); bg.endFill();\n    this.scene.addChild(bg);\n\n    // ground\n    const ground = new Graphics();\n    ground.beginFill(this.colors.ground, 1);\n    ground.drawRect(0, this.groundY, W, H - this.groundY);\n    ground.endFill();\n    // decorations\n    for (let i = 0; i < 6; i++) {\n      const d = new Graphics();\n      d.lineStyle(2, this.colors.deco, 0.25);\n      const x = (i + 1) * (W / 7);\n      d.moveTo(x, this.groundY); d.lineTo(x, H);\n      this.scene.addChild(d);\n    }\n    this.scene.addChild(ground);\n\n    // player\n    this.player = new Graphics();\n    this.drawPlayer();\n    this.scene.addChild(this.player);\n\n    // input\n    this.scene.eventMode = 'static';\n    this.scene.on('pointerdown', (e: FederatedPointerEvent) => { e.stopPropagation(); this.onDown(); });\n    this.scene.on('pointerup',   (e: FederatedPointerEvent) => { e.stopPropagation(); this.onUp(); });\n    this.scene.on('pointerupoutside', (e: FederatedPointerEvent) => { e.stopPropagation(); this.onUp(); });\n\n    this.container.addChild(this.scene);\n  }\n\n  handleInput(_event: FederatedPointerEvent): void {\n    // not used\n  }\n\n  updateGame(deltaTime: number): void {\n    if (this.finished) return;\n\n    const dtMs = deltaTime * (1000 / 60);\n    const dt = dtMs / 1000;\n    const H = this.app.renderer.height;\n\n    // time\n    this.remainMs -= dtMs;\n    if (this.remainMs <= 0) {\n      this.remainMs = 0;\n      this.finish(true);\n      return;\n    }\n\n    // spawn obstacles\n    this.spawnAccum += dtMs;\n    const interval = this.spawnBaseMs / this.speedMul;\n    while (this.spawnAccum >= interval) {\n      this.spawnAccum -= interval;\n      this.spawnObstacle();\n      // ramp a touch\n      this.speedMul = Math.min(1.5, this.speedMul * 1.01);\n    }\n\n    // player physics\n    // hold boost: gentle upward acceleration while holding & holdRemain > 0\n    if (this.holding && this.holdRemain > 0) {\n      const boost = Math.min(this.holdRemain, dtMs);\n      this.vy -= (this.gravity * 0.5) * (boost / 1000); // counteract gravity partially\n      this.holdRemain -= boost;\n    }\n\n    // apply gravity\n    this.vy += this.gravity * dt;\n    this.py += this.vy * dt;\n\n    // ground collision\n    const footY = this.py + this.ph / 2;\n    if (footY >= this.groundY) {\n      this.py = this.groundY - this.ph / 2;\n      this.vy = 0;\n      if (!this.onGround) {\n        this.onGround = true;\n        this.hasDouble = this.allowDouble; // refresh double on landing\n      }\n    } else {\n      this.onGround = false;\n    }\n\n    // update player graphic\n    this.drawPlayer();\n\n    // update obstacles\n    const survivors: Obstacle[] = [];\n    for (const o of this.obstacles) {\n      o.x -= this.worldSpeed * this.speedMul * dt;\n      o.g.x = o.x;\n      // AABB vs player\n      if (this.intersectAABB(\n        this.px - this.pw/2, this.py - this.ph/2, this.pw, this.ph,\n        o.x - o.w/2, o.y - o.h/2, o.w, o.h\n      )) {\n        this.finish(false);\n        return;\n      }\n      // passed?\n      if (o.x + o.w/2 < this.px - this.pw/2 && !(o as any).__counted) {\n        (o as any).__counted = true;\n        this.passed++;\n        this.score += 30;\n      }\n      // offscreen\n      if (o.x + o.w/2 > -20) survivors.push(o);\n      else this.scene.removeChild(o.g);\n    }\n    this.obstacles = survivors;\n  }\n\n  protected showResult(result: { success: boolean; score: number }): void {\n    this.onGameEnd?.(result.success, result.score);\n  }\n\n  // ---- internals ----\n  private drawPlayer() {\n    const g = this.player;\n    g.clear();\n    // body\n    g.beginFill(this.colors.player, 0.95);\n    g.drawRoundedRect(this.px - this.pw/2, this.py - this.ph/2, this.pw, this.ph, 12);\n    g.endFill();\n    // simple \"eye\"\n    g.beginFill(0x111111, 0.9);\n    g.drawCircle(this.px + this.pw*0.18, this.py - this.ph*0.15, Math.max(2, Math.floor(this.pw*0.07)));\n    g.endFill();\n  }\n\n  private tryJump() {\n    if (this.onGround) {\n      this.vy = -this.jumpVel;\n      this.holdRemain = this.holdBoostMs;\n      this.onGround = false;\n    } else if (this.allowDouble && this.hasDouble) {\n      // double jump\n      this.vy = -this.jumpVel * 0.9;\n      this.holdRemain = Math.floor(this.holdBoostMs * 0.6);\n      this.hasDouble = false;\n    }\n  }\n\n  private onDown() {\n    if (this.finished) return;\n    this.holding = true;\n    this.tryJump();\n  }\n\n  private onUp() {\n    if (this.finished) return;\n    this.holding = false;\n    this.holdRemain = 0; // stop boost early for variable height\n  }\n\n  private spawnObstacle() {\n    const W = this.app.renderer.width;\n    // obstacle types: low hurdle, tall block, stacked smalls\n    const t = Math.random();\n    const baseH = Math.max(24, Math.floor(this.ph * (0.5 + Math.random() * 0.9) * this.sizeMul));\n    const baseW = Math.max(24, Math.floor(this.pw * (0.8 + Math.random() * 0.9) * this.sizeMul));\n\n    const h = clamp(baseH, 20, this.ph * 1.4);\n    const w = clamp(baseW, 24, this.pw * 1.6);\n\n    const g = new Graphics();\n    g.beginFill(this.colors.obstacle, 0.95);\n    let x = W + w/2 + 10;\n    let y = this.groundY - h/2;\n\n    if (t > 0.7) {\n      // stacked double smalls (creates a tricky high jump)\n      const h2 = Math.floor(h * 0.6);\n      const w2 = Math.floor(w * 0.8);\n      // bottom\n      g.drawRoundedRect(-w/2, -h/2, w, h, 8);\n      // top small\n      g.drawRoundedRect(-w2/2, -h/2 - h2 - 6, w2, h2, 8);\n      y = this.groundY - (h + h2 + 6)/2;\n    } else {\n      g.drawRoundedRect(-w/2, -h/2, w, h, 8);\n    }\n\n    g.x = x; g.y = y;\n    this.scene.addChild(g);\n\n    this.obstacles.push({ g, x, y, w, h, vx: -this.worldSpeed });\n  }\n\n  private intersectAABB(ax: number, ay: number, aw: number, ah: number, bx: number, by: number, bw: number, bh: number) {\n    return ax < bx + bw && ax + aw > bx && ay < by + bh && ay + ah > by;\n  }\n\n  private finish(success: boolean) {\n    if (this.finished) return;\n    this.finished = true;\n    const timeBonus = Math.round(this.remainMs / 8);\n    const passBonus = this.passed * 25;\n    const score = Math.max(0, this.score + timeBonus + passBonus + (success ? 800 : 0));\n    this.onGameEnd?.(success, score);\n  }\n}\n"],"names":["isDifficulty","v","getDifficulty","settings","d","secondsToMs","s","fallbackMs","clamp","x","lo","hi","JumpAdventureGame","GameTemplate","app","__publicField","Container","diff","W","H","bg","Graphics","ground","i","e","_event","deltaTime","dtMs","dt","interval","boost","survivors","o","result","_a","g","t","baseH","baseW","h","w","y","h2","w2","ax","ay","aw","ah","bx","by","bw","bh","success","timeBonus","passBonus","score"],"mappings":"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"}