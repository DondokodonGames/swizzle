{"version":3,"file":"SpeedFriendGame-60f38a5f.js","sources":["../../src/game-engine/SpeedFriendGame.ts"],"sourcesContent":["// SpeedFriendGame.ts\n// Drop-in short game template (PixiJS + TypeScript)\n// Register under key 'speed_friend' in your factory/registry.\n//\n// Gameplay:\n// - Quick-fire quiz. A short question is shown with multiple choices.\n// - Tap the correct answer before the per-question timer ends.\n// - Reach target number of correct answers before overall time runs out to clear.\n//\n// Project compatibility notes:\n// - Do NOT narrow base types; import GameTemplate & GameSettings only.\n// - Do NOT redeclare base fields like duration/difficulty/timerText.\n// - Use an internal `finished` flag (avoid relying on a specific GameState union).\n// - Emit results via `onGameEnd(success, score)`.\nimport { Application, Container, Graphics, Text, FederatedPointerEvent } from 'pixi.js';\nimport { GameTemplate, type GameSettings } from './GameTemplate';\n\nexport type Difficulty = 'easy' | 'normal' | 'hard';\n\nexport interface SpeedFriendSettings extends GameSettings {\n  options?: number;        // options per question (defaults: easy=3, normal=4, hard=5)\n  targetCorrect?: number;  // required correct answers to clear (defaults: 8/10/12)\n  questionTimeMs?: number; // per-question time limit\n  missesAllowed?: number;  // number of misses allowed before fail\n  palette?: 'classic' | 'forest' | 'sunset';\n}\n\n// ---- helpers ----\nfunction isDifficulty(v: unknown): v is Difficulty { return v === 'easy' || v === 'normal' || v === 'hard'; }\nfunction getDifficulty(settings: GameSettings): Difficulty {\n  const d = (settings as any).difficulty;\n  return isDifficulty(d) ? d : 'normal';\n}\nfunction secondsToMs(s: number | undefined, fallbackMs: number) {\n  if (typeof s === 'number' && isFinite(s)) return Math.max(1000, Math.round(s * 1000));\n  return fallbackMs;\n}\nfunction clamp(x: number, lo: number, hi: number) { return Math.max(lo, Math.min(hi, x)); }\nfunction shuffle<T>(arr: T[]) { for (let i = arr.length - 1; i > 0; i--) { const j = (Math.random() * (i + 1)) | 0; [arr[i], arr[j]] = [arr[j], arr[i]]; } return arr; }\nfunction uniqPush(arr: number[], v: number) { if (!arr.includes(v)) arr.push(v); }\n\ntype Tile = { root: Container; bg: Graphics; label: Text; index: number; };\ntype Q = { prompt: string; options: string[]; correct: number };\n\nexport class SpeedFriendGame extends GameTemplate {\n  public onGameEnd?: (success: boolean, score: number) => void;\n\n  private scene = new Container();\n  private finished = false;\n  private remainMs = 30_000;\n\n  // UI\n  private promptText!: Text;\n  private infoText!: Text;\n  private tiles: Tile[] = [];\n  private timeBar!: Graphics;\n\n  // layout\n  private cols = 2;\n  private rows = 2;\n  private tileW = 220;\n  private tileH = 120;\n  private gapX = 18;\n  private gapY = 16;\n\n  // runtime\n  private optionsCount = 4;\n  private targetCorrect = 10;\n  private missesAllowed = 3;\n  private correctSoFar = 0;\n  private misses = 0;\n  private questionTimeMs = 3000;\n  private questionRemain = 3000;\n  private awaiting = false;\n  private currentQ!: Q;\n  private score = 0;\n  private combo = 0;\n\n  // colors\n  private colors = {\n    bgTop: 0x0b1020, bgBottom: 0x151a2b,\n    tile: 0xffffff, tileText: 0x1b1b1b,\n    good: 0x92e6a7, bad: 0xff5a5a,\n    text: 0xffffff,\n    barBack: 0x374151, barFill: 0x3b82f6,\n  };\n\n  constructor(app: Application, settings: SpeedFriendSettings) {\n    super(app, settings);\n  }\n\n  async createScene(): Promise<void> {\n    const s = (this as any).settings as SpeedFriendSettings;\n    const diff = getDifficulty(s);\n    const W = this.app.renderer.width, H = this.app.renderer.height;\n\n    // duration\n    this.remainMs = secondsToMs((s as any).duration as number, 30_000);\n\n    // difficulty presets\n    if (diff === 'easy')       { this.optionsCount = 3; this.targetCorrect = 8;  this.missesAllowed = 4; this.questionTimeMs = 3600; }\n    else if (diff === 'hard')  { this.optionsCount = 5; this.targetCorrect = 12; this.missesAllowed = 2; this.questionTimeMs = 2600; }\n    else                       { this.optionsCount = 4; this.targetCorrect = 10; this.missesAllowed = 3; this.questionTimeMs = 3000; }\n\n    // overrides\n    if (typeof s.options === 'number' && isFinite(s.options)) this.optionsCount = clamp(Math.round(s.options), 3, 5);\n    if (typeof s.targetCorrect === 'number' && isFinite(s.targetCorrect)) this.targetCorrect = clamp(Math.round(s.targetCorrect), 4, 30);\n    if (typeof s.missesAllowed === 'number' && isFinite(s.missesAllowed)) this.missesAllowed = clamp(Math.round(s.missesAllowed), 0, 10);\n    if (typeof s.questionTimeMs === 'number' && isFinite(s.questionTimeMs)) this.questionTimeMs = clamp(Math.round(s.questionTimeMs), 800, 6000);\n\n    if (s.palette === 'forest') {\n      this.colors.bgTop = 0x0b2e20; this.colors.bgBottom = 0x03150f; this.colors.barFill = 0x34d399;\n    } else if (s.palette === 'sunset') {\n      this.colors.bgTop = 0x301934; this.colors.bgBottom = 0x1a0b1e; this.colors.barFill = 0xff6b6b;\n    }\n\n    // background\n    const bg = new Graphics();\n    bg.beginFill(this.colors.bgTop); bg.drawRect(0, 0, W, Math.floor(H * 0.45)); bg.endFill();\n    bg.beginFill(this.colors.bgBottom); bg.drawRect(0, Math.floor(H * 0.45), W, H); bg.endFill();\n    this.scene.addChild(bg);\n\n    // info\n    this.infoText = new Text('', {\n      fontFamily: 'sans-serif', fontSize: Math.floor(Math.min(W, H) * 0.05),\n      fill: this.colors.text, stroke: 0x000000, strokeThickness: 5,\n    });\n    this.infoText.anchor.set(0.5);\n    this.infoText.x = W / 2; this.infoText.y = Math.floor(H * 0.20);\n    this.scene.addChild(this.infoText);\n    this.updateInfo();\n\n    // prompt\n    this.promptText = new Text('Ready?', {\n      fontFamily: 'sans-serif', fontSize: Math.floor(Math.min(W, H) * 0.09),\n      fill: this.colors.text, stroke: 0x000000, strokeThickness: 6,\n    });\n    this.promptText.anchor.set(0.5);\n    this.promptText.x = W / 2; this.promptText.y = Math.floor(H * 0.35);\n    this.scene.addChild(this.promptText);\n\n    // time bar\n    this.timeBar = new Graphics();\n    this.scene.addChild(this.timeBar);\n\n    // grid layout\n    this.cols = Math.ceil(Math.sqrt(this.optionsCount));\n    this.rows = Math.ceil(this.optionsCount / this.cols);\n    const usableW = W - 80;\n    const usableH = H - Math.floor(H * 0.48) - 40;\n    this.tileW = Math.min(240, Math.floor(usableW / this.cols) - 16);\n    this.tileH = Math.min(140, Math.floor(usableH / this.rows) - 16);\n    this.gapX = Math.max(12, Math.floor((usableW - this.cols * this.tileW) / (this.cols + 1)));\n    this.gapY = Math.max(10, Math.floor((usableH - this.rows * this.tileH) / (this.rows + 1)));\n\n    const startY = Math.floor(H * 0.48);\n    const startX = (W - (this.cols * this.tileW + (this.cols - 1) * this.gapX)) / 2 + this.tileW / 2;\n\n    // tiles\n    for (let i = 0; i < this.optionsCount; i++) {\n      const root = new Container();\n      const bgTile = new Graphics();\n      bgTile.beginFill(this.colors.tile, 0.96);\n      bgTile.drawRoundedRect(-this.tileW/2, -this.tileH/2, this.tileW, this.tileH, 16);\n      bgTile.endFill();\n      const label = new Text('', { fontFamily: 'sans-serif', fontSize: Math.floor(this.tileH * 0.34), fill: this.colors.tileText });\n      label.anchor.set(0.5);\n      root.addChild(bgTile, label);\n      root.eventMode = 'static';\n      const idx = i;\n      root.on('pointertap', (e: FederatedPointerEvent) => { e.stopPropagation(); this.onTap(idx); });\n\n      const c = i % this.cols; const r = Math.floor(i / this.cols);\n      root.x = startX + c * (this.tileW + this.gapX);\n      root.y = startY + r * (this.tileH + this.gapY);\n\n      this.scene.addChild(root);\n      this.tiles.push({ root, bg: bgTile, label, index: idx });\n    }\n\n    this.container.addChild(this.scene);\n\n    // start first question\n    this.nextQuestion(true);\n  }\n\n  handleInput(_e: FederatedPointerEvent): void {\n    // not used\n  }\n\n  updateGame(deltaTime: number): void {\n    if (this.finished) return;\n    const dtMs = deltaTime * (1000 / 60);\n\n    // overall time\n    this.remainMs -= dtMs;\n    if (this.remainMs <= 0) {\n      this.remainMs = 0;\n      this.finish(this.correctSoFar >= this.targetCorrect);\n      return;\n    }\n\n    if (this.awaiting) {\n      this.questionRemain -= dtMs;\n      this.drawTimeBar();\n      if (this.questionRemain <= 0) {\n        this.registerMiss('timeout');\n      }\n    }\n  }\n\n  protected showResult(result: { success: boolean; score: number }): void {\n    this.onGameEnd?.(result.success, result.score);\n  }\n\n  // ---- internals ----\n  private updateInfo() {\n    const remainS = Math.ceil(this.remainMs / 1000);\n    this.infoText.text = `Correct ${this.correctSoFar}/${this.targetCorrect}  Miss ${this.misses}/${this.missesAllowed}  Time ${remainS}s`;\n  }\n\n  private drawTimeBar() {\n    const W = this.app.renderer.width;\n    const y = Math.floor(this.app.renderer.height * 0.44);\n    const w = Math.floor(W * 0.7);\n    const x = Math.floor((W - w) / 2);\n    const h = 10;\n    const frac = clamp(this.questionRemain / this.questionTimeMs, 0, 1);\n    this.timeBar.clear();\n    this.timeBar.beginFill(this.colors.barBack, 0.4); this.timeBar.drawRoundedRect(x, y, w, h, 6); this.timeBar.endFill();\n    this.timeBar.beginFill(this.colors.barFill, 0.95); this.timeBar.drawRoundedRect(x, y, Math.floor(w * frac), h, 6); this.timeBar.endFill();\n  }\n\n  private nextQuestion(first = false) {\n    this.currentQ = this.generateQuestion(this.optionsCount);\n    this.promptText.text = this.currentQ.prompt;\n    for (let i = 0; i < this.tiles.length; i++) {\n      const t = this.tiles[i];\n      const txt = this.currentQ.options[i] ?? '';\n      t.label.text = txt;\n      // reset bg\n      t.bg.clear();\n      t.bg.beginFill(this.colors.tile, 0.96);\n      t.bg.drawRoundedRect(-this.tileW/2, -this.tileH/2, this.tileW, this.tileH, 16);\n      t.bg.endFill();\n    }\n    this.questionRemain = this.questionTimeMs;\n    this.awaiting = true;\n    this.drawTimeBar();\n    if (!first) this.updateInfo();\n  }\n\n  private onTap(idx: number) {\n    if (!this.awaiting || this.finished) return;\n    const correct = (idx === this.currentQ.correct);\n    if (correct) {\n      this.awaiting = false;\n      this.correctSoFar++;\n      this.combo++;\n      const speedFrac = clamp(this.questionRemain / this.questionTimeMs, 0, 1);\n      const base = 300, comboBonus = Math.min(7, this.combo) * 60, speedBonus = Math.round(140 * speedFrac);\n      this.score += base + comboBonus + speedBonus;\n      this.flashTile(this.tiles[idx], this.colors.good);\n      if (this.correctSoFar >= this.targetCorrect) {\n        this.finish(true);\n      } else {\n        setTimeout(() => this.nextQuestion(), 120);\n      }\n    } else {\n      this.registerMiss('wrong', idx);\n    }\n  }\n\n  private registerMiss(_reason: 'wrong' | 'timeout', idx: number | null = null) {\n    if (!this.awaiting || this.finished) return;\n    this.awaiting = false;\n    this.combo = 0;\n    this.misses++;\n    this.score = Math.max(0, this.score - 150);\n    if (idx != null) this.flashTile(this.tiles[idx], this.colors.bad);\n    // briefly mark the correct tile\n    const c = this.tiles[this.currentQ.correct];\n    this.flashTile(c, this.colors.good, 0.18);\n    if (this.misses > this.missesAllowed) {\n      this.finish(false);\n    } else {\n      setTimeout(() => this.nextQuestion(), 200);\n    }\n  }\n\n  private flashTile(tile: Tile, color: number, alpha = 0.28) {\n    const g = new Graphics();\n    g.beginFill(color, alpha);\n    g.drawRoundedRect(-this.tileW/2, -this.tileH/2, this.tileW, this.tileH, 16);\n    g.endFill();\n    g.x = tile.root.x; g.y = tile.root.y;\n    this.scene.addChild(g);\n    const steps = 8;\n    for (let i = 1; i <= steps; i++) {\n      setTimeout(() => { g.alpha = Math.max(0, alpha * (1 - i/steps)); if (i === steps) this.scene.removeChild(g); }, i * 30);\n    }\n  }\n\n  // Question generator: basic numeracy & patterns suitable for quick taps.\n  private generateQuestion(nOpts: number): Q {\n    const pick = Math.random();\n    if (pick < 0.22) return this.qAdd(nOpts);\n    if (pick < 0.44) return this.qSub(nOpts);\n    if (pick < 0.62) return this.qMax(nOpts);\n    if (pick < 0.80) return this.qEven(nOpts);\n    return this.qSequence(nOpts);\n  }\n\n  private qAdd(nOpts: number): Q {\n    const a = 2 + ((Math.random() * 8) | 0);\n    const b = 1 + ((Math.random() * 8) | 0);\n    const ans = a + b;\n    const opts: number[] = [ans];\n    while (opts.length < nOpts) {\n      const off = ((Math.random() * 5) | 0) - 2; // -2..+2\n      const v = ans + (off === 0 ? 3 : off);\n      uniqPush(opts, v);\n    }\n    shuffle(opts);\n    return { prompt: `${a} + ${b} = ?`, options: opts.map(String), correct: opts.indexOf(ans) };\n  }\n\n  private qSub(nOpts: number): Q {\n    const a = 6 + ((Math.random() * 10) | 0);\n    const b = 1 + ((Math.random() * Math.min(8, a-1)) | 0);\n    const ans = a - b;\n    const opts: number[] = [ans];\n    while (opts.length < nOpts) {\n      const v = ans + (((Math.random() * 5) | 0) - 2);\n      uniqPush(opts, Math.max(0, v));\n    }\n    shuffle(opts);\n    return { prompt: `${a} - ${b} = ?`, options: opts.map(String), correct: opts.indexOf(ans) };\n  }\n\n  private qMax(nOpts: number): Q {\n    const opts: number[] = [];\n    while (opts.length < nOpts) {\n      const v = 1 + ((Math.random() * 40) | 0);\n      uniqPush(opts, v);\n    }\n    const max = Math.max(...opts);\n    shuffle(opts);\n    return { prompt: `Which is the largest?`, options: opts.map(String), correct: opts.indexOf(max) };\n  }\n\n  private qEven(nOpts: number): Q {\n    const opts: number[] = [];\n    let evenCount = 0;\n    while (opts.length < nOpts) {\n      let v = 1 + ((Math.random() * 40) | 0);\n      if (Math.random() < 0.4) v += v % 2; // sometimes force even\n      uniqPush(opts, v);\n    }\n    for (const v of opts) if (v % 2 === 0) evenCount++;\n    if (evenCount === 0) opts[(Math.random()*opts.length)|0]++; // force at least one even\n    const correctIndex = opts.findIndex(v => v % 2 === 0);\n    return { prompt: `Which number is even?`, options: opts.map(String), correct: correctIndex };\n  }\n\n  private qSequence(nOpts: number): Q {\n    const start = 1 + ((Math.random() * 8) | 0);\n    const step = 1 + ((Math.random() * 5) | 0);\n    const seq = [start, start + step, start + step * 2];\n    const ans = start + step * 3;\n    const opts: number[] = [ans];\n    while (opts.length < nOpts) {\n      const v = ans + (((Math.random() * 6) | 0) - 3);\n      uniqPush(opts, v);\n    }\n    shuffle(opts);\n    return { prompt: `Next: ${seq.join(', ')}, ?`, options: opts.map(String), correct: opts.indexOf(ans) };\n  }\n\n  private finish(success: boolean) {\n    if (this.finished) return;\n    this.finished = true;\n    const timeBonus = Math.round(this.remainMs / 8);\n    const correctBonus = this.correctSoFar * 70;\n    const missPenalty = this.misses * 120;\n    const score = Math.max(0, this.score + timeBonus + correctBonus - missPenalty + (success ? 700 : 0));\n    this.onGameEnd?.(success, score);\n  }\n}\n"],"names":["isDifficulty","v","getDifficulty","settings","d","secondsToMs","s","fallbackMs","clamp","x","lo","hi","shuffle","arr","i","j","uniqPush","SpeedFriendGame","GameTemplate","app","__publicField","Container","diff","W","H","bg","Graphics","Text","usableW","usableH","startY","startX","root","bgTile","label","idx","e","c","r","_e","deltaTime","dtMs","result","_a","remainS","y","w","h","frac","first","t","txt","speedFrac","base","comboBonus","speedBonus","_reason","tile","color","alpha","g","steps","nOpts","pick","a","b","ans","opts","off","max","evenCount","correctIndex","start","step","seq","success","timeBonus","correctBonus","missPenalty","score"],"mappings":"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"}