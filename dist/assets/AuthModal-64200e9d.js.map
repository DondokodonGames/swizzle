{"version":3,"file":"AuthModal-64200e9d.js","sources":["../../src/components/auth/AuthModal.tsx"],"sourcesContent":["// src/components/auth/AuthModal.tsx\n// ログイン・サインアップモーダルUI\n// 既存デザインシステム準拠・COPPA対応\n\nimport React, { useState, useEffect } from 'react'\nimport { useAuth } from '../../hooks/useAuth'\n\ninterface AuthModalProps {\n  isOpen: boolean\n  onClose: () => void\n  defaultMode?: 'signin' | 'signup'\n}\n\ntype AuthMode = 'signin' | 'signup' | 'reset'\n\nconst AuthModal: React.FC<AuthModalProps> = ({ \n  isOpen, \n  onClose, \n  defaultMode = 'signin' \n}) => {\n  const { signIn, signUp, resetPassword, loading, error, clearError } = useAuth()\n  \n  const [mode, setMode] = useState<AuthMode>(defaultMode)\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    username: '',\n    displayName: '',\n    age: '',\n    language: 'ja'\n  })\n  \n  const [validationErrors, setValidationErrors] = useState<Record<string, string>>({})\n  const [showPassword, setShowPassword] = useState(false)\n  const [showParentalWarning, setShowParentalWarning] = useState(false)\n\n  // モーダル開閉時のリセット\n  useEffect(() => {\n    if (isOpen) {\n      setMode(defaultMode)\n      setFormData({\n        email: '',\n        password: '',\n        confirmPassword: '',\n        username: '',\n        displayName: '',\n        age: '',\n        language: 'ja'\n      })\n      setValidationErrors({})\n      clearError()\n    }\n  }, [isOpen, defaultMode, clearError])\n\n  // Escキーでモーダルを閉じる\n  useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape' && isOpen) {\n        onClose()\n      }\n    }\n    \n    if (isOpen) {\n      document.addEventListener('keydown', handleEscape)\n      document.body.style.overflow = 'hidden'\n    }\n    \n    return () => {\n      document.removeEventListener('keydown', handleEscape)\n      document.body.style.overflow = 'unset'\n    }\n  }, [isOpen, onClose])\n\n  // バリデーション\n  const validateForm = (): boolean => {\n    const errors: Record<string, string> = {}\n    \n    if (!formData.email.trim()) {\n      errors.email = 'メールアドレスを入力してください'\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      errors.email = 'メールアドレスの形式が正しくありません'\n    }\n    \n    if (mode !== 'reset') {\n      if (!formData.password.trim()) {\n        errors.password = 'パスワードを入力してください'\n      } else if (formData.password.length < 6) {\n        errors.password = 'パスワードは6文字以上である必要があります'\n      }\n    }\n    \n    if (mode === 'signup') {\n      if (formData.password !== formData.confirmPassword) {\n        errors.confirmPassword = 'パスワードが一致しません'\n      }\n      \n      if (!formData.username.trim()) {\n        errors.username = 'ユーザー名を入力してください'\n      } else if (formData.username.length < 3) {\n        errors.username = 'ユーザー名は3文字以上である必要があります'\n      } else if (!/^[a-zA-Z0-9_]+$/.test(formData.username)) {\n        errors.username = 'ユーザー名は英数字とアンダースコアのみ使用できます'\n      }\n      \n      const age = parseInt(formData.age)\n      if (!formData.age.trim() || isNaN(age)) {\n        errors.age = '年齢を入力してください'\n      } else if (age < 6 || age > 100) {\n        errors.age = '年齢は6歳以上100歳以下で入力してください'\n      }\n    }\n    \n    setValidationErrors(errors)\n    return Object.keys(errors).length === 0\n  }\n\n  // フォーム送信処理\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!validateForm()) return\n    \n    try {\n      if (mode === 'signin') {\n        await signIn(formData.email, formData.password)\n        onClose()\n      } else if (mode === 'signup') {\n        const age = parseInt(formData.age)\n        \n        // 13歳未満の場合は保護者同意の警告を表示\n        if (age < 13 && !showParentalWarning) {\n          setShowParentalWarning(true)\n          return\n        }\n        \n        await signUp(formData.email, formData.password, {\n          username: formData.username,\n          displayName: formData.displayName || formData.username,\n          age,\n          language: formData.language\n        })\n        onClose()\n      } else if (mode === 'reset') {\n        await resetPassword(formData.email)\n        alert('パスワードリセットメールを送信しました。メールをご確認ください。')\n        setMode('signin')\n      }\n    } catch (error) {\n      // エラーはuseAuthで管理されるため、ここでは何もしない\n      console.error('Auth error:', error)\n    }\n  }\n\n  // 入力変更処理\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target\n    setFormData(prev => ({ ...prev, [name]: value }))\n    \n    // バリデーションエラーをクリア\n    if (validationErrors[name]) {\n      setValidationErrors(prev => ({ ...prev, [name]: '' }))\n    }\n  }\n\n  // モーダルが閉じている場合は何も表示しない\n  if (!isOpen) return null\n\n  return (\n    <div className=\"fixed inset-0 z-50 overflow-y-auto\">\n      {/* オーバーレイ */}\n      <div \n        className=\"fixed inset-0 bg-black bg-opacity-50 transition-opacity\"\n        onClick={onClose}\n      />\n      \n      {/* モーダル本体 */}\n      <div className=\"flex min-h-full items-center justify-center p-4\">\n        <div \n          className=\"relative bg-white rounded-2xl shadow-2xl w-full max-w-md p-6 transform transition-all\"\n          onClick={(e) => e.stopPropagation()}\n        >\n          {/* 閉じるボタン */}\n          <button\n            onClick={onClose}\n            className=\"absolute top-4 right-4 text-gray-400 hover:text-gray-600 transition-colors\"\n            disabled={loading}\n          >\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n\n          {/* ヘッダー */}\n          <div className=\"text-center mb-6\">\n            <div className=\"w-16 h-16 mx-auto mb-4 bg-gradient-to-r from-pink-500 to-purple-600 rounded-full flex items-center justify-center\">\n              <span className=\"text-2xl\">🎮</span>\n            </div>\n            <h2 className=\"text-2xl font-bold text-gray-900\">\n              {mode === 'signin' && 'ログイン'}\n              {mode === 'signup' && 'アカウント作成'}\n              {mode === 'reset' && 'パスワードリセット'}\n            </h2>\n            <p className=\"text-gray-600 mt-2\">\n              {mode === 'signin' && 'ゲーム作成を始めましょう！'}\n              {mode === 'signup' && '新しいアカウントを作成'}\n              {mode === 'reset' && 'メールアドレスを入力してください'}\n            </p>\n          </div>\n\n          {/* エラーメッセージ */}\n          {error && (\n            <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-xl text-red-700 text-sm\">\n              {error}\n            </div>\n          )}\n\n          {/* 13歳未満警告 */}\n          {showParentalWarning && (\n            <div className=\"mb-4 p-4 bg-amber-50 border border-amber-200 rounded-xl\">\n              <h3 className=\"font-semibold text-amber-800 mb-2\">⚠️ 保護者の同意について</h3>\n              <p className=\"text-amber-700 text-sm mb-3\">\n                13歳未満のお子様には保護者の同意が必要です。保護者の方と一緒にアカウントを作成してください。\n              </p>\n              <div className=\"flex gap-2\">\n                <button\n                  type=\"button\"\n                  onClick={() => setShowParentalWarning(false)}\n                  className=\"px-3 py-1 bg-white border border-amber-300 text-amber-700 rounded-lg text-sm\"\n                >\n                  キャンセル\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setShowParentalWarning(false)\n                    handleSubmit({ preventDefault: () => {} } as React.FormEvent)\n                  }}\n                  className=\"px-3 py-1 bg-amber-600 text-white rounded-lg text-sm\"\n                >\n                  同意して続ける\n                </button>\n              </div>\n            </div>\n          )}\n\n          {/* フォーム */}\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            {/* メールアドレス */}\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                メールアドレス\n              </label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleInputChange}\n                className={`w-full px-4 py-3 border rounded-xl focus:ring-2 focus:ring-pink-500 focus:border-pink-500 transition-colors ${\n                  validationErrors.email ? 'border-red-300 bg-red-50' : 'border-gray-300'\n                }`}\n                placeholder=\"your@example.com\"\n                disabled={loading}\n              />\n              {validationErrors.email && (\n                <p className=\"mt-1 text-sm text-red-600\">{validationErrors.email}</p>\n              )}\n            </div>\n\n            {/* パスワード */}\n            {mode !== 'reset' && (\n              <div>\n                <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  パスワード\n                </label>\n                <div className=\"relative\">\n                  <input\n                    type={showPassword ? 'text' : 'password'}\n                    id=\"password\"\n                    name=\"password\"\n                    value={formData.password}\n                    onChange={handleInputChange}\n                    className={`w-full px-4 py-3 pr-12 border rounded-xl focus:ring-2 focus:ring-pink-500 focus:border-pink-500 transition-colors ${\n                      validationErrors.password ? 'border-red-300 bg-red-50' : 'border-gray-300'\n                    }`}\n                    placeholder=\"6文字以上\"\n                    disabled={loading}\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowPassword(!showPassword)}\n                    className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n                    disabled={loading}\n                  >\n                    {showPassword ? '🙈' : '👁️'}\n                  </button>\n                </div>\n                {validationErrors.password && (\n                  <p className=\"mt-1 text-sm text-red-600\">{validationErrors.password}</p>\n                )}\n              </div>\n            )}\n\n            {/* サインアップ追加フィールド */}\n            {mode === 'signup' && (\n              <>\n                {/* パスワード確認 */}\n                <div>\n                  <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    パスワード確認\n                  </label>\n                  <input\n                    type={showPassword ? 'text' : 'password'}\n                    id=\"confirmPassword\"\n                    name=\"confirmPassword\"\n                    value={formData.confirmPassword}\n                    onChange={handleInputChange}\n                    className={`w-full px-4 py-3 border rounded-xl focus:ring-2 focus:ring-pink-500 focus:border-pink-500 transition-colors ${\n                      validationErrors.confirmPassword ? 'border-red-300 bg-red-50' : 'border-gray-300'\n                    }`}\n                    placeholder=\"パスワードを再入力\"\n                    disabled={loading}\n                  />\n                  {validationErrors.confirmPassword && (\n                    <p className=\"mt-1 text-sm text-red-600\">{validationErrors.confirmPassword}</p>\n                  )}\n                </div>\n\n                {/* ユーザー名 */}\n                <div>\n                  <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    ユーザー名\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"username\"\n                    name=\"username\"\n                    value={formData.username}\n                    onChange={handleInputChange}\n                    className={`w-full px-4 py-3 border rounded-xl focus:ring-2 focus:ring-pink-500 focus:border-pink-500 transition-colors ${\n                      validationErrors.username ? 'border-red-300 bg-red-50' : 'border-gray-300'\n                    }`}\n                    placeholder=\"半角英数字とアンダースコア\"\n                    disabled={loading}\n                  />\n                  {validationErrors.username && (\n                    <p className=\"mt-1 text-sm text-red-600\">{validationErrors.username}</p>\n                  )}\n                </div>\n\n                {/* 表示名 */}\n                <div>\n                  <label htmlFor=\"displayName\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    表示名 <span className=\"text-gray-400 text-xs\">(任意)</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"displayName\"\n                    name=\"displayName\"\n                    value={formData.displayName}\n                    onChange={handleInputChange}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-pink-500 focus:border-pink-500 transition-colors\"\n                    placeholder=\"みんなに表示される名前\"\n                    disabled={loading}\n                  />\n                </div>\n\n                {/* 年齢・言語 */}\n                <div className=\"grid grid-cols-2 gap-3\">\n                  <div>\n                    <label htmlFor=\"age\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      年齢\n                    </label>\n                    <input\n                      type=\"number\"\n                      id=\"age\"\n                      name=\"age\"\n                      value={formData.age}\n                      onChange={handleInputChange}\n                      className={`w-full px-4 py-3 border rounded-xl focus:ring-2 focus:ring-pink-500 focus:border-pink-500 transition-colors ${\n                        validationErrors.age ? 'border-red-300 bg-red-50' : 'border-gray-300'\n                      }`}\n                      placeholder=\"15\"\n                      min=\"6\"\n                      max=\"100\"\n                      disabled={loading}\n                    />\n                    {validationErrors.age && (\n                      <p className=\"mt-1 text-sm text-red-600\">{validationErrors.age}</p>\n                    )}\n                  </div>\n                  \n                  <div>\n                    <label htmlFor=\"language\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      言語\n                    </label>\n                    <select\n                      id=\"language\"\n                      name=\"language\"\n                      value={formData.language}\n                      onChange={handleInputChange}\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-pink-500 focus:border-pink-500 transition-colors\"\n                      disabled={loading}\n                    >\n                      <option value=\"ja\">日本語</option>\n                      <option value=\"en\">English</option>\n                      <option value=\"ko\">한국어</option>\n                      <option value=\"zh\">中文</option>\n                    </select>\n                  </div>\n                </div>\n              </>\n            )}\n\n            {/* 送信ボタン */}\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"w-full bg-gradient-to-r from-pink-500 to-purple-600 text-white py-3 rounded-xl font-semibold hover:from-pink-600 hover:to-purple-700 focus:ring-4 focus:ring-pink-200 transition-all disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {loading ? (\n                <span className=\"flex items-center justify-center\">\n                  <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  処理中...\n                </span>\n              ) : (\n                <>\n                  {mode === 'signin' && 'ログイン'}\n                  {mode === 'signup' && 'アカウント作成'}\n                  {mode === 'reset' && 'リセットメール送信'}\n                </>\n              )}\n            </button>\n          </form>\n\n          {/* フッターリンク */}\n          <div className=\"mt-6 text-center text-sm\">\n            {mode === 'signin' && (\n              <>\n                <p className=\"text-gray-600\">\n                  まだアカウントをお持ちでない方は{' '}\n                  <button\n                    type=\"button\"\n                    onClick={() => setMode('signup')}\n                    className=\"text-pink-600 hover:text-pink-700 font-medium\"\n                    disabled={loading}\n                  >\n                    アカウント作成\n                  </button>\n                </p>\n                <p className=\"mt-2\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setMode('reset')}\n                    className=\"text-gray-500 hover:text-gray-700\"\n                    disabled={loading}\n                  >\n                    パスワードを忘れた方\n                  </button>\n                </p>\n              </>\n            )}\n            \n            {mode === 'signup' && (\n              <p className=\"text-gray-600\">\n                既にアカウントをお持ちの方は{' '}\n                <button\n                  type=\"button\"\n                  onClick={() => setMode('signin')}\n                  className=\"text-pink-600 hover:text-pink-700 font-medium\"\n                  disabled={loading}\n                >\n                  ログイン\n                </button>\n              </p>\n            )}\n            \n            {mode === 'reset' && (\n              <p className=\"text-gray-600\">\n                <button\n                  type=\"button\"\n                  onClick={() => setMode('signin')}\n                  className=\"text-pink-600 hover:text-pink-700 font-medium\"\n                  disabled={loading}\n                >\n                  ログインに戻る\n                </button>\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AuthModal"],"names":["AuthModal","isOpen","onClose","defaultMode","signIn","signUp","resetPassword","loading","error","clearError","useAuth","mode","setMode","useState","formData","setFormData","validationErrors","setValidationErrors","showPassword","setShowPassword","showParentalWarning","setShowParentalWarning","useEffect","handleEscape","e","validateForm","errors","age","handleSubmit","handleInputChange","name","value","prev","jsxs","jsx","Fragment"],"mappings":"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"}